Gadgets information
============================================================
0x00000000004640ac : adc ah, al ; stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000043e38f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e3f9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048dcbd : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000047eaaa : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004282a8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046122b : adc al, 0 ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx + 0xf]
0x0000000000426a95 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048d9da : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040ea11 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000445760 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x0000000000472998 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043f820 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043df4e : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000426c03 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000447cdf : adc al, 0xe ; cmp rdi, rdx ; jb 0x447ce9 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042b07a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042cd4a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000040409f : adc al, 0xf ; retf 0xfa83
0x000000000041370b : adc al, 0xf6 ; ret 0x7420
0x000000000048dd5d : adc al, 0xf7 ; ret
0x00000000004b04d1 : adc al, 0xf9 ; call qword ptr [rax + 1]
0x0000000000495bb9 : adc al, 0xfa ; call qword ptr [rax + 0x16]
0x0000000000495225 : adc al, 0xfa ; call qword ptr [rax]
0x00000000004252b6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000043e537 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e5a1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429c58 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040116a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004196b8 : adc al, ch ; retf 0xfe6d
0x00000000004255fa : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x00000000004abfa9 : adc bh, dh ; call rsp
0x0000000000495235 : adc bh, dl ; call qword ptr [rax + 0x12]
0x0000000000495bf1 : adc bh, dl ; call rax
0x0000000000495279 : adc bh, dl ; inc esi ; adc edx, edi ; call qword ptr [rsi + 0x11]
0x0000000000495144 : adc bl, bl ; stc ; push rax ; fdiv st(1), st(0) ; call rax
0x0000000000441c25 : adc bl, ch ; call 0xffffffffc414a574
0x0000000000441b45 : adc bl, ch ; call 0xffffffffc43ca494
0x00000000004838e2 : adc bl, ch ; jno 0x48392f ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000445096 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445107 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000445067 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445095 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047fd7a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000419f95 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000412659 : adc byte ptr [r13 + r9*4 + 0x44], cl ; and al, 0x10 ; call qword ptr [rbp + 0x18]
0x000000000048434e : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045ce79 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000484b63 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045c095 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045c876 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000048283f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000412392 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041957f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047ce7f : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004123bd : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042bf86 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x0000000000444eba : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x0000000000484b5d : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041f803 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041bb3c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041beb8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004247f6 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000482840 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000413e0e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000412393 : adc byte ptr [rax + 1], cl ; ret
0x0000000000411797 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000048acba : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044bd97 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000400f9e : adc byte ptr [rax - 0x39], cl ; ret 0
0x00000000004765f5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004165f3 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x000000000048985f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000409689 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x406190
0x000000000041d79d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044ce95 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000459798 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000471627 : adc byte ptr [rax - 0x77], cl ; jo 0x47163c ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004715e7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004715eb : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000422faf : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041eb71 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000419580 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000471a50 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000417d5f : adc byte ptr [rax - 0x78], al ; jl 0x417d79 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044b587 : adc byte ptr [rax - 0x7b], cl ; in eax, dx ; jne 0x44b5a0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c0f2 : adc byte ptr [rax - 0x7b], cl ; in eax, dx ; jne 0x44c118 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004121e3 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000441e07 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000441e43 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401170 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000041a633 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456478 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044b999 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000495ccc : adc byte ptr [rax - 6], ah ; call qword ptr [rax + 0x30fffa82]
0x0000000000480609 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x480658 ; mov esi, ebx ; syscall
0x000000000043dfe2 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042b0da : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043faf8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043fdec : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e741 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044a8f3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000448fbc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000428728 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043bff8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000495b2c : adc byte ptr [rax], dh ; cli ; call qword ptr [rax + 0x10fffa2f]
0x000000000048ec88 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048bae8 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045ce29 : adc byte ptr [rbp + 0x39], cl ; retf
0x000000000041265a : adc byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x10 ; call qword ptr [rbp + 0x18]
0x0000000000414a44 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411603 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000419f96 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b4827 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044cea3 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044cea2 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000419162 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471b1e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000494e7c : adc byte ptr [rbx - 0x6c6f0007], dl ; stc ; call qword ptr [rax]
0x0000000000407150 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x000000000041a34c : adc byte ptr [rbx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004123be : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000412ec0 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x0000000000472c23 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000045cb62 : adc byte ptr [rcx + rcx*4 - 9], cl ; call rbp
0x00000000004b04d0 : adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 1]
0x0000000000495ce0 : adc byte ptr [rcx - 0x754f0006], cl ; cli ; call qword ptr [rax - 0x74]
0x000000000044be02 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048b6ef : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048b51e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044b821 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000419ee7 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000483734 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045ce11 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042b10d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000049543c : adc byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x000000000048319a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b04cc : adc byte ptr [rcx], al ; add byte ptr [rax], dl ; adc al, 0xf9 ; call qword ptr [rax + 1]
0x0000000000449919 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000485e00 : adc byte ptr [rcx], bh ; retf 0x557f
0x000000000045dbfe : adc byte ptr [rcx], ch ; ret 0xc269
0x0000000000419165 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000495b64 : adc byte ptr [rcx], dh ; cli ; call qword ptr [rax + 0xfffa30]
0x0000000000412d07 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000495b34 : adc byte ptr [rdi], ch ; cli ; call qword ptr [rax + 0x10fffa2e]
0x000000000040408f : adc byte ptr [rdi], cl ; retf 0xd289
0x000000000048434f : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045ce7a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000445973 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042b4f1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b5e1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b401 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042be49 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042b9a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042b131 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042bb81 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b311 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042bd61 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042bc71 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b5b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b6a3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b4c3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b221 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042b3d3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b1f3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b2e3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b103 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045c096 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045c877 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044ad89 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000484a11 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x0000000000483d4d : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004adf0b : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000495b4c : adc byte ptr [rdx + rdi*8], ch ; call qword ptr [rax + 0xfffa2b]
0x0000000000494e74 : adc byte ptr [rdx - 0x6d6f0007], dl ; stc ; call qword ptr [rax]
0x000000000042dc0b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000495b44 : adc byte ptr [rip + 0x2c90fffa], ch ; cli ; call qword ptr [rax]
0x0000000000494c88 : adc byte ptr [rip + 0x2e30fff9], ch ; stc ; call qword ptr [rax + 0x2f]
0x000000000044790f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042daba : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042d0b5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004257e5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000439d0b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042582b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fsub st(1), st(0) ; imul edi, edi, -1 ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000494ea8 : adc byte ptr [rsi - 0x480f0007], dh ; stc ; call rax
0x0000000000495d00 : adc byte ptr [rsi - 0x684f0006], dl ; cli ; call qword ptr [rax - 0x67]
0x0000000000495c8c : adc byte ptr [rsi], bh ; cli ; call qword ptr [rax - 0x6f00059f]
0x0000000000495b3c : adc byte ptr [rsi], ch ; cli ; call qword ptr [rax + 0x10fffa2d]
0x00000000004251da : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000494b68 : adc ch, dh ; clc ; call rax
0x000000000044dff4 : adc cl, bh ; add cl, ch ; retf
0x0000000000495e24 : adc cl, bh ; cli ; push qword ptr [rax] ; stc ; cli ; call qword ptr [rax - 7]
0x0000000000495160 : adc cl, bl ; stc ; call rax
0x00000000004165f6 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045e35f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044d45a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000441b35 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045e362 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000486a3a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045d135 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000410ac5 : adc dh, dh ; ret 0x7420
0x000000000041d1ee : adc dh, dh ; ret 0xf0f
0x0000000000495bed : adc dl, bh ; call qword ptr [rax + 0x12]
0x000000000049528d : adc dl, bh ; call qword ptr [rsi + 0x26fffa0f]
0x0000000000495bad : adc dl, bh ; call rax
0x00000000004953c9 : adc dl, bh ; call rsp
0x0000000000495e44 : adc dl, bh ; cli ; push qword ptr [rax] ; cli ; cli ; call qword ptr [rax - 6]
0x00000000004953c5 : adc dl, bh ; inc dword ptr [rax + rdx - 6] ; call rsp
0x0000000000495289 : adc dl, bh ; inc dword ptr [rsi] ; adc dl, bh ; call qword ptr [rsi + 0x26fffa0f]
0x00000000004953c8 : adc dl, r15b ; call rsp
0x0000000000470e7b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045ba3d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004123af : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000048b73f : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040529f : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000004721b4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000045dc5e : adc dword ptr [rax - 0x7d], ecx ; rol dword ptr [rax + rcx*2], 0x83 ; ret 0x4904
0x000000000043fdeb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043e6d7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fcef : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004285a8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045c0a5 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000447f38 : adc dword ptr [rbx], eax ; ret
0x0000000000447eb1 : adc dword ptr [rbx], esp ; ret
0x0000000000439637 : adc dword ptr [rcx + 7], edi ; ret
0x0000000000447eac : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000048a3a6 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004392d2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000439296 : adc dword ptr [rcx - 1], edi ; ret
0x000000000044b59b : adc dword ptr [rcx - 3], ebx ; call qword ptr [rax + 0x87d8b48]
0x0000000000447f33 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447c93 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000447e15 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000447e1a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000447df2 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000447df7 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000419d1b : adc dword ptr [rdi - 2], esp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000439799 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000447c90 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000452022 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000447a8c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043673b : adc dword ptr [rdx + 0x28], ecx ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000047a99e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000447bbf : adc dword ptr [rsi + 3], edx ; ret
0x0000000000447c5c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000447a5e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048b966 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043e6d6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004252b4 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000495bf9 : adc eax, 0x16d0fffa ; cli ; call qword ptr [rax + 0x18]
0x0000000000424600 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x0000000000425490 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000425225 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000424599 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045ba19 : adc eax, 0x26009a ; je 0x45ba28 ; ret
0x000000000044e277 : adc eax, 0x26b83c ; pop rbx ; ret
0x00000000004245d0 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x0000000000419e84 : adc eax, 0x2a09a7 ; ret
0x00000000004a8884 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x0000000000474f3b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047c752 : adc eax, 0x4000003 ; ret
0x000000000047c6a2 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004246da : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000043e261 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046a4f5 : adc eax, 0x83fffffd ; ret
0x0000000000479851 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000429978 : adc eax, 0x894d0000 ; retf
0x0000000000417d63 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000047540a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000425554 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000425414 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x0000000000448ae4 : adc eax, 0xf880272 ; ret
0x0000000000474875 : adc eax, 0xfffd4416 ; cmove rax, rdx ; ret
0x000000000043fb4e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428428 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042459b : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000484ec9 : adc eax, eax ; ret
0x0000000000485006 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a8525 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000413a37 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004765fc : adc ebx, esi ; ret
0x0000000000417f7a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ebd1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000419fd1 : adc ecx, dword ptr [rax] ; sub al, byte ptr [rax] ; ret
0x0000000000458764 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000047fc1e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047fcbb : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000495bf5 : adc edi, edx ; call qword ptr [rax + 0x15]
0x00000000004952f1 : adc edi, edx ; call qword ptr [rdx + 0x22fffa12]
0x000000000049526d : adc edi, edx ; call qword ptr [rsi]
0x000000000049542d : adc edi, edx ; call rax
0x0000000000495429 : adc edi, edx ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x00000000004952ed : adc edi, edx ; inc dword ptr [rdx] ; adc edi, edx ; call qword ptr [rdx + 0x22fffa12]
0x0000000000495231 : adc edi, edx ; inc eax ; adc bh, dl ; call qword ptr [rax + 0x12]
0x0000000000495bb1 : adc edx, edi ; call qword ptr [rax + 0x13]
0x0000000000495245 : adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x000000000049543d : adc edx, edi ; call qword ptr [rax]
0x000000000049527d : adc edx, edi ; call qword ptr [rsi + 0x11]
0x0000000000495301 : adc edx, edi ; call rdx
0x0000000000495241 : adc edx, edi ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x00000000004952fd : adc edx, edi ; inc dword ptr [rdx + 0x11] ; cli ; call rdx
0x00000000004a9a3e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000417343 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048eafc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000410ac3 : adc esi, dword ptr [rdx + rdx - 0xa] ; ret 0x7420
0x0000000000413709 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x0000000000439636 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004392d1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000439295 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000439798 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000447bbe : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000447c5b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000447a5d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000485005 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004b094b : add ah, ah ; mov ecx, edi ; call qword ptr [rbp + 1]
0x00000000004b041b : add ah, al ; fdivr st(0) ; call qword ptr [rsi + 0x1b]
0x00000000004aef7f : add ah, al ; sub eax, dword ptr [rax] ; add ah, bh ; sal dh, cl ; call qword ptr [rax]
0x0000000000448f0e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000448feb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448f59 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004aef83 : add ah, bh ; sal dh, cl ; call qword ptr [rax]
0x00000000004b4f03 : add ah, bl ; retf
0x00000000004a9a67 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x0000000000447bba : add ah, byte ptr [rdx - 0xf] ; jl 0x447c07 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b374a : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004ad333 : add ah, ch ; cmp esi, esi ; call qword ptr [rdi]
0x00000000004b51af : add ah, dh ; lea eax, [rax] ; add byte ptr [rsp + rbx*8 - 4], ch ; call qword ptr [rdi + 1]
0x0000000000400a69 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x0000000000490044 : add ah, dl ; and al, byte ptr [rax] ; test eax, eax ; je 0x490050 ; ret
0x00000000004ac8db : add ah, dl ; mov ch, dh ; call rsp
0x00000000004b25fb : add ah, dl ; xchg eax, esp ; cli ; call qword ptr [rax]
0x00000000004540a3 : add al, 0 ; add bh, dh ; ret 0
0x0000000000454097 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000457d9f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000411f30 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000048cd0d : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042ba67 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000470196 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000440a0f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ba95 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048ec20 : add al, 0 ; add byte ptr [rax], al ; jne 0x48ec40 ; ret
0x0000000000475493 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044a44f : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000429328 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004731b0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a161 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ad64 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000040a020 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000425205 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000040ef37 : add al, 0 ; add rsp, 8 ; ret
0x000000000040122e : add al, 0 ; lea rdi, [rsp + 0x60] ; call 0x40dc40
0x000000000044cf02 : add al, 0 ; mov eax, 0x15 ; syscall
0x00000000004765fb : add al, 0x11 ; ret
0x0000000000448fa4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000426a91 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000426a2a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000487830 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048b867 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048b56b : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000048a764 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000414dd4 : add al, 0x24 ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [rax + 0x78]
0x000000000045ba7a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000484e1b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484e5e ; leave ; ret
0x000000000040ead7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000473fde : add al, 0x31 ; ret
0x0000000000473eda : add al, 0x37 ; ret
0x00000000004187ff : add al, 0x3a ; ret
0x00000000004a7b46 : add al, 0x3d ; retf
0x00000000004804f6 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x4804a1 ; xor eax, eax ; ret
0x00000000004455cb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000444ad9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000444aeb : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000048dd70 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x00000000004361da : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000443319 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004742b4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047b583 : add al, 0x49 ; add edi, eax ; call qword ptr [r15 + 0x60]
0x000000000047f286 : add al, 0x4c ; cmp ecx, eax ; jne 0x47f22b ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000474b78 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000444ae7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000443327 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000458762 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000454a29 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000045db8a : add al, 0x75 ; add eax, 0x18c48348 ; ret
0x000000000047e2fa : add al, 0x75 ; retf
0x000000000043df4b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043f823 : add al, 0x81 ; sub eax, edx ; ret
0x00000000004494e8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4494d0 ; ret
0x000000000043bb57 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000467ab9 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000474f69 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000444ad6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000443316 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000458e46 : add al, 0x89 ; retf
0x0000000000488ba9 : add al, 0x89 ; retf 0xeac0
0x00000000004494eb : add al, 0x8a ; je 0x4494d0 ; ret
0x0000000000417e87 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000045a051 : add al, 0xe8 ; test rax, rax ; je 0x45a05a ; call rax
0x0000000000455d30 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004667ed : add al, 0xe9 ; retf 0xfffb
0x000000000045776c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000485828 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b076 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000404aea : add al, 0xf ; retf
0x00000000004479cb : add al, 0xf ; sub rax, rsi ; ret
0x0000000000436543 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a74b : add al, 0xf3 ; ret
0x0000000000495655 : add al, 0xfa ; call qword ptr [rax + 4]
0x000000000049549d : add al, 0xfa ; call qword ptr [rsi + 0x3cfffa03]
0x00000000004955d9 : add al, 0xfa ; call rsp
0x0000000000495659 : add al, 0xfa ; inc eax ; add edi, edx ; call qword ptr [rax + 3]
0x00000000004b5809 : add al, 0xfd ; call qword ptr [rdi]
0x000000000040f137 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042e317 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000440f3d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000441158 : add al, 7 ; ret
0x0000000000426bff : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004aea7b : add al, al ; add byte ptr es:[rax], al ; nop ; mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004a465f : add al, al ; mov dl, 0xfc ; call rax
0x000000000049fe87 : add al, al ; sldt word ptr [rax] ; ret
0x000000000048dd22 : add al, bh ; call qword ptr [rax + 0x1f0f2e66]
0x000000000048dcdc : add al, bh ; call qword ptr [rax + 0x7f11fe83]
0x0000000000495df8 : add al, bh ; cli ; call qword ptr [rax]
0x0000000000449005 : add al, bh ; jg 0x449000 ; int1 ; mov eax, eax ; ret
0x00000000004b52b3 : add al, bh ; mov es, word ptr [rax] ; add byte ptr [rax - 0x21], bh ; cld ; call qword ptr [rdx]
0x00000000004b2793 : add al, bl ; movsxd rax, dword ptr [rax] ; add byte ptr [rax], bl ; std ; call rdx
0x0000000000470cce : add al, bpl ; retf
0x000000000040d882 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000441b31 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000452fcd : add al, byte ptr [rax] ; add al, ch ; pop rbx ; in al, dx ; cli ; call qword ptr [rax + 0x1f0f2e66]
0x000000000040116b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045646a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x000000000045609d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047bb00 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041ed1d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x0000000000460643 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042bf72 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000488c5e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045bb0d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401155 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000469984 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x00000000004241b3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047ce7a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478fb5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000470d6d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004484f4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004224ba : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045583b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042bc47 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f5e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bc75 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d883 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045ba02 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047e776 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000040dd0c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000004120c4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rbx + 0x80]
0x0000000000414191 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [r14 + 0x80]
0x0000000000415499 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x0000000000475224 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004ac5c5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; push rbp ; cmc ; call qword ptr [rbx + 1]
0x00000000004862ec : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x00000000004887ea : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004294a8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446f74 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000411996 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000486564 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046d964 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044b730 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041bb86 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004251b3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042459c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047e355 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x000000000048b962 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000044be05 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044cc5e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004acc95 : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000425581 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x000000000042536d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x000000000047c22a : add al, ch ; add byte ptr [rdx - 8], bl ; call qword ptr [rbp + 0x53]
0x0000000000487ea7 : add al, ch ; and ecx, dword ptr [rdi - 4] ; call qword ptr [rax + 0x538b3d83]
0x000000000046c15b : add al, ch ; call qword ptr [rdi]
0x0000000000467f7b : add al, ch ; call rdx
0x0000000000476a90 : add al, ch ; cmp ah, byte ptr [rbx - 3] ; call qword ptr [rax + 0x31f1894c]
0x0000000000403453 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000044c439 : add al, ch ; int1 ; push rdi ; sti ; call qword ptr [rax + 0x48ff3155]
0x0000000000457139 : add al, ch ; int1 ; stosb byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x56415741]
0x0000000000401111 : add al, ch ; leave ; ret
0x000000000044a09e : add al, ch ; lodsb al, byte ptr [rsi] ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040112e : add al, ch ; lodsb al, byte ptr [rsi] ; ret
0x000000000042209f : add al, ch ; mov edi, dword ptr [rdi - 1] ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000455d6c : add al, ch ; mov esi, 0x89fffabe ; ret 0xe283
0x0000000000477d6d : add al, ch ; pop rbp ; push rax ; std ; call qword ptr [rax - 0x1107a3a]
0x0000000000452fcf : add al, ch ; pop rbx ; in al, dx ; cli ; call qword ptr [rax + 0x1f0f2e66]
0x000000000047099b : add al, ch ; pop rdi ; ret 0xfffd
0x0000000000400ba6 : add al, ch ; ret
0x0000000000422868 : add al, ch ; ret 0x2a3
0x000000000047bb38 : add al, ch ; ret 0xb844
0x0000000000450538 : add al, ch ; ret 0xbafa
0x00000000004868d8 : add al, ch ; ret 0xffc7
0x00000000004109ec : add al, ch ; ret 3
0x000000000040247f : add al, ch ; retf
0x00000000004797d0 : add al, ch ; retf 0x98
0x0000000000454d60 : add al, ch ; retf 0xface
0x00000000004799b0 : add al, ch ; retf 0xffdc
0x000000000044e22f : add al, ch ; sti ; cmp ebx, edi ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000410980 : add al, ch ; stosb byte ptr [rdi], al ; ret 3
0x000000000042248f : add al, ch ; wait ; jnp 0x422493 ; call qword ptr [rax + 0x1f0f2e66]
0x000000000040345f : add al, ch ; wait ; retf
0x0000000000400c83 : add al, ch ; xchg ebx, esi ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004b5807 : add al, cl ; add al, 0xfd ; call qword ptr [rdi]
0x00000000004b0407 : add al, cl ; fdivr st(0) ; call qword ptr [rax]
0x00000000004ac8c7 : add al, cl ; mov ch, dh ; call qword ptr [rdx]
0x00000000004b25e7 : add al, cl ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004ad2cf : add al, dh ; cmp dh, dh ; call qword ptr [rax]
0x00000000004b39ab : add al, dh ; jne 0x4b39af ; add byte ptr [rax - 8], ah ; sti ; call qword ptr [rsi + 1]
0x00000000004b4ecf : add al, dh ; retf 0xfffc
0x00000000004b54ff : add al, dl ; clc ; cld ; call qword ptr [rbx]
0x00000000004b0e1f : add al, dl ; pushfq ; stc ; call qword ptr [rbx]
0x00000000004b4d3e : add bh, ah ; ret
0x000000000049511c : add bh, ah ; stc ; call qword ptr [rax + 0x50fff9d9]
0x000000000044f6df : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045f997 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ebcf : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040116d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048642f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000485099 : add bh, byte ptr [rax + 1] ; ret
0x00000000004851f6 : add bh, byte ptr [rax + 2] ; ret
0x000000000044a46b : add bh, byte ptr [rax - 1] ; ret
0x0000000000447342 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004957e8 : add bh, byte ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa39]
0x0000000000400f3a : add bh, dh ; ret 0
0x0000000000454099 : add bh, dh ; ret 0xf800
0x000000000040f297 : add bh, dh ; ret 0xffef
0x0000000000475221 : add bl, al ; mov eax, 2 ; ret
0x0000000000488c7a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000464509 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x46449a ; ret
0x000000000048ab8b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x00000000004866f9 : add bl, ch ; ret
0x000000000040f570 : add bl, ch ; ret 0x1f0f
0x000000000048b963 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a6f : add bl, dh ; ret
0x000000000041be7e : add bl, sil ; ret
0x000000000044b773 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000456293 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045627e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000004562a8 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000483355 : add byte ptr [r8 + 0x39], r9b ; retf
0x0000000000482180 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000473456 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000456245 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000400b05 : add byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdx + rcx - 0x41], 0xe8 ; ret
0x000000000040e2ca : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b04cd : add byte ptr [r8], al ; adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 1]
0x00000000004b0771 : add byte ptr [r8], al ; cmp al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004b06f9 : add byte ptr [r8], al ; jns 0x4b06f8 ; call rsp
0x00000000004b0949 : add byte ptr [r8], r8b ; in al, 0x89 ; stc ; call qword ptr [rbp + 1]
0x000000000047635b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000044cf03 : add byte ptr [rax + 0x15], bh ; syscall
0x00000000004242af : add byte ptr [rax + 0x16], bh ; ret
0x00000000004b6943 : add byte ptr [rax + 0x180000a5], cl ; xchg eax, edi ; std ; call qword ptr [rdx]
0x000000000044a3bf : add byte ptr [rax + 0x18], bh ; syscall
0x000000000044a3be : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044b4af : add byte ptr [rax + 0x1c], bh ; syscall
0x000000000048911f : add byte ptr [rax + 0x26], bh ; syscall
0x00000000004b424f : add byte ptr [rax + 0x28], ah ; cld ; call qword ptr [rax + 5]
0x0000000000412fb0 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000453821 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000454387 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000466cc8 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004778b8 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047b48a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000422ee4 : add byte ptr [rax + 0x29], cl ; retf
0x000000000045646c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000466079 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047f430 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000040ebaf : add byte ptr [rax + 0x39], cl ; ret
0x000000000048bb63 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041ae8f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000413f8f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048bbf8 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047bb02 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041dd50 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x0000000000478e5e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000483356 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042ebb6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004354af : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041ed1f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004116cd : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000447ae8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042e6d6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000448df3 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000448c30 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004864c8 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004b042b : add byte ptr [rax + 0x40], dh ; add byte ptr [rax], al ; push rax ; hlt ; clc ; call qword ptr [rax]
0x000000000044a8f6 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004acd3b : add byte ptr [rax + 0x50000009], al ; sbb esi, esi ; call rsp
0x00000000004b604f : add byte ptr [rax + 0x56], dh ; std ; call qword ptr [rdx]
0x00000000004b424b : add byte ptr [rax + 0x6000007e], dl ; sub ah, bh ; call qword ptr [rax + 5]
0x000000000045a5a7 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048d633 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000469675 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000004727bf : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x0000000000470473 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045eac1 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004b2dff : add byte ptr [rax + 0x66], ah ; sti ; call rbp
0x000000000047612f : add byte ptr [rax + 0x66], bh ; syscall
0x000000000047614f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000047613f : add byte ptr [rax + 0x6b], bh ; syscall
0x0000000000449e2f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004b604b : add byte ptr [rax + 0x7000009c], dl ; push rsi ; std ; call qword ptr [rdx]
0x00000000004b05bf : add byte ptr [rax + 0x72], al ; stc ; call qword ptr [rdi]
0x00000000004ac777 : add byte ptr [rax + 0x72], bh ; cmc ; call qword ptr [rbp + 2]
0x000000000048a3a3 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000441b2f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004ac773 : add byte ptr [rax + 0x78000003], bh ; jb 0x4ac770 ; call qword ptr [rbp + 2]
0x000000000044556f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044b47f : add byte ptr [rax + 0xa], bh ; syscall
0x000000000044b44f : add byte ptr [rax + 0xb], bh ; syscall
0x000000000044cc41 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000044a134 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dd0f : add byte ptr [rax + 0xe], bh ; syscall
0x00000000004254d9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000448f87 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041630f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473e45 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000450abf : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041db04 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047bc96 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000424624 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000413cba : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041ebb3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047bce5 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000448efa : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042459d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042529d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000454eb8 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048505c : add byte ptr [rax + 1], bh ; ret
0x000000000044a80f : add byte ptr [rax + 1], bh ; syscall
0x000000000042bf74 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411f32 : add byte ptr [rax + 1], cl ; ret
0x0000000000484268 : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000488c60 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000043556d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044da80 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000402fb0 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000451945 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000485265 : add byte ptr [rax + 2], bh ; ret
0x000000000044aabf : add byte ptr [rax + 3], bh ; syscall
0x00000000004b5857 : add byte ptr [rax + 6], cl ; std ; call qword ptr [rax]
0x000000000044a83f : add byte ptr [rax + 8], bh ; syscall
0x000000000044a83e : add byte ptr [rax + 8], dil ; syscall
0x0000000000482181 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000476d40 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049ee2b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004b043f : add byte ptr [rax + rax*2 - 0xbb40000], al ; clc ; call qword ptr [rsi + 0x16]
0x00000000004b0417 : add byte ptr [rax + rax*2], bl ; add ah, al ; fdivr st(0) ; call qword ptr [rsi + 0x1b]
0x0000000000451313 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000004731af : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000425204 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041ea5b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000474857 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000045ba1d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045bb0f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000049ffd7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000046ffe7 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047c554 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000041df6f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b52b7 : add byte ptr [rax - 0x21], bh ; cld ; call qword ptr [rdx]
0x00000000004b1567 : add byte ptr [rax - 0x33], bh ; stc ; call qword ptr [rbp + 0xb]
0x0000000000401157 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000410653 : add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x000000000046606b : add byte ptr [rax - 0x39], cl ; ret 0xc388
0x000000000045e34f : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dd37 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004241b5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000468ff5 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000047547f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047545f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004754bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047546f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004754af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045bc0f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000459769 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000459740 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000004590a0 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000483255 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004b5553 : add byte ptr [rax - 0x47ffff6f], bl ; cli ; cld ; call qword ptr [rax]
0x00000000004b084b : add byte ptr [rax - 0x5fffffbc], dl ; test cl, bh ; call qword ptr [rbx]
0x00000000004b6023 : add byte ptr [rax - 0x64], ch ; add byte ptr [rax], al ; enter -0x2ac, -1 ; ret
0x00000000004b54fb : add byte ptr [rax - 0x6f], al ; add byte ptr [rax], al ; sar al, 1 ; cld ; call qword ptr [rbx]
0x000000000045603a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x00000000004581bd : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044e23f : add byte ptr [rax - 0x73], cl ; add eax, 0x26d0b9 ; ret
0x00000000004581db : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004581f9 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000478b06 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000411dc1 : add byte ptr [rax - 0x73], cl ; je 0x411dea ; xor byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rdx + 0x90]
0x00000000004834d7 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041d1ea : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041f7ff : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041bb38 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048237b : add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000047ce7c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041a62f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000486a37 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048b568 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000004588bf : add byte ptr [rax - 0x75], cl ; add eax, 0x264671 ; ret
0x000000000045035f : add byte ptr [rax - 0x75], cl ; add eax, 0x26d681 ; ret
0x000000000041945f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a0cb9 ; ret
0x000000000040e06b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044f79f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042368f : add byte ptr [rax - 0x75], cl ; je 0x4236b8 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045c4ab : add byte ptr [rax - 0x75], cl ; jl 0x45c4d4 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040eb02 : add byte ptr [rax - 0x75], cl ; js 0x40eb27 ; call rdx
0x0000000000472aaf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000487780 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000401f53 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000040101d : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004300ff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000045e00f : add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x00000000004835d2 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000004130cf : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000004ac8d7 : add byte ptr [rax - 0x772c0000], bl ; cmc ; call rsp
0x0000000000471a4d : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004854f6 : add byte ptr [rax - 0x77], cl ; add eax, 0x237c2a ; ret
0x000000000041a4fa : add byte ptr [rax - 0x77], cl ; add eax, 0x2a035e ; ret
0x0000000000419ff5 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a07f3 ; ret
0x0000000000419fcd : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0813 ; ret
0x0000000000419fad : add byte ptr [rax - 0x77], cl ; add eax, 0x2a082b ; ret
0x0000000000413752 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004154b3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000456246 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004111e4 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; call qword ptr [r13 + 0x38]
0x0000000000478df0 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; in al, dx ; or al, ch ; retf
0x0000000000455c30 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048c00e : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000041904b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000401901 : add byte ptr [rax - 0x77], cl ; jbe 0x401916 ; syscall
0x000000000044ceaf : add byte ptr [rax - 0x77], cl ; jo 0x44ced4 ; ret
0x000000000048060b : add byte ptr [rax - 0x77], cl ; jrcxz 0x480658 ; mov esi, ebx ; syscall
0x00000000004138a3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000450c3c : add byte ptr [rax - 0x77], cl ; mov r8b, 0xe8 ; retf 0xffad
0x0000000000470842 : add byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rbx + 0x90]
0x0000000000414f59 : add byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [r13 + 0x90]
0x0000000000413c83 : add byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [r15 + 0x90]
0x000000000042430f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000411ebe : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbp + 0x20]
0x000000000040398f : add byte ptr [rax - 0x77], cl ; ret
0x000000000044a2cb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041ea07 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000412006 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000413eda : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048f3dc : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000044a377 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402efe : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x0000000000460b78 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041bcbc : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402c7f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000410cb8 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000048eb2f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004572a8 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403293 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046b1b7 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040fcdd : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000415638 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044a2e2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000449d47 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043dfe4 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042b0dc : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045f2db : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000411a37 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000456847 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042b01a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456ff9 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043de66 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043f9dc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000447d50 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000482771 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048d74f : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047c203 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000410bef : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048b646 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004742af : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047250b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000046e15d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004642b9 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000400b06 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx - 0x41], 0xe8 ; ret
0x000000000048cd0f : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x00000000004b07ff : add byte ptr [rax - 0x7d], ah ; stc ; call qword ptr [rbx]
0x000000000048f88e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004209bc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041ddf7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041da54 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x00000000004804ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042455d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401bb9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000041204a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000004628b3 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048b371 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041788f : add byte ptr [rax - 0x7d], cl ; jg 0x4178cc ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004724c6 : add byte ptr [rax - 0x7d], cl ; js 0x4724fb ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040609f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000044743f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044d257 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046ffb7 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f3df : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456f04 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004864af : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047e77a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045eaa4 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042b109 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f497 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048eb0f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000470198 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424f60 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043e0c3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b137 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047ea37 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041aada : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000422fe9 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040d885 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041dbf0 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040d8e5 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000426b3f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004743ef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000048a112 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004b07af : add byte ptr [rax - 0x7e], ah ; stc ; call qword ptr [rax]
0x0000000000418a60 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000422861 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2a3
0x0000000000416a28 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000045ba04 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000433d6b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048b96f : add byte ptr [rax - 0x80], al ; call qword ptr [rax + 0x49]
0x000000000048ec97 : add byte ptr [rax - 0x80], al ; call qword ptr [rax + 0x74]
0x00000000004aceeb : add byte ptr [rax - 0xa], ah ; call qword ptr [rdx]
0x00000000004acf13 : add byte ptr [rax - 0xa], ch ; call qword ptr [rdx]
0x00000000004b042f : add byte ptr [rax - 0xc], dl ; clc ; call qword ptr [rax]
0x0000000000412a6a : add byte ptr [rax - 1], bh ; ret
0x00000000004b39af : add byte ptr [rax - 8], ah ; sti ; call qword ptr [rsi + 1]
0x0000000000470998 : add byte ptr [rax], 0 ; add al, ch ; pop rdi ; ret 0xfffd
0x0000000000411264 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000422865 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2a3
0x00000000004109e9 : add byte ptr [rax], 0 ; add al, ch ; ret 3
0x0000000000416a2c : add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000004799ad : add byte ptr [rax], 0 ; add al, ch ; retf 0xffdc
0x000000000041097d : add byte ptr [rax], 0 ; add al, ch ; stosb byte ptr [rdi], al ; ret 3
0x00000000004167da : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000448c2d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000043556a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000415635 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043654b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000448f3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000419273 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042cdcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a73b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042d331 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b01ff : add byte ptr [rax], ah ; ret 0xfff7
0x00000000004b04ce : add byte ptr [rax], al ; adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 1]
0x00000000004b04ca : add byte ptr [rax], al ; adc byte ptr [rcx], al ; add byte ptr [rax], dl ; adc al, 0xf9 ; call qword ptr [rax + 1]
0x00000000004a465d : add byte ptr [rax], al ; add al, al ; mov dl, 0xfc ; call rax
0x0000000000487ea5 : add byte ptr [rax], al ; add al, ch ; and ecx, dword ptr [rdi - 4] ; call qword ptr [rax + 0x538b3d83]
0x000000000046c159 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rdi]
0x0000000000467f79 : add byte ptr [rax], al ; add al, ch ; call rdx
0x0000000000476a8e : add byte ptr [rax], al ; add al, ch ; cmp ah, byte ptr [rbx - 3] ; call qword ptr [rax + 0x31f1894c]
0x000000000044c437 : add byte ptr [rax], al ; add al, ch ; int1 ; push rdi ; sti ; call qword ptr [rax + 0x48ff3155]
0x0000000000477d6b : add byte ptr [rax], al ; add al, ch ; pop rbp ; push rax ; std ; call qword ptr [rax - 0x1107a3a]
0x0000000000470999 : add byte ptr [rax], al ; add al, ch ; pop rdi ; ret 0xfffd
0x0000000000400ba4 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000422866 : add byte ptr [rax], al ; add al, ch ; ret 0x2a3
0x00000000004868d6 : add byte ptr [rax], al ; add al, ch ; ret 0xffc7
0x00000000004109ea : add byte ptr [rax], al ; add al, ch ; ret 3
0x000000000040247d : add byte ptr [rax], al ; add al, ch ; retf
0x00000000004797ce : add byte ptr [rax], al ; add al, ch ; retf 0x98
0x00000000004799ae : add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x000000000044e22d : add byte ptr [rax], al ; add al, ch ; sti ; cmp ebx, edi ; call qword ptr [rax + 0x1f0f2e66]
0x000000000041097e : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; ret 3
0x000000000045f9de : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ebcd : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048642d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047521f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000004866f7 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f56e : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004167db : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000048911d : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x00000000004699d8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000466cc6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004778b6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047b488 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000466077 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047f42e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000042002f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048bb61 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041ae8d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000413f8d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048bbf6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042ebb4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000437fa1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004116cb : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000448c2e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000044a8f4 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000046c0f4 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004727bd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000047614d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000047613d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x0000000000449e2d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x000000000044556d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044b44d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044cc3f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000044a132 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dd0d : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x0000000000448f85 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041db02 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000485c72 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000453ea2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041ebb1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000448ef8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000474f3d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000454eb6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048505a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000044a80d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000483b99 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000484266 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000043556b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000451943 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000485263 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000046ffe5 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000044b2a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000410651 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x000000000045e34d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044a70d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000459767 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045973e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045909e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000483253 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004581bb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x00000000004581d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004581f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000482379 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000041a62d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040eb00 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40eb27 ; call rdx
0x0000000000401f51 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000045e00d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000041948d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004111e2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; call qword ptr [r13 + 0x38]
0x0000000000455c2e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048c00c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004018ff : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x401916 ; syscall
0x000000000044cead : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44ced4 ; ret
0x0000000000470840 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rbx + 0x90]
0x000000000042430d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000411ebc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbp + 0x20]
0x0000000000410c31 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000412004 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000460fd4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041c68d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048eb2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046b455 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040fcdb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000415636 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044c2a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045f2d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042b018 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456ff7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043de64 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043f9da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048d74d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048b644 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000046e15b : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040609d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044743d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f3dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004864ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047e778 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042be23 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048eb0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000047376e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f781 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042be4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000426b3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000048a110 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000435564 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000049058d : add byte ptr [rax], al ; add byte ptr [rax - 0x80], al ; call qword ptr [rax + 0x49]
0x0000000000412a68 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004a465b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; mov dl, 0xfc ; call rax
0x00000000004158cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040ebcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048642b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000041944b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000413f8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004727bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045e34b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044a70b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041948b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044ceab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44ced4 ; ret
0x000000000041c68b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048eb2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048d74b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000040609b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044743b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f3db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048eb0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000049058b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x80], al ; call qword ptr [rax + 0x49]
0x0000000000418076 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0cb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a11a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a0362 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a0cf2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a11e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004a035a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000419deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044767b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000426e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042579b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000045a83b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000413a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041ab8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004234bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044b3eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047543c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000048261f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ebcc : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041aafc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004a262c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbp
0x000000000048642c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a2cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a1e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000448ef7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004b05bb : add byte ptr [rax], al ; add byte ptr [rax], al ; jb 0x4b05bc ; call qword ptr [rdi]
0x000000000048dd14 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48dcf5 ; ret
0x0000000000445b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000445bac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000445bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000445bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000445bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000445b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000445b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000445b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000445b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000445b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000445b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000445b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000445b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000445b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044556c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000048911c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000047614c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047613c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x0000000000449e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044b44c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041940c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000485059 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044a80c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000485262 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000449dec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043654c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044ceac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000048262c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041947c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041948c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000481acc : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000413a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000448f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043669c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000419dec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004125cc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000418078 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a1cac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a2444 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0cb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a11a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a0364 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a1ce4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a2484 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004a0cf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a11e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004a035c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x400412 ; call rax
0x000000000042c67c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000041838c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a73c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000047429c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000410b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x000000000044594c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000481a0c : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x00000000004b4ee9 : add byte ptr [rax], al ; add byte ptr [rax], dh ; mov eax, dword ptr [rax] ; add byte ptr [rax], al ; retf
0x00000000004aeee9 : add byte ptr [rax], al ; add byte ptr [rax], dh ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; retf
0x00000000004b4ec9 : add byte ptr [rax], al ; add byte ptr [rax], dl ; mov eax, dword ptr [rax] ; add al, dh ; retf 0xfffc
0x000000000044a424 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000485bad : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048ec21 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004764ab : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000004829b2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x00000000004828f2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004587e5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482b13 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000484e1e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a654 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000476379 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000449e78 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x38 ; ret
0x00000000004ac3ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], ch ; cmc ; call qword ptr [rdx]
0x000000000044a9e4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044b353 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488f08 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045bb5c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000485aca : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048dd56 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041fdc9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044cae8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042bdd8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b28ba : add byte ptr [rax], al ; add byte ptr [rbp], ah ; add byte ptr [rax], dl ; mov al, 0xfa ; call qword ptr [rbx]
0x0000000000458a19 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000435e2d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000414fe2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417f94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004105f9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048dd15 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004b4efd : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4], al ; add ah, bl ; retf
0x0000000000466dfa : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000046128b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004122f4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004618ff : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046d6b8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x000000000046a3c6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046e639 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044767d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e253 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000412109 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [r13 + 0x20]
0x0000000000492bfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004909ad : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbp
0x0000000000417c9e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], al ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000414908 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x000000000047467d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000047110a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbp ; call qword ptr [rax + 0x38]
0x0000000000412333 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rbp + 0x80]
0x00000000004120c5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rbx + 0x80]
0x000000000049235d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000424c4d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044c188 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c18f ; call r12
0x000000000044c1b8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c1bf ; call r12
0x0000000000459489 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004601f1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040492e : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000047a882 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041dc25 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000426e8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042579d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042c850 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042c876 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000044b403 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ede2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042c15a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000410b5d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000048da83 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048daab : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048e7fa : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000045a83d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000464233 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040dce4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481bb4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000448e85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043662d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043669d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000455189 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000448f3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000413a0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042c19d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000459789 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000466491 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x00000000004773e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048dc85 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b65ba : add byte ptr [rax], al ; add byte ptr [rdx - 0x7dd00000], ah ; std ; call qword ptr [rbx]
0x00000000004b05ba : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax + 0x72], al ; stc ; call qword ptr [rdi]
0x0000000000485de0 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042d332 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041ab8d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042c0c2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000411bb4 : add byte ptr [rax], al ; add byte ptr [rsi - 1], bh ; call qword ptr [r13 + 0x18]
0x0000000000456303 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045fc18 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000455ab6 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000424124 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048b68e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000476983 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000451f0c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004234bd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044b3ed : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000446dd1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000047543e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042bf73 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000412692 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048dcc0 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004853ec : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048b783 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000416f0b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044a549 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000044a8dc : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000040164c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044c07e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045d977 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b64da : add byte ptr [rax], al ; and byte ptr [rcx + 0x7d800000], ah ; std ; call qword ptr [rdx + 1]
0x0000000000448f86 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004aceea : add byte ptr [rax], al ; and dh, dh ; call qword ptr [rdx]
0x000000000042c19e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004417c0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000473e44 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000047099a : add byte ptr [rax], al ; call 0x44cc00
0x000000000041097f : add byte ptr [rax], al ; call 0x44cc30
0x00000000004b0246 : add byte ptr [rax], al ; call 0xffffffffd54afa16
0x0000000000415630 : add byte ptr [rax], al ; call qword ptr [r15 + 0x80]
0x00000000004724e1 : add byte ptr [rax], al ; call qword ptr [rax + 0x68]
0x000000000040116c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040ebce : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048da89 : add byte ptr [rax], al ; call r14
0x000000000040eadb : add byte ptr [rax], al ; call rax
0x000000000044b50e : add byte ptr [rax], al ; call rbp
0x000000000048642e : add byte ptr [rax], al ; call rbx
0x00000000004a2cde : add byte ptr [rax], al ; call rdi
0x000000000040ea15 : add byte ptr [rax], al ; call rdx
0x00000000004a1e8e : add byte ptr [rax], al ; call rsp
0x0000000000449004 : add byte ptr [rax], al ; clc ; jg 0x449000 ; int1 ; mov eax, eax ; ret
0x00000000004b52b2 : add byte ptr [rax], al ; clc ; mov es, word ptr [rax] ; add byte ptr [rax - 0x21], bh ; cld ; call qword ptr [rdx]
0x00000000004aef82 : add byte ptr [rax], al ; cld ; sal dh, cl ; call qword ptr [rax]
0x0000000000448f31 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000448ef9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004251dc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004245d3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b06f6 : add byte ptr [rax], al ; cmp al, 0x43 ; add byte ptr [rax], al ; jns 0x4b06f8 ; call rsp
0x00000000004b0ff6 : add byte ptr [rax], al ; cmp al, 0x4c ; add byte ptr [rax], al ; xor al, 0xa6 ; stc ; call rsi
0x00000000004b0772 : add byte ptr [rax], al ; cmp al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004b1af6 : add byte ptr [rax], al ; cmp bh, bh ; stc ; call qword ptr [rax]
0x0000000000420447 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x420410 ; ret
0x00000000004b5c52 : add byte ptr [rax], al ; cwde ; cwde ; add byte ptr [rax], al ; fsubr dword ptr [rdi] ; std ; call qword ptr [rbx]
0x00000000004b6026 : add byte ptr [rax], al ; enter -0x2ac, -1 ; ret
0x000000000049ee3a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a2e8e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049ffe6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x000000000049f7e6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049fbe6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a308e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a328e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a348e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a368e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a388e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a3a8e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a3c8e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a3e8e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a408e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004b58c6 : add byte ptr [rax], al ; fadd dword ptr [rdi] ; std ; call qword ptr [rbx + 1]
0x00000000004aecf2 : add byte ptr [rax], al ; fst qword ptr [rdi] ; cmc ; call qword ptr [rsi]
0x00000000004b2792 : add byte ptr [rax], al ; fsub dword ptr [rbx] ; add byte ptr [rax], bl ; std ; call rdx
0x00000000004b5c56 : add byte ptr [rax], al ; fsubr dword ptr [rdi] ; std ; call qword ptr [rbx]
0x00000000004b0442 : add byte ptr [rax], al ; hlt ; clc ; call qword ptr [rsi + 0x16]
0x00000000004b51ae : add byte ptr [rax], al ; hlt ; lea eax, [rax] ; add byte ptr [rsp + rbx*8 - 4], ch ; call qword ptr [rdi + 1]
0x0000000000400a68 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004b094a : add byte ptr [rax], al ; in al, 0x89 ; stc ; call qword ptr [rbp + 1]
0x00000000004ad332 : add byte ptr [rax], al ; in al, dx ; cmp esi, esi ; call qword ptr [rdi]
0x00000000004acf12 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and dh, dh ; call qword ptr [rdx]
0x00000000004b51b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fdiv st(4), st(0) ; call qword ptr [rdi + 1]
0x00000000004ac3ee : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rdx]
0x000000000048e7fb : add byte ptr [rax], al ; ja 0x48e801 ; sbb eax, eax ; ret
0x00000000004b05be : add byte ptr [rax], al ; jb 0x4b05bc ; call qword ptr [rdi]
0x00000000004136a6 : add byte ptr [rax], al ; je 0x4136ac ; ret
0x0000000000425240 : add byte ptr [rax], al ; je 0x42520a ; ret
0x0000000000474859 : add byte ptr [rax], al ; je 0x474860 ; ret
0x000000000048dc86 : add byte ptr [rax], al ; je 0x48dc6c ; add rsp, 0x18 ; ret
0x000000000048dd16 : add byte ptr [rax], al ; je 0x48dcf5 ; ret
0x000000000048dd57 : add byte ptr [rax], al ; je 0x48dd60 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004ad32e : add byte ptr [rax], al ; je 0x4ad341 ; add byte ptr [rax], al ; in al, dx ; cmp esi, esi ; call qword ptr [rdi]
0x00000000004b225a : add byte ptr [rax], al ; je 0x4b22d1 ; cli ; call qword ptr [rdx]
0x000000000041ad6e : add byte ptr [rax], al ; jne 0x41ad78 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042ce32 : add byte ptr [rax], al ; jne 0x42cd40 ; ret
0x00000000004495cd : add byte ptr [rax], al ; jne 0x4495f4 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449e5a : add byte ptr [rax], al ; jne 0x449e88 ; mov eax, 0x77 ; syscall
0x0000000000449e79 : add byte ptr [rax], al ; jne 0x449ec3 ; add rsp, 0x38 ; ret
0x000000000044a425 : add byte ptr [rax], al ; jne 0x44a439 ; add rsp, 0x28 ; ret
0x000000000044a655 : add byte ptr [rax], al ; jne 0x44a69b ; add rsp, 0x58 ; ret
0x000000000044a9e5 : add byte ptr [rax], al ; jne 0x44aa33 ; add rsp, 0x68 ; ret
0x000000000044b354 : add byte ptr [rax], al ; jne 0x44b367 ; add rsp, 0x28 ; ret
0x000000000045bb5d : add byte ptr [rax], al ; jne 0x45bb66 ; add rsp, 0x18 ; ret
0x000000000047637a : add byte ptr [rax], al ; jne 0x4763c3 ; add rsp, 0x58 ; ret
0x00000000004764ac : add byte ptr [rax], al ; jne 0x4764cb ; add rsp, 0x38 ; ret
0x00000000004827f8 : add byte ptr [rax], al ; jne 0x482802 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004828f3 : add byte ptr [rax], al ; jne 0x482923 ; add rsp, 0x38 ; ret
0x00000000004829b3 : add byte ptr [rax], al ; jne 0x4829de ; add rsp, 0x68 ; ret
0x0000000000482b14 : add byte ptr [rax], al ; jne 0x482b4e ; add rsp, 0x78 ; ret
0x0000000000482de3 : add byte ptr [rax], al ; jne 0x482e0e ; add rsp, 0x68 ; ret
0x0000000000484e1f : add byte ptr [rax], al ; jne 0x484e5e ; leave ; ret
0x0000000000485acb : add byte ptr [rax], al ; jne 0x485ad4 ; add rsp, 0x38 ; ret
0x0000000000485bae : add byte ptr [rax], al ; jne 0x485bc4 ; add rsp, 0x38 ; ret
0x0000000000488379 : add byte ptr [rax], al ; jne 0x48837f ; pop rbx ; ret
0x0000000000488f09 : add byte ptr [rax], al ; jne 0x488f1c ; add rsp, 0x38 ; ret
0x000000000048ec22 : add byte ptr [rax], al ; jne 0x48ec40 ; ret
0x00000000004b06fa : add byte ptr [rax], al ; jns 0x4b06f8 ; call rsp
0x00000000004b042a : add byte ptr [rax], al ; jo 0x4b046e ; add byte ptr [rax], al ; push rax ; hlt ; clc ; call qword ptr [rax]
0x00000000004b604e : add byte ptr [rax], al ; jo 0x4b60a8 ; std ; call qword ptr [rdx]
0x00000000004ac776 : add byte ptr [rax], al ; js 0x4ac7ec ; cmc ; call qword ptr [rbp + 2]
0x00000000004b1566 : add byte ptr [rax], al ; js 0x4b1537 ; stc ; call qword ptr [rbp + 0xb]
0x00000000004b52b6 : add byte ptr [rax], al ; js 0x4b5299 ; cld ; call qword ptr [rdx]
0x0000000000445b9e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000445bae : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000445bbe : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000445bce : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000445bde : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000445afd : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000445b1e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000445b2e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000445b3e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000445b4e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000445b5e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000445b6e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000445aaa : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000445b7e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000445b8e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000445b0e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044e23e : add byte ptr [rax], al ; lea rax, [rip + 0x26d0b9] ; ret
0x0000000000476984 : add byte ptr [rax], al ; leave ; ret
0x00000000004b0862 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test cl, bh ; call qword ptr [rcx + 1]
0x00000000004b076e : add byte ptr [rax], al ; mov ah, 0x43 ; add byte ptr [rax], al ; cmp al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004b25be : add byte ptr [rax], al ; mov al, 0x94 ; cli ; call qword ptr [rcx]
0x0000000000444a7e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004432ce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004b6942 : add byte ptr [rax], al ; mov byte ptr [rbp - 0x68e80000], ah ; std ; call qword ptr [rdx]
0x00000000004b0066 : add byte ptr [rax], al ; mov byte ptr [rcx - 9], dl ; call qword ptr [rsi]
0x000000000041374e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044556e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444f4e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004b0242 : add byte ptr [rax], al ; mov byte ptr [rsi], bh ; add byte ptr [rax], al ; call 0xffffffffd54afa16
0x00000000004725ab : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a00c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a07f8], eax ; ret
0x0000000000444f5e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042452e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044b4ae : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x000000000048911e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000044a8f5 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000047612e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000047614e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047613e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x0000000000449e2e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004ac772 : add byte ptr [rax], al ; mov eax, 0x78000003 ; jb 0x4ac770 ; call qword ptr [rbp + 2]
0x000000000044b47e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044b44e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000044cc40 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040dd0e : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000044a133 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000412a69 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048505b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044a80e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000485264 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041912e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049009e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4900b0 ; ret
0x00000000004902ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4902e0 ; ret
0x000000000040dcd9 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047f20f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004696b2 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000466e51 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000444f8e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048da84 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048daac : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000449dee : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000435e2e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043654e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044ccf6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000411bb5 : add byte ptr [rax], al ; mov esi, 0xffffffff ; call qword ptr [r13 + 0x18]
0x0000000000413937 : add byte ptr [rax], al ; mov esi, 0xffffffff ; call qword ptr [r14 + 0x18]
0x00000000004725ea : add byte ptr [rax], al ; mov esi, 0xffffffff ; call qword ptr [rax + 0x18]
0x0000000000416926 : add byte ptr [rax], al ; mov esi, ebp ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000417c9f : add byte ptr [rax], al ; mov esi, r13d ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x000000000044ceae : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000485a48 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000047d25e : add byte ptr [rax], al ; mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000047dbfe : add byte ptr [rax], al ; mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000482770 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488f82 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000489056 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047c1d4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048ddae : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000485078 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000419fcc : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a0813], rax ; ret
0x0000000000419fac : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a082b], rax ; ret
0x0000000000401900 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004b4efe : add byte ptr [rax], al ; mov r8d, dword ptr [rax] ; add ah, bl ; retf
0x00000000004186be : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045bc0e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000047545e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047546e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047547e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047548e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047549e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004754ae : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004754be : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047d7a3 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000048262e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047cfbe : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000472aae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041947e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048dd2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048ddbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048de1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048de0e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048ddce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004588be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x264671] ; ret
0x000000000045036e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d681] ; ret
0x000000000041945e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a0cb9] ; ret
0x000000000048bafe : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000047467e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000414b34 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048df28 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004154b2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045dacc : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041948e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041ea5e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000048060a : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000447d4f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044c189 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040eb01 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000041210a : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [r13 + 0x20]
0x0000000000492bfe : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004909ae : add byte ptr [rax], al ; mov rdi, r13 ; call rbp
0x000000000041964c : add byte ptr [rax], al ; mov rdi, r14 ; call qword ptr [rbx + 0xe0]
0x0000000000412334 : add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rbp + 0x80]
0x00000000004120c6 : add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rbx + 0x80]
0x000000000049235e : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000411ebd : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbp + 0x20]
0x0000000000414fbe : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [r13 + 0x20]
0x0000000000417c2b : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [r14 + 0x20]
0x0000000000414193 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [r14 + 0x80]
0x0000000000414d99 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax + 0x80]
0x0000000000412cd2 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x000000000041579d : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rbp + 0x88]
0x000000000046fdef : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043638e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004111e3 : add byte ptr [rax], al ; mov rdx, rbx ; mov rsi, r12 ; call qword ptr [r13 + 0x38]
0x00000000004210a6 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000414909 : add byte ptr [rax], al ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x000000000048e79e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000047110b : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, rbp ; call qword ptr [rax + 0x38]
0x000000000042430e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x0000000000470841 : add byte ptr [rax], al ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rbx + 0x90]
0x0000000000414f58 : add byte ptr [rax], al ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [r13 + 0x90]
0x0000000000413c82 : add byte ptr [rax], al ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [r15 + 0x90]
0x00000000004b0946 : add byte ptr [rax], al ; mov word ptr [rbp], es ; add ah, ah ; mov ecx, edi ; call qword ptr [rbp + 1]
0x00000000004b085e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], r8b ; lodsb al, byte ptr [rsi] ; test cl, bh ; call qword ptr [rcx + 1]
0x0000000000481ace : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000463d1c : add byte ptr [rax], al ; movsxd rdx, ebp ; mov rdi, rbx ; call qword ptr [r14 + 0x38]
0x0000000000413a0e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000448f3e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000435fbe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043669e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043662e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b424a : add byte ptr [rax], al ; nop ; jle 0x4b424f ; add byte ptr [rax + 0x28], ah ; cld ; call qword ptr [rax + 5]
0x0000000000400c87 : add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004aea7e : add byte ptr [rax], al ; nop ; mov bl, 0xf6 ; call qword ptr [rdx]
0x0000000000485e8c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044cb8c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x00000000004759cc : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x00000000004b604a : add byte ptr [rax], al ; nop ; pushfq ; add byte ptr [rax], al ; jo 0x4b60a8 ; std ; call qword ptr [rdx]
0x000000000044cdc9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004b58c2 : add byte ptr [rax], al ; or byte ptr [rbp + 0x7d80000], dl ; std ; call qword ptr [rbx + 1]
0x00000000004ac5c6 : add byte ptr [rax], al ; or byte ptr [rbp - 0xb], dl ; call qword ptr [rbx + 1]
0x00000000004ac5c2 : add byte ptr [rax], al ; or byte ptr [rdx], al ; add byte ptr [rax], al ; or byte ptr [rbp - 0xb], dl ; call qword ptr [rbx + 1]
0x00000000004ac8c2 : add byte ptr [rax], al ; or byte ptr [rip - 0x77380000], al ; cmc ; call qword ptr [rdx]
0x00000000004ae9a6 : add byte ptr [rax], al ; pop rax ; mov dl, 0xf6 ; call qword ptr [rsi]
0x0000000000400aa6 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000466dfb : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000410b24 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000458a1a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000414fe3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417f95 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004105fa : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400ed6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b2dfa : add byte ptr [rax], al ; push 0 ; add byte ptr [rax + 0x66], ah ; sti ; call rbp
0x00000000004b042e : add byte ptr [rax], al ; push rax ; hlt ; clc ; call qword ptr [rax]
0x00000000004acd3e : add byte ptr [rax], al ; push rax ; sbb esi, esi ; call rsp
0x00000000004ae70e : add byte ptr [rax], al ; push rsp ; and eax, dword ptr [rax] ; add byte ptr [rdx + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x00000000004acf0e : add byte ptr [rax], al ; push rsp ; or eax, dword ptr [rax] ; add byte ptr [rax - 0xa], ch ; call qword ptr [rdx]
0x00000000004b2256 : add byte ptr [rax], al ; pushfq ; pop rsi ; add byte ptr [rax], al ; je 0x4b22d1 ; cli ; call qword ptr [rdx]
0x0000000000400a6e : add byte ptr [rax], al ; ret
0x0000000000499066 : add byte ptr [rax], al ; ret 0
0x000000000049ffde : add byte ptr [rax], al ; ret 0x10
0x00000000004a1cae : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a2446 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0cb6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a11a6 : add byte ptr [rax], al ; ret 0x33
0x000000000049f7de : add byte ptr [rax], al ; ret 0xa
0x000000000049fbde : add byte ptr [rax], al ; ret 0xd
0x00000000004a3082 : add byte ptr [rax], al ; ret 1
0x00000000004a3282 : add byte ptr [rax], al ; ret 2
0x00000000004a3482 : add byte ptr [rax], al ; ret 3
0x00000000004a3682 : add byte ptr [rax], al ; ret 4
0x00000000004a3882 : add byte ptr [rax], al ; ret 5
0x000000000049f386 : add byte ptr [rax], al ; ret 6
0x00000000004a3c82 : add byte ptr [rax], al ; ret 7
0x00000000004a3e82 : add byte ptr [rax], al ; ret 8
0x00000000004a4082 : add byte ptr [rax], al ; ret 9
0x000000000049908a : add byte ptr [rax], al ; retf
0x0000000000499086 : add byte ptr [rax], al ; retf 0
0x00000000004a013e : add byte ptr [rax], al ; retf 0x11
0x00000000004a1ce6 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a2486 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004a0cf6 : add byte ptr [rax], al ; retf 0x24
0x00000000004a11e6 : add byte ptr [rax], al ; retf 0x33
0x000000000049f93e : add byte ptr [rax], al ; retf 0xb
0x000000000049fd3e : add byte ptr [rax], al ; retf 0xe
0x00000000004a035e : add byte ptr [rax], al ; retf 1
0x00000000004a3292 : add byte ptr [rax], al ; retf 2
0x00000000004a3492 : add byte ptr [rax], al ; retf 3
0x000000000049f1e6 : add byte ptr [rax], al ; retf 4
0x00000000004a3892 : add byte ptr [rax], al ; retf 5
0x00000000004a3a92 : add byte ptr [rax], al ; retf 6
0x00000000004a3c92 : add byte ptr [rax], al ; retf 7
0x00000000004a3e92 : add byte ptr [rax], al ; retf 8
0x00000000004a4092 : add byte ptr [rax], al ; retf 9
0x00000000004a367e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000049fa86 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004a465e : add byte ptr [rax], al ; sal byte ptr [rdx - 0x4e2f0004], 0xfc ; call rax
0x00000000004b54fe : add byte ptr [rax], al ; sar al, 1 ; cld ; call qword ptr [rbx]
0x00000000004b2796 : add byte ptr [rax], al ; sbb dl, dh ; std ; call rdx
0x000000000041fadc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004acee6 : add byte ptr [rax], al ; sub al, 0xb ; add byte ptr [rax], al ; and dh, dh ; call qword ptr [rdx]
0x00000000004b25e2 : add byte ptr [rax], al ; sub byte ptr [rdx], ah ; add al, cl ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x000000000042dd7c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000418806 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000447891 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040dcd2 : add byte ptr [rax], al ; syscall
0x00000000004b0062 : add byte ptr [rax], al ; test al, 0x3c ; add byte ptr [rax], al ; mov byte ptr [rcx - 9], dl ; call qword ptr [rsi]
0x00000000004b1562 : add byte ptr [rax], al ; test al, 0x51 ; add byte ptr [rax], al ; js 0x4b1537 ; stc ; call qword ptr [rbp + 0xb]
0x00000000004b25a6 : add byte ptr [rax], al ; test al, 0x94 ; cli ; call qword ptr [rdi]
0x00000000004b043e : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rsp + rsi*8 - 8], cl ; call qword ptr [rsi + 0x16]
0x000000000044cae9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400412 ; call rax
0x000000000042c67e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004b54fa : add byte ptr [rax], al ; xchg eax, ecx ; add byte ptr [rax], al ; sar al, 1 ; cld ; call qword ptr [rbx]
0x00000000004aecee : add byte ptr [rax], al ; xor al, 0x29 ; add byte ptr [rax], al ; fst qword ptr [rdi] ; cmc ; call qword ptr [rsi]
0x00000000004b0ffa : add byte ptr [rax], al ; xor al, 0xa6 ; stc ; call rsi
0x00000000004ac3ea : add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rdx]
0x000000000045d8a7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004768d6 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ede3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048df35 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f466 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a73e : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042c5ca : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044b21a : add byte ptr [rax], al ; xor edi, edi ; syscall
0x000000000041246e : add byte ptr [rax], al ; xor edx, edx ; mov rdi, r15 ; call qword ptr [rbp + 0x80]
0x00000000004140b2 : add byte ptr [rax], al ; xor edx, edx ; mov rdi, rbx ; call qword ptr [rax + 0x80]
0x0000000000416b14 : add byte ptr [rax], al ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call qword ptr [r15 + 0x58]
0x0000000000410b5e : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x00000000004587e6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000044594e : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049573c : add byte ptr [rax], bh ; cli ; call qword ptr [rax + 0x20fffa37]
0x00000000004b1af3 : add byte ptr [rax], bh ; push rdi ; add byte ptr [rax], al ; cmp bh, bh ; stc ; call qword ptr [rax]
0x0000000000481a0e : add byte ptr [rax], bh ; retf 0x850f
0x00000000004b2797 : add byte ptr [rax], bl ; std ; call rdx
0x00000000004b6947 : add byte ptr [rax], bl ; xchg eax, edi ; std ; call qword ptr [rdx]
0x00000000004ac5c3 : add byte ptr [rax], cl ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; push rbp ; cmc ; call qword ptr [rbx + 1]
0x00000000004ac8c3 : add byte ptr [rax], cl ; add eax, 0x88c80000 ; cmc ; call qword ptr [rdx]
0x000000000048c4fe : add byte ptr [rax], cl ; mov byte ptr [rip + 0x230d69], 8 ; ret
0x00000000004ac5c7 : add byte ptr [rax], cl ; push rbp ; cmc ; call qword ptr [rbx + 1]
0x000000000048c505 : add byte ptr [rax], cl ; ret
0x00000000004b58c3 : add byte ptr [rax], cl ; xchg eax, ebp ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; std ; call qword ptr [rbx + 1]
0x00000000004ac3eb : add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rbp + 0x47], ch ; cmc ; call qword ptr [rdx]
0x00000000004b4eeb : add byte ptr [rax], dh ; mov eax, dword ptr [rax] ; add byte ptr [rax], al ; retf
0x00000000004aeeeb : add byte ptr [rax], dh ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; retf
0x00000000004b04cf : add byte ptr [rax], dl ; adc al, 0xf9 ; call qword ptr [rax + 1]
0x00000000004b04cb : add byte ptr [rax], dl ; add byte ptr [r8], al ; adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 1]
0x00000000004b28bf : add byte ptr [rax], dl ; mov al, 0xfa ; call qword ptr [rbx]
0x00000000004b4ecb : add byte ptr [rax], dl ; mov eax, dword ptr [rax] ; add al, dh ; retf 0xfffc
0x000000000044c07d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b0861 : add byte ptr [rax], r8b ; lodsb al, byte ptr [rsi] ; test cl, bh ; call qword ptr [rcx + 1]
0x000000000042452d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044b4ad : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x000000000047612d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044b47d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000004195bd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041912d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000444f7d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000444fbd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004210a5 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048e79d : add byte ptr [rax], r8b ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400aa5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000048579d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a6d : add byte ptr [rax], r8b ; ret
0x00000000004b0ff9 : add byte ptr [rax], r8b ; xor al, 0xa6 ; stc ; call rsi
0x000000000044734d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000044a426 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000485baf : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000045dd3e : add byte ptr [rbp + 0x19], al ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x000000000048ec23 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004764ad : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000004495ce : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004829b4 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000449e5b : add byte ptr [rbp + 0x2a], dh ; mov eax, 0x77 ; syscall
0x00000000004828f4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000413e8a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004587e7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482b15 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000484e20 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a656 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047637b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000449e7a : add byte ptr [rbp + 0x46], dh ; add rsp, 0x38 ; ret
0x00000000004ac3ef : add byte ptr [rbp + 0x47], ch ; cmc ; call qword ptr [rdx]
0x00000000004171e7 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044a9e6 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000004134c7 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x0000000000483a4f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000048393f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044b355 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488f0a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000048837a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045bb5e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000485acc : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041ad6f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048dd58 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004b0947 : add byte ptr [rbp + rax*2 - 0x761c0000], cl ; stc ; call qword ptr [rbp + 1]
0x000000000048dc70 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049fbd7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000004b59b3 : add byte ptr [rbp + rcx - 3], cl ; call qword ptr [rax]
0x00000000004679db : add byte ptr [rbp + rcx*4 + 0x35], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 3
0x000000000041fdcb : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000472c1e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000472d18 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000472e12 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000041dcdc : add byte ptr [rbp + rcx*4 + 0xd], cl ; pushfq ; retf
0x00000000004862ee : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x00000000004887ec : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000045d8d5 : add byte ptr [rbp - 0x16f98a40], al ; mov cl, 0xf ; sti ; call qword ptr [rax + 0x66c3c031]
0x0000000000490cb4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044caea : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049fe83 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000449c27 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000487674 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004835cf : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000469b79 : add byte ptr [rbp - 0x75], cl ; je 0x469ba2 ; and byte ptr [rax + 1], cl ; ret
0x000000000042804d : add byte ptr [rbp - 0x77], cl ; retf
0x000000000044e255 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x0000000000490047 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004b28bc : add byte ptr [rbp], ah ; add byte ptr [rax], dl ; mov al, 0xfa ; call qword ptr [rbx]
0x000000000043df49 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000492043 : add byte ptr [rbx + 0x2287ca3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000485ead : add byte ptr [rbx + 0x23736c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000480895 : add byte ptr [rbx + 0x23a94b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004246af : add byte ptr [rbx + 0x2987fa15], cl ; add bh, dh ; ret 0
0x000000000042101f : add byte ptr [rbx + 0x2997ee3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004194f7 : add byte ptr [rbx + 0x2a38d505], al ; add byte ptr [rcx], al ; ret
0x000000000041aaef : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000458a1b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000444f8f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000444abf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x0000000000410b25 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000435e2f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000413198 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414fe4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405ef1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004105fb : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049009f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044b774 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x000000000047485a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b076f : add byte ptr [rbx + rax*2 - 0x7dc40000], dh ; stc ; call qword ptr [rdx]
0x00000000004b06f7 : add byte ptr [rbx + rax*2], bh ; add byte ptr [rax], al ; jns 0x4b06f8 ; call rsp
0x000000000048dd17 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000484ff7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488e17 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004b4eff : add byte ptr [rbx + rcx*4], al ; add ah, bl ; retf
0x00000000004acee7 : add byte ptr [rbx + rcx], ch ; add byte ptr [rax], al ; and dh, dh ; call qword ptr [rdx]
0x00000000004acf0f : add byte ptr [rbx + rcx], dl ; add byte ptr [rax - 0xa], ch ; call qword ptr [rdx]
0x00000000004b225b : add byte ptr [rbx + rsi*2 - 6], dh ; call qword ptr [rdx]
0x0000000000448fb8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000448fc6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000448fbf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000448fd4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x0000000000448fcd : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000448fb1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000472a69 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000044922e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000040345c : add byte ptr [rbx - 0x6417ffd5], bl ; retf
0x0000000000466dfc : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000446f76 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000407035 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ab01 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040ad66 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409f14 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x0000000000411998 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407dac : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000407162 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x00000000004071ce : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000409f7f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000040a022 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000413a17 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000046a7b3 : add byte ptr [rbx - 0x8bf43], al ; call qword ptr [rbx + 0xf]
0x000000000047c207 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004ae70f : add byte ptr [rbx], dl ; add byte ptr [rdx + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x000000000046128d : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004680b5 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042b065 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000004136a3 : add byte ptr [rcx + 0x2a], ch ; add byte ptr [rax], al ; je 0x4136ac ; ret
0x000000000041238f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000004122f6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000048a572 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047441f : add byte ptr [rcx + 0x39], cl ; ret
0x00000000004106bd : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000419f90 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413a00 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x00000000004725ac : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000461901 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046d6ba : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000486566 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046a3c8 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046e63b : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000462c0e : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000467c67 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046cc7e : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044767f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e255 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048ce05 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000419f6d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000047635c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004aecef : add byte ptr [rcx + rbp], dh ; add byte ptr [rax], al ; fst qword ptr [rdi] ; cmc ; call qword ptr [rsi]
0x00000000004b1d3f : add byte ptr [rcx + rbx*2 + 0x16ac0000], al ; cli ; call rcx
0x0000000000417894 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000045b991 : add byte ptr [rcx + rcx*4 + 0x25], al ; ret
0x000000000041210b : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [r13 + 0x20]
0x0000000000492bff : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004909af : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbp
0x0000000000417ca0 : add byte ptr [rcx + rcx*4 - 0x12], al ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x000000000041490a : add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x000000000048a607 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000047467f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048e79f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000047110c : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbp ; call qword ptr [rax + 0x38]
0x0000000000412335 : add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rbp + 0x80]
0x00000000004120c7 : add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rbx + 0x80]
0x000000000049235f : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000041964d : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rbx + 0xe0]
0x0000000000424c4f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x0000000000420448 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x420410 ; ret
0x00000000004b06fb : add byte ptr [rcx + rdi*2 - 7], ah ; call rsp
0x0000000000416927 : add byte ptr [rcx - 0x2076b712], cl ; call qword ptr [r14 + 0x18]
0x000000000047b57f : add byte ptr [rcx - 0x3f], cl ; out 4, eax ; add r15, rax ; call qword ptr [r15 + 0x60]
0x00000000004562ff : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045bcd2 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000494fa0 : add byte ptr [rcx - 0x4d3f0007], dh ; stc ; call qword ptr [rax + 0x70fff9b4]
0x000000000047fc1b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047fcb8 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e2c7 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044c18a : add byte ptr [rcx - 0x75], cl ; jge 0x44c18f ; call r12
0x000000000044c1ba : add byte ptr [rcx - 0x75], cl ; jge 0x44c1bf ; call r12
0x0000000000492d0f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044cc57 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046d07e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046bb97 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000468b76 : add byte ptr [rcx - 0x77], al ; shr cl, 0x37 ; idiv bh ; call qword ptr [rax + 0x2dbe]
0x000000000045948b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045f8d7 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000404930 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004923b2 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x000000000047a884 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044cb5f : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048b53a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048b649 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000047206b : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048b84f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x00000000004620ba : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045c0a7 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000041dc27 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041a1af : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045c31e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x0000000000426e8f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042579f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044b732 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000046122d : add byte ptr [rcx - 0x80], al ; call qword ptr [rbx + 0xf]
0x000000000042c852 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042c878 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000456844 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000048c00a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000044788f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040eccf : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b1b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000048089b : add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004194fd : add byte ptr [rcx], al ; ret
0x000000000044e26c : add byte ptr [rcx], bh ; ret
0x0000000000403291 : add byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000041b5bb : add byte ptr [rcx], dh ; call qword ptr [rax + 0x31]
0x0000000000478b3c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000044b405 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ede4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042c15c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000004764ea : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x476518 ; ret
0x00000000004155bf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4155d0 ; ret
0x000000000041246f : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rbp + 0x80]
0x0000000000416b15 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call qword ptr [r15 + 0x58]
0x000000000044e28b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000410b5f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x0000000000495244 : add byte ptr [rcx], dl ; cli ; call qword ptr [rax + 0x20fffa10]
0x000000000048da85 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048daad : add byte ptr [rdi + 1], bh ; call rax
0x000000000048e7fc : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000482fc7 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000045a83f : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000464235 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004ad32f : add byte ptr [rdi + rcx], dh ; add ah, ch ; cmp esi, esi ; call qword ptr [rdi]
0x000000000040dce6 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481bb6 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x00000000004355f6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000448e87 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043662f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043669f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000045518b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000456294 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045627f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000004562a9 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000448f3f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000426a3f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000413a0f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042cdbf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c8ff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000463413 : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042c18f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042c1bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042c1af : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042c19f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046d6b4 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047c563 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045978b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000466493 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000042b05f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040dccb : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000411ea6 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x00000000004229be : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046a828 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042141e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x00000000004773e3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004506f4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000444a7f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x00000000004432cf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048dc87 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000412cce : add byte ptr [rdx + 1], bh ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x00000000004136a7 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004b0773 : add byte ptr [rdx + rax*4], bh ; stc ; call qword ptr [rdx]
0x00000000004ae713 : add byte ptr [rdx + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x000000000049f7d7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000458050 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045804f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004b65bc : add byte ptr [rdx - 0x7dd00000], ah ; std ; call qword ptr [rbx]
0x000000000047c22c : add byte ptr [rdx - 8], bl ; call qword ptr [rbp + 0x53]
0x00000000004b05bc : add byte ptr [rdx], al ; add byte ptr [rax + 0x72], al ; stc ; call qword ptr [rdi]
0x000000000044ccf7 : add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000485de2 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042d334 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004642da : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041b157 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000046705a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x5ce8
0x000000000041ab8f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000464303 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xb3e8
0x00000000004642a1 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000466ffc : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042c0c4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041b156 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004595d7 : add byte ptr [rsi + rax - 0x17], dh ; sar dword ptr [rax - 4], 1 ; call qword ptr [rax + 0x2e66c3f3]
0x0000000000425241 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004b2257 : add byte ptr [rsi + rbx*2 + 0x73740000], bl ; cli ; call qword ptr [rdx]
0x0000000000456e10 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000456e0f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x0000000000485e8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044cb8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000004759cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000411bb6 : add byte ptr [rsi - 1], bh ; call qword ptr [r13 + 0x18]
0x0000000000413938 : add byte ptr [rsi - 1], bh ; call qword ptr [r14 + 0x18]
0x00000000004725eb : add byte ptr [rsi - 1], bh ; call qword ptr [rax + 0x18]
0x0000000000418f50 : add byte ptr [rsi - 1], bh ; mov rdi, rbx ; call qword ptr [r13 + 0x18]
0x0000000000418bdf : add byte ptr [rsi - 1], bh ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000418917 : add byte ptr [rsi - 1], bh ; mov rdi, rbx ; call qword ptr [r15 + 0x18]
0x0000000000414c91 : add byte ptr [rsi - 1], bh ; mov rdi, rbx ; call qword ptr [rax + 0x18]
0x0000000000417560 : add byte ptr [rsi - 1], bh ; mov rdi, rbx ; call qword ptr [rbp + 0x18]
0x0000000000495c6c : add byte ptr [rsi - 6], cl ; call qword ptr [rax]
0x0000000000425207 : add byte ptr [rsi - 9], dh ; ret 0
0x000000000045ba1b : add byte ptr [rsi], ah ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000004b0ffb : add byte ptr [rsi], dh ; stc ; call rsi
0x0000000000417e85 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004b085f : add byte ptr [rsp + rax*2 - 0x7b540000], ah ; stc ; call qword ptr [rcx + 1]
0x00000000004ae057 : add byte ptr [rsp + rbx - 0x735c0000], bl ; idiv bh ; retf
0x00000000004b51b3 : add byte ptr [rsp + rbx*8 - 4], ch ; call qword ptr [rdi + 1]
0x0000000000400f0e : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004b0ff7 : add byte ptr [rsp + rcx*2], bh ; add byte ptr [rax], al ; xor al, 0xa6 ; stc ; call rsi
0x0000000000453acc : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004b0443 : add byte ptr [rsp + rsi*8 - 8], cl ; call qword ptr [rsi + 0x16]
0x00000000004b0245 : add byte ptr ds:[rax], al ; call 0xffffffffd54afa16
0x0000000000449d55 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000045ba1c : add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x0000000000450c3b : add byte ptr es:[rax - 0x77], cl ; mov r8b, 0xe8 ; retf 0xffad
0x00000000004aea7d : add byte ptr es:[rax], al ; nop ; mov bl, 0xf6 ; call qword ptr [rdx]
0x000000000044e254 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000045b990 : add byte ptr es:[rcx + rcx*4 + 0x25], al ; ret
0x000000000044cae7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000495118 : add ch, ah ; stc ; inc dword ptr [rax] ; out 0xf9, eax ; call qword ptr [rax + 0x50fff9d9]
0x000000000049fbe3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004163f2 : add ch, al ; pop rax ; ret
0x00000000004164f9 : add ch, al ; push rcx ; ret 0xffff
0x000000000047422f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004aa57c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004aa57d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b4d95 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x000000000047292a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000423b4a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x000000000046a403 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004ad9df : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000048c8f7 : add ch, cl ; retf 0xfffc
0x00000000004951e0 : add cl, 0xf9 ; call qword ptr [rax - 0x3c]
0x0000000000495e20 : add cl, bh ; cli ; call qword ptr [rax]
0x00000000004a994a : add cl, bl ; retf 0xea91
0x00000000004432f7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000046abe2 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000045603e : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046a136 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000456298 : add cl, byte ptr [rax + 0x39] ; retf
0x000000000043387a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000448c54 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041ddfb : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041da58 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x00000000004254dc : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000412494 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004123b3 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000451bdc : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x00000000004565d6 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000004432f8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000041214a : add cl, byte ptr [rax - 0x77] ; and al, 0x30 ; call qword ptr [r13 + 0x30]
0x0000000000443265 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004860e5 : add cl, byte ptr [rax - 0x77] ; je 0x48610e ; or byte ptr [rax + 1], cl ; ret
0x000000000047f234 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000419112 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000045e063 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000441ac0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000441b23 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000484bbd : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048c8f3 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000471e70 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000436472 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000459348 : add cl, byte ptr [rcx + 0x39] ; retf
0x000000000046c413 : add cl, byte ptr [rcx + rcx*4 - 0xe] ; call qword ptr [rax + 0x38]
0x0000000000452d0a : add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000004049a9 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000044797b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004494a7 : add cl, ch ; ret
0x000000000045fc1a : add cl, ch ; ret 0xfffa
0x0000000000455ab8 : add cl, ch ; ret 0xfffd
0x0000000000405e2a : add cl, ch ; retf
0x000000000043bffa : add cl, ch ; retf 0xfffe
0x000000000047a669 : add cl, ch ; sar esp, 0xff ; call qword ptr [rax + 0x48d28548]
0x0000000000476985 : add cl, cl ; ret
0x00000000004a9803 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004951cc : add cl, dl ; stc ; call qword ptr [rax - 0x2e]
0x00000000004a9802 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004951ac : add dh, 0xf9 ; call rax
0x00000000004a388b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000004a863e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004a2cd7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000436623 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000400596 : add dh, bl ; ret
0x000000000042527e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004adf11 : add dh, byte ptr [rbx + 0xa] ; ret
0x00000000004b29a8 : add dh, byte ptr [rsi + rcx + 0x80e4910] ; ret
0x000000000041bb88 : add dh, dh ; ret
0x0000000000451f0e : add dh, dh ; ret 0x4801
0x00000000004234bf : add dh, dh ; ret 0x4804
0x000000000047d148 : add dh, dh ; ret 0x7403
0x000000000044b3ef : add dh, dh ; ret 0x7404
0x00000000004459a7 : add dh, dh ; ret 0x7501
0x00000000004459b4 : add dh, dh ; ret 0x7502
0x00000000004459c1 : add dh, dh ; ret 0x7504
0x0000000000445979 : add dh, dh ; ret 0x7510
0x0000000000445986 : add dh, dh ; ret 0x7520
0x00000000004254ac : add dh, dh ; ret 0x7540
0x00000000004237e3 : add dh, dh ; ret 0xf02
0x000000000045b1a8 : add dh, dh ; ret 0xf04
0x000000000041bab9 : add dh, dh ; ret 0xf08
0x0000000000467ac1 : add dh, dh ; ret 0xf40
0x0000000000467aa7 : add dh, dh ; ret 0xf50
0x00000000004a895a : add dl, byte ptr [rax + 0x38] ; xor esi, dword ptr [rcx] ; xchg eax, edi ; call qword ptr [rbx + 0x7c]
0x00000000004952f0 : add dl, byte ptr [rbx] ; cli ; call qword ptr [rdx + 0x22fffa12]
0x0000000000495d64 : add dl, dh ; cli ; call qword ptr [rax]
0x000000000047a50d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000470e77 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046fc95 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000450ac3 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000444a81 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000004666ba : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000046667f : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000457788 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000456605 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000417a8d : add dword ptr [rax + 0x39], ecx ; ret
0x00000000004806d9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004806eb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045c36f : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000465a9a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000040f3e3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000040f36d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000456283 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000417d68 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x00000000004581c0 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048eb13 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048d0fe : add dword ptr [rax + 1], ecx ; retf
0x000000000047b389 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000482a87 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dc1a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000479d05 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041ebbe : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000479cd7 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044b777 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000476430 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a93fb : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a945e ; retf
0x0000000000402d5f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000423b94 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x0000000000470e78 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004432d1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000419e81 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a09a7 ; ret
0x0000000000443262 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047fe23 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d645 ; ret
0x000000000045f020 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040608c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000451027 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000414e56 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045e13c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000004864c2 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047fe22 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d645 ; ret
0x000000000040f046 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000482093 : add dword ptr [rax - 0x7d], ecx ; ret 0x4118
0x0000000000482413 : add dword ptr [rax - 0x7d], ecx ; ret 0x4418
0x000000000045c7d9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046fc96 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402da9 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000451616 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x00000000004702e7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e52b : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000405ac0 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000457137 : add dword ptr [rax], eax ; add al, ch ; int1 ; stosb byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x56415741]
0x0000000000455d6a : add dword ptr [rax], eax ; add al, ch ; mov esi, 0x89fffabe ; ret 0xe283
0x0000000000454d5e : add dword ptr [rax], eax ; add al, ch ; retf 0xface
0x0000000000410bf4 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000448df1 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000041a73a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000468ff3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000456038 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000478b04 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041f7fd : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000471a4b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000414f57 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [r13 + 0x90]
0x0000000000413c81 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [r15 + 0x90]
0x000000000047663d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044a2c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048f3da : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x00000000004572a6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048d925 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000456845 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x0000000000447d4e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000472509 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000412048 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000004692c8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044c5ac : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456f02 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042bd37 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f495 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000424f5e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000440caf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bd65 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d8e3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000044f6e1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a262a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbp
0x00000000004a2cda : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a1e8a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a1cb2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a1caa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a2442 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a1cea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a1ce2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a2482 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000041562e : add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [r15 + 0x80]
0x000000000048da87 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048d9dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044b50c : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbp
0x000000000048e7f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48e801 ; sbb eax, eax ; ret
0x0000000000476982 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044cc3e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000044a131 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047f20d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048e090 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000485076 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000412332 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rbp + 0x80]
0x0000000000414d97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax + 0x80]
0x0000000000412cd0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x000000000046fded : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000417f93 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004873be : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004808a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000469530 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044a77b : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000045dd3c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x19], al ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x0000000000413e88 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000429628 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048d876 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044ef02 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409f7d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000041964b : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rbx + 0xe0]
0x0000000000492d0d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004620b8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000478b3a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000041246d : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rbp + 0x80]
0x0000000000413936 : add dword ptr [rax], eax ; add byte ptr [rsi - 1], bh ; call qword ptr [r14 + 0x18]
0x00000000004725e9 : add dword ptr [rax], eax ; add byte ptr [rsi - 1], bh ; call qword ptr [rax + 0x18]
0x00000000004459a5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000004459b2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000004459bf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000445977 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000445984 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000445991 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045b1a6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000004254d8 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000042469c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000424603 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000400c39 : add dword ptr [rax], eax ; mov eax, dword ptr [rbp - 4] ; leave ; ret
0x00000000004106bc : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405ef0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045ddc4 : add dword ptr [rbp + 0x39], ecx ; ret
0x00000000004a9944 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000419c2f : add dword ptr [rbp + 6], esi ; call qword ptr [rbx + 0xe8]
0x0000000000400b1c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000467580 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000449bc9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044bf2d : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045f5a2 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a9d2a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000004364e2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a890a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000489bf9 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d60e : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000476cac : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x000000000045e061 : add dword ptr [rbx], eax ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000000000046966f : add dword ptr [rcx + 0x25257a0d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045d232 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044bc83 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044b736 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x0000000000403b2d : add dword ptr [rcx + rcx*4 - 1], ecx ; call 0x4205f0
0x000000000040e26a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000443301 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046fa8e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045518f : add dword ptr [rcx - 0x77], eax ; retf
0x000000000047b0aa : add dword ptr [rcx - 0x77], ecx ; call 0x4a3339fa
0x000000000045a878 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044d325 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000468181 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x000000000047944b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000047624a : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000415ae3 : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000465593 : add dword ptr [rcx], edi ; retf
0x00000000004a9855 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000448ae2 : add dword ptr [rdi + 0x15], esi ; jb 0x448ae9 ; mov byte ptr [rdi], cl ; ret
0x00000000004b4d5d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b4cf5 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b4d29 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b4d06 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b4d3a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b4d6e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b147d : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000457780 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047f317 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000041f3bb : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000449231 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004550f1 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000047a50e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000447adc : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043936d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000485eeb : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a952f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004b3f04 : add dword ptr [rdx], 0x4a ; ret
0x00000000004b697c : add dword ptr [rdx], 0x55 ; ret
0x00000000004afe90 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b6938 : add dword ptr [rdx], 0x76 ; ret
0x00000000004ada82 : add dword ptr [rdx], eax ; retf
0x00000000004194f8 : add dword ptr [rip + 0x2a38d5], 1 ; ret
0x00000000004ad9db : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004432e2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000417e89 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000048ab8d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045bb60 : add eax, 0x18c48348 ; ret
0x00000000004255f9 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000424699 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x000000000044a4aa : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042c62a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000004251b0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000425539 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x00000000004253f9 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000425299 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x00000000004255a0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000425460 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x0000000000425300 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x0000000000490161 : add eax, 0x22d2de ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000490051 : add eax, 0x22d3ee ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042557f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000042543f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x00000000004252df : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000424620 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x00000000004882c0 : add eax, 0x235652 ; jne 0x4882ed ; ret
0x000000000042536b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000486091 : add eax, 0x2378ea ; ret
0x00000000004854f9 : add eax, 0x237c2a ; ret
0x00000000004854de : add eax, 0x237c45 ; add rsp, 8 ; ret
0x000000000042534e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000042539f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047ff8c : add eax, 0x23d4d7 ; mov qword ptr [rsi], rax ; ret
0x000000000047ff1b : add eax, 0x23d550 ; ret
0x000000000047fee2 : add eax, 0x23d589 ; add rsp, 8 ; ret
0x000000000047fe26 : add eax, 0x23d645 ; ret
0x00000000004588c2 : add eax, 0x264671 ; ret
0x000000000044e242 : add eax, 0x26d0b9 ; ret
0x0000000000450362 : add eax, 0x26d681 ; ret
0x000000000045381f : add eax, 0x29480000 ; ret 0x349
0x0000000000425519 : add eax, 0x297992 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004253d9 : add eax, 0x297ad2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000425279 : add eax, 0x297c32 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004205d7 : add eax, 0x29a284 ; ret
0x00000000004205e1 : add eax, 0x29c846 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041a4fd : add eax, 0x2a035e ; ret
0x0000000000419ff8 : add eax, 0x2a07f3 ; ret
0x000000000041a00f : add eax, 0x2a07f8 ; ret
0x0000000000419fd0 : add eax, 0x2a0813 ; ret
0x0000000000419fb0 : add eax, 0x2a082b ; ret
0x0000000000419ea6 : add eax, 0x2a099d ; ret
0x0000000000419e96 : add eax, 0x2a09a5 ; ret
0x0000000000419e46 : add eax, 0x2a09ad ; ret
0x0000000000419e36 : add eax, 0x2a09c5 ; ret
0x0000000000419462 : add eax, 0x2a0cb9 ; ret
0x000000000041a4b1 : add eax, 0x2a2976 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041a025 : add eax, 0x2a2e2a ; ret
0x000000000041955d : add eax, 0x2a3872 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401f4e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b3074 : add eax, 0x3400e4e ; ret
0x0000000000485ace : add eax, 0x38c48348 ; ret
0x000000000041dd4e : add eax, 0x39480000 ; ret 0xf275
0x000000000042c64a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000444b18 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000443348 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000445016 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000495651 : add eax, 0x4e0fffa ; cli ; call qword ptr [rax + 4]
0x0000000000444b99 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000443389 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000049568d : add eax, 0x560fffa ; cli ; call rax
0x0000000000485c70 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a387d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000004724ea : add eax, 0x5c415d5b ; ret
0x00000000004a388d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042c66a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000004255c9 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x00000000004251d9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000042523d : add eax, 0x79ee ; je 0x42520a ; ret
0x000000000042b977 : add eax, 0x83480000 ; ret 0x4910
0x000000000043f2a1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042b9a5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041dbee : add eax, 0x83480000 ; retf 0x4901
0x000000000045ff25 : add eax, 0x83ffffef ; ret
0x0000000000444b1b : add eax, 0x8428d48 ; ret
0x00000000004ac8c5 : add eax, 0x88c80000 ; cmc ; call qword ptr [rdx]
0x00000000004ac8d9 : add eax, 0x88d40000 ; cmc ; call rsp
0x000000000040dce8 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000459d43 : add eax, 0x89480000 ; ret 0x2948
0x00000000004923b0 : add eax, 0x89490000 ; ret 0x8349
0x00000000004291a8 : add eax, 0x894d0000 ; retf
0x00000000004ac965 : add eax, 0x8ef80000 ; cmc ; call rax
0x0000000000481bb8 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004733f9 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000474809 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042e06a : add eax, 0xc0310000 ; ret
0x0000000000444b9d : add eax, 0xc428d48 ; ret
0x000000000044567d : add eax, 0xc478d48 ; ret
0x0000000000456302 : add eax, 0xe9000000 ; ret
0x00000000004733c9 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000048dd5a : add eax, 0xf7148948 ; ret
0x00000000004364d3 : add eax, 0xf7f0ff3 ; ret
0x000000000049006a : add eax, 0xffff50e9 ; push rbx ; ret
0x0000000000400b6a : add eax, 1 ; pop rbp ; ret
0x000000000044f6c5 : add eax, 1 ; push rax ; call rbx
0x0000000000475431 : add eax, 1 ; ret
0x0000000000475428 : add eax, 2 ; ret
0x0000000000475441 : add eax, 3 ; ret
0x000000000045ba79 : add eax, dword ptr [0] ; ret
0x000000000047c228 : add eax, dword ptr [rax] ; add al, ch ; add byte ptr [rdx - 8], bl ; call qword ptr [rbp + 0x53]
0x000000000045665d : add eax, dword ptr [rax] ; add al, ch ; retf
0x000000000047c208 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004ac775 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x72], bh ; cmc ; call qword ptr [rbp + 2]
0x000000000048a3a1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x000000000048a9fc : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044da7e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041d1e8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041bb36 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000040101b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041bcba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004209ba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042bb57 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f441 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bb85 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004502b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000475483 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044aa4b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042bb08 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044922c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000048a570 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000462c0c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000416925 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x2076b712], cl ; call qword ptr [r14 + 0x18]
0x000000000044cc55 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044ccf5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000047d146 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041bab7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000448f10 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047de0c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b4d09 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008ca : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000004765fa : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004551d0 : add eax, dword ptr [rcx - 0x77] ; retf
0x0000000000419c2e : add eax, dword ptr [rcx] ; jne 0x419c38 ; call qword ptr [rbx + 0xe8]
0x00000000004ae1b2 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000487833 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b4d3d : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b4d71 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b2d8a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047ce86 : add eax, dword ptr [rsi] ; call rax
0x0000000000487f20 : add eax, ebp ; retf 0xfff3
0x000000000047d1a7 : add eax, ebx ; call rax
0x00000000004415c8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000042bf79 : add eax, ecx ; ret
0x000000000044192d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042c4a6 : add eax, ecx ; vzeroupper ; ret
0x000000000042bf76 : add eax, edi ; add rax, rcx ; ret
0x000000000042c4a3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000048038c : add eax, edi ; call qword ptr [rax - 0x7cb7acab]
0x000000000042c1a4 : add eax, edi ; ret
0x0000000000485e20 : add eax, edi ; sub rax, r8 ; ret
0x00000000004419e5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044798a : add eax, edi ; sub rax, rsi ; ret
0x000000000042c61a : add eax, edi ; vzeroupper ; ret
0x00000000004418d6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047512b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004191bd : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000463f18 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041a4ff : add ebp, dword ptr [rdx] ; add bl, dh ; ret
0x00000000004a8497 : add ebp, ebp ; retf
0x000000000047ce82 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048afba : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004891f0 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000004178d1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b4d2e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044ef1f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44ef81 ; pop r12 ; ret
0x00000000004832c1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042cd8b : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000436693 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000448ac7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x448ab3 ; ret
0x0000000000443335 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00000000004581fd : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004562ad : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040e1ce : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045205a : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44e2b0
0x0000000000443339 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047f2d7 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x0000000000450bb3 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004354b4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048c6cf : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ebc1 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000048189a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483d90 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000436402 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b4cfa : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000444fb4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000443336 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000449bcf : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000449c2d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004acc91 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000466d49 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000454835 : add ecx, ebp ; retf 0xfff6
0x000000000041e2f9 : add ecx, ebp ; sti ; idiv bh ; call qword ptr [rax - 0x402e76b8]
0x000000000048ec1e : add edi, dword ptr [rax + 4] ; jne 0x48ec40 ; ret
0x000000000047b585 : add edi, eax ; call qword ptr [r15 + 0x60]
0x0000000000490d14 : add edi, ebx ; call rbp
0x000000000049565d : add edi, edx ; call qword ptr [rax + 3]
0x000000000049569d : add edi, edx ; call qword ptr [rax - 0x1a]
0x0000000000483ff2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000045de36 : add edx, eax ; xor eax, eax ; mov dword ptr [rsi], r10d ; pop rbp ; ret
0x0000000000412c89 : add esi, 0x58 ; mov qword ptr [rsi], rax ; call qword ptr [rbp + 0x30]
0x00000000004551ca : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x0000000000459606 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x00000000004365b3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447ce5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a45c : add esi, ebx ; ret
0x000000000041fae0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000448fee : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000411601 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044aa8f : add esp, 0x10 ; pop rbx ; ret
0x0000000000412d05 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044788d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000483198 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dd2e : add esp, 0x118 ; ret
0x000000000045bdaa : add esp, 0x148 ; ret
0x000000000041af19 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000044e06a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412695 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045bb62 : add esp, 0x18 ; ret
0x0000000000483219 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041785f : add esp, 0x20 ; pop rbx ; ret
0x0000000000449a12 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044a42a : add esp, 0x28 ; ret
0x0000000000450448 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004853ef : add esp, 0x30 ; pop rbx ; ret
0x000000000048b786 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040dbe4 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416f0e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449e7e : add esp, 0x38 ; ret
0x000000000048901c : add esp, 0x40 ; pop rbx ; ret
0x000000000044a102 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000489103 : add esp, 0x50 ; pop rbx ; ret
0x000000000044a65a : add esp, 0x58 ; ret
0x000000000044a54c : add esp, 0x68 ; ret
0x0000000000474924 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a8df : add esp, 0x78 ; ret
0x00000000004696ae : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000475fa3 : add esp, 0x80 ; pop rbx ; ret
0x00000000004167d8 : add esp, 0x80 ; ret
0x000000000044ca3d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400ed2 : add esp, 0x88 ; pop rbx ; ret
0x000000000040164f : add esp, 0x98 ; ret
0x00000000004760c3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000458a16 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000410467 : add esp, 0xd0 ; pop rbx ; ret
0x00000000004105f6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004100c4 : add esp, 0xd8 ; ret
0x0000000000412a0f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004807ab : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041098e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b2ac : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000488f59 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004144c4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401ce3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000424669 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a9b8b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004565ba : add qword ptr [rax + 0x39], rcx ; retf
0x000000000045518e : add qword ptr [rcx - 0x77], r8 ; retf
0x000000000045de35 : add r10d, eax ; xor eax, eax ; mov dword ptr [rsi], r10d ; pop rbp ; ret
0x0000000000436692 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436622 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004365b2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000047b584 : add r15, rax ; call qword ptr [r15 + 0x60]
0x000000000042bb84 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004551cf : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000048dd21 : add r8b, dil ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004a9949 : add r9b, bl ; retf 0xea91
0x00000000004581de : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000047a668 : add r9b, r13b ; sar esp, 0xff ; call qword ptr [rax + 0x48d28548]
0x00000000004581fc : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000466d48 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000400b69 : add rax, 1 ; pop rbp ; ret
0x0000000000475430 : add rax, 1 ; ret
0x0000000000475427 : add rax, 2 ; ret
0x0000000000475440 : add rax, 3 ; ret
0x000000000045ba78 : add rax, qword ptr [0] ; ret
0x000000000047ce85 : add rax, qword ptr [r14] ; call rax
0x000000000047de0b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000487832 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045ba77 : add rax, qword ptr fs:[0] ; ret
0x000000000047d1a6 : add rax, r11 ; call rax
0x00000000004415c7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000042bf78 : add rax, rcx ; ret
0x000000000044192c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042c4a5 : add rax, rcx ; vzeroupper ; ret
0x000000000042bf75 : add rax, rdi ; add rax, rcx ; ret
0x000000000042c4a2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000042c1a3 : add rax, rdi ; ret
0x0000000000485e1f : add rax, rdi ; sub rax, r8 ; ret
0x00000000004419e4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000447989 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042c619 : add rax, rdi ; vzeroupper ; ret
0x00000000004418d5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047ce81 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x00000000004565d9 : add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000490d13 : add rdi, rbx ; call rbp
0x0000000000483ff1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000412c88 : add rsi, 0x58 ; mov qword ptr [rsi], rax ; call qword ptr [rbp + 0x30]
0x0000000000411600 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044aa8e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000483197 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dd2d : add rsp, 0x118 ; ret
0x000000000045bda9 : add rsp, 0x148 ; ret
0x000000000041af18 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000412694 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045bb61 : add rsp, 0x18 ; ret
0x0000000000483218 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041785e : add rsp, 0x20 ; pop rbx ; ret
0x000000000044a429 : add rsp, 0x28 ; ret
0x0000000000450447 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004853ee : add rsp, 0x30 ; pop rbx ; ret
0x000000000048b785 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000416f0d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449e7d : add rsp, 0x38 ; ret
0x000000000048901b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000489102 : add rsp, 0x50 ; pop rbx ; ret
0x000000000044a659 : add rsp, 0x58 ; ret
0x000000000044a54b : add rsp, 0x68 ; ret
0x0000000000474923 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a8de : add rsp, 0x78 ; ret
0x0000000000475fa2 : add rsp, 0x80 ; pop rbx ; ret
0x00000000004167d7 : add rsp, 0x80 ; ret
0x000000000044ca3c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400ed1 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040164e : add rsp, 0x98 ; ret
0x00000000004760c2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000410466 : add rsp, 0xd0 ; pop rbx ; ret
0x00000000004105f5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004100c3 : add rsp, 0xd8 ; ret
0x0000000000412a0e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004807aa : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041098d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b2ab : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000488f58 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401ce2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000424668 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004254d7 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000485eea : add word ptr [rdx + rax*2], 1 ; ret
0x000000000048ddf8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000488ef1 : and al, 0x10 ; call 0x485920
0x000000000041265e : and al, 0x10 ; call qword ptr [rbp + 0x18]
0x000000000048f9b0 : and al, 0x10 ; call r14
0x000000000044b698 : and al, 0x10 ; call rax
0x000000000048315b : and al, 0x10 ; call rdx
0x000000000040121f : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call rbp
0x000000000041d79c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409688 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x406190
0x0000000000472c22 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000045cb61 : and al, 0x10 ; mov rdi, r14 ; call rbp
0x00000000004197bb : and al, 0x10 ; mov rdi, rax ; call qword ptr [r13 + 0xe0]
0x0000000000415195 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [r13 + 0x90]
0x0000000000413ef0 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax + 0x90]
0x000000000048f798 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000463d82 : and al, 0x10 ; xor esi, esi ; call 0
0x0000000000401285 : and al, 0x18 ; call rax
0x000000000045bf71 : and al, 0x18 ; call rbp
0x00000000004127ef : and al, 0x18 ; lea rsi, [rdi + 0x58] ; mov rdi, rax ; call qword ptr [rax + 8]
0x00000000004762d0 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044f648 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000472b3d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000474e3f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000483156 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000451d97 : and al, 0x20 ; call r15
0x0000000000453fce : and al, 0x20 ; call rax
0x0000000000474b00 : and al, 0x20 ; call rbx
0x000000000044a9c6 : and al, 0x20 ; je 0x44a9f0 ; mov eax, 0x48 ; syscall
0x00000000004124ee : and al, 0x20 ; lea r8, [rsp + 0x38] ; call qword ptr [r13 + 8]
0x0000000000451c62 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000041456a : and al, 0x20 ; mov rdi, rbx ; call qword ptr [rax + 0x90]
0x00000000004a86c4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000451d92 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000423693 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000041214e : and al, 0x30 ; call qword ptr [r13 + 0x30]
0x0000000000452673 : and al, 0x30 ; call r14
0x000000000045284b : and al, 0x30 ; call rbx
0x0000000000411dc5 : and al, 0x30 ; mov rdi, r15 ; call qword ptr [rdx + 0x90]
0x0000000000474cee : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000453aca : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004124f3 : and al, 0x38 ; call qword ptr [r13 + 8]
0x0000000000452b35 : and al, 0x38 ; call r12
0x0000000000453613 : and al, 0x38 ; call r13
0x000000000045316d : and al, 0x38 ; call r14
0x0000000000456131 : and al, 0x38 ; call r15
0x000000000045237b : and al, 0x38 ; call rbx
0x00000000004749d8 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000452087 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045266e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000452846 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004681bc : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045804e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000456e0e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x00000000004545ac : and al, 0x40 ; call r15
0x0000000000456d58 : and al, 0x40 ; call rbx
0x0000000000453fc9 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000452b30 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045360e : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r13
0x0000000000453168 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045612c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452376 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000487831 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x000000000048b868 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048b56c : and al, 0x48 ; add esp, 0x38 ; ret
0x000000000041797b : and al, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x20]
0x000000000041379b : and al, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x80]
0x0000000000414104 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048e89e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x00000000004545a7 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456d53 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048e84f : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000048a7b7 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000414dd5 : and al, 0x4c ; mov esi, ebp ; mov rdi, rbx ; call qword ptr [rax + 0x78]
0x000000000048a765 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x000000000045205e : and al, 0x50 ; call 0x44e2b0
0x0000000000401233 : and al, 0x60 ; call 0x40dc40
0x00000000004210ab : and al, 0x68 ; call rax
0x00000000004799ac : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x000000000046488e : and al, 0x83 ; ret
0x0000000000417e8b : and al, 0x83 ; retf 0x4c01
0x000000000045870d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419f93 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000040492c : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000467f77 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; call rdx
0x000000000045258e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000492bfb : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049235b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000045301b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000452a10 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004587e3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000414d95 : and al, 0xba ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax + 0x80]
0x000000000048d9db : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044aa8c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000401223 : and al, 0xc ; call rbp
0x000000000044a933 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000417412 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x4136a0
0x0000000000401280 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047a880 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004179ec : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x000000000048b968 : and al, 0xd8 ; ret
0x0000000000419003 : and al, 0xe9 ; ret 0xfffd
0x000000000045342e : and al, 0xf6 ; ret
0x000000000045db89 : and al, 4 ; jne 0x45db92 ; add rsp, 0x18 ; ret
0x000000000040968d : and al, 8 ; call 0x406190
0x000000000041ddb6 : and al, 8 ; call 0x41a050
0x000000000040e06f : and al, 8 ; call rax
0x000000000041d7a1 : and al, 8 ; call rcx
0x000000000044b693 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000411fd8 : and al, 8 ; mov rdi, r15 ; call qword ptr [r8 + 0x80]
0x0000000000412030 : and al, 8 ; mov rdi, r15 ; call rax
0x0000000000414a15 : and al, 8 ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x00000000004115b1 : and al, 8 ; xor eax, eax ; mov rdi, rbp ; call qword ptr [rbp + 0x20]
0x0000000000495e00 : and al, bh ; cli ; push qword ptr [rax] ; clc ; cli ; call qword ptr [rax - 8]
0x0000000000490054 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000490cb3 : and al, byte ptr [rax] ; jne 0x490c98 ; pop rbx ; ret
0x0000000000490046 : and al, byte ptr [rax] ; test eax, eax ; je 0x490050 ; ret
0x0000000000490156 : and al, byte ptr [rax] ; test eax, eax ; je 0x490160 ; ret
0x0000000000441b3a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000449f07 : and al, ch ; ret
0x000000000041b5d0 : and al, ch ; retf 0xff52
0x0000000000421319 : and al, ch ; xor ebp, 0x4ce8fffe ; retf 0xfffe
0x000000000046a401 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000453fcf : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004963c0 : and bh, byte ptr [rdi] ; sti ; call qword ptr [rsi + rdi + 0x3e61fffb]
0x0000000000494c65 : and bh, cl ; call qword ptr [rax]
0x0000000000495bdd : and bh, dl ; call qword ptr [rax - 0x2f0005f4]
0x000000000046ffeb : and bl, ch ; retf 0x9066
0x00000000004122c9 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004122f9 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041cc6f : and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000041225e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042c4b6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004414da : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042c62c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000004122fa : and byte ptr [rax + 1], cl ; ret
0x0000000000401021 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004672be : and byte ptr [rax + 9], cl ; ret 0xff83
0x00000000004417a8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004418cd : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047445e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000451c63 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000477e23 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045b454 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45b45f ; call rax
0x0000000000450946 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048ded6 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000468cf4 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041cc70 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000413c22 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000460feb : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048dea9 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000448fca : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004124ef : and byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x38 ; call qword ptr [r13 + 8]
0x0000000000492ebc : and byte ptr [rbp - 0x77], cl ; ret
0x0000000000492d87 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004aa468 : and byte ptr [rbx + 0x3d], bh ; retf
0x000000000048321b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000468f53 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x00000000004122ca : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000045ec10 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004b64dc : and byte ptr [rcx + 0x7d800000], ah ; std ; call qword ptr [rdx + 1]
0x0000000000494d9c : and byte ptr [rcx - 0x719a0007], dl ; stc ; call qword ptr [rcx]
0x000000000041225f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004800c4 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000494d30 : and byte ptr [rdi - 7], ah ; call qword ptr [rax]
0x0000000000447f31 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000041061b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000445980 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000049549c : and byte ptr [rdx + rdi*8], al ; call qword ptr [rsi + 0x3cfffa03]
0x00000000004ae1b5 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000042d0ca : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b2d8d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000475422 : and ch, 0xf ; je 0x475440 ; add rax, 2 ; ret
0x0000000000448f88 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004254da : and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004741ab : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000047540d : and cl, 0xf ; je 0x475430 ; ret
0x000000000041855a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000047fec4 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000424c53 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000042c90d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000047480a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004951b4 : and cl, cl ; stc ; push qword ptr [rax - 0x36] ; stc ; inc eax ; retf
0x000000000049515c : and dh, 0xf9 ; call qword ptr [rax]
0x0000000000449dfd : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044ce99 : and dh, al ; sub byte ptr [rcx], al ; ret
0x00000000004aced9 : and dh, dh ; call qword ptr [rax]
0x00000000004aceed : and dh, dh ; call qword ptr [rdx]
0x000000000046a400 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000495bd9 : and dl, bh ; call qword ptr [rax + 0x22]
0x0000000000469f78 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000469f79 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000418717 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041876f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000486c4b : and dword ptr [rcx - 4], 0x5f690ff ; ret 0x236c
0x000000000041959e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000004251b2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a7299 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000045ba7b : and eax, 0 ; ret
0x00000000004a5a58 : and eax, 0x25fffd87 ; xchg ebp, edi ; call qword ptr [rbx + 0x25fffd7d]
0x0000000000484e1c : and eax, 0x28 ; jne 0x484e5e ; leave ; ret
0x00000000004004c9 : and eax, 0x2b9bfa ; nop ; ret
0x000000000040ead8 : and eax, 0x30 ; call rax
0x000000000040ea12 : and eax, 0x30 ; call rdx
0x000000000040eafe : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000448f0d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000448f58 : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000459087 : and eax, 0x4cffff52 ; mov edi, ebp ; call r12
0x0000000000469673 : and eax, 0x63480025 ; retf 0x8948
0x0000000000449003 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000448fa7 : and eax, 0x7ff80000 ; ret
0x0000000000454a2b : and eax, 0x833fe283 ; retf 0x4180
0x000000000044ccd7 : and eax, 0xc ; cmp eax, 4 ; je 0x44cce0 ; ret
0x000000000041e2f7 : and eax, 0xfbe90100 ; idiv bh ; call qword ptr [rax - 0x402e76b8]
0x00000000004832bc : and eax, 2 ; sub eax, 1 ; ret
0x0000000000488378 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000004ae711 : and eax, dword ptr [rax] ; add byte ptr [rdx + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x000000000047fee5 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000485ee8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004882c3 : and eax, dword ptr [rax] ; jne 0x4882ed ; ret
0x000000000048593a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004854f5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x237c2a], rax ; ret
0x000000000047ff8f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047fe29 : and eax, dword ptr [rax] ; ret
0x000000000047b57e : and eax, dword ptr [rax] ; shl r15, 4 ; add r15, rax ; call qword ptr [r15 + 0x60]
0x000000000047c692 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004628b1 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045381e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000418718 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418770 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044cc72 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44cc7c ; ret
0x00000000004a8994 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042e645 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042dd78 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044c3ba : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x0000000000487ea9 : and ecx, dword ptr [rdi - 4] ; call qword ptr [rax + 0x538b3d83]
0x00000000004203d9 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; pop rdi ; retf 0x29
0x0000000000494c61 : and ecx, edi ; push rax ; and bh, cl ; call qword ptr [rax]
0x0000000000495c19 : and edx, edi ; call rax
0x000000000045e36d : and edx, edi ; dec dword ptr [rax + 0x29] ; ret
0x000000000044ce98 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000474f67 : bnd je 0x474f6e ; test edx, edx ; jne 0x474f60 ; ret
0x000000000042c27a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042c1a0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042c691 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042c1b0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042c1c0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042c190 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042c0ef : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000441153 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000441776 : bsf eax, edx ; ret
0x0000000000475017 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000004418d2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000441270 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x00000000004417c2 : bsf rax, rdx ; ret
0x0000000000475016 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000473e47 : bsr eax, eax ; add rax, rdi ; ret
0x00000000004740cb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000473fd9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000473ed5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000473e46 : bsr rax, rax ; add rax, rdi ; ret
0x00000000004740ca : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000473fd8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000473ed4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x0000000000463d86 : call 0
0x000000000046aad6 : call 0x2146aad1
0x000000000046ac4c : call 0x2146ac47
0x000000000046aedb : call 0x2146aed6
0x000000000046b3a0 : call 0x2146b39b
0x000000000046b55e : call 0x2146b559
0x000000000046bb2f : call 0x2146bb2a
0x000000000046bd68 : call 0x2146bd63
0x0000000000468ce3 : call 0x2ead8ce7
0x0000000000464144 : call 0x400438
0x00000000004739a0 : call 0x400478
0x0000000000403a33 : call 0x4004c0
0x000000000040968f : call 0x406190
0x0000000000401235 : call 0x40dc40
0x000000000042131f : call 0x40dd70
0x00000000004164fa : call 0x412750
0x0000000000417418 : call 0x4136a0
0x000000000041ddb8 : call 0x41a050
0x0000000000422835 : call 0x41ea70
0x0000000000403b31 : call 0x4205f0
0x00000000004055e4 : call 0x4220b0
0x00000000004845f8 : call 0x4408e5
0x000000000046ca3a : call 0x449510
0x000000000047099c : call 0x44cc00
0x0000000000410981 : call 0x44cc30
0x0000000000460a43 : call 0x44cd20
0x0000000000452060 : call 0x44e2b0
0x00000000004622ea : call 0x45e580
0x000000000046574d : call 0x471960
0x0000000000488ef3 : call 0x485920
0x000000000047b0ad : call 0x4a3339fa
0x000000000047e871 : call 0x4a335d77
0x000000000047fb11 : call 0xa33bc5e
0x00000000004605ff : call 0xfad0603
0x0000000000465f97 : call 0xfad5f9b
0x00000000004045e5 : call 0xffffffff872c0e5c
0x00000000004a9b3a : call 0xffffffffab58662e
0x000000000041e9f0 : call 0xffffffffc37b31f6
0x000000000041fdb9 : call 0xffffffffc37b45bf
0x000000000046b96e : call 0xffffffffc3cab972
0x0000000000441c27 : call 0xffffffffc414a574
0x0000000000441b47 : call 0xffffffffc43ca494
0x00000000004b0248 : call 0xffffffffd54afa16
0x000000000044c075 : call 0xffffffffe1441dd5
0x00000000004a6e48 : call 0xffffffffed365936
0x0000000000409b2d : call qword ptr [ebp + 0x53]
0x0000000000411bbc : call qword ptr [r13 + 0x18]
0x000000000041210f : call qword ptr [r13 + 0x20]
0x0000000000412150 : call qword ptr [r13 + 0x30]
0x00000000004111eb : call qword ptr [r13 + 0x38]
0x0000000000411431 : call qword ptr [r13 + 0x58]
0x00000000004139d4 : call qword ptr [r13 + 0x70]
0x0000000000414f60 : call qword ptr [r13 + 0x90]
0x00000000004197c0 : call qword ptr [r13 + 0xe0]
0x00000000004197ee : call qword ptr [r13 + 0xe8]
0x00000000004124f5 : call qword ptr [r13 + 8]
0x000000000041393e : call qword ptr [r14 + 0x18]
0x0000000000417c30 : call qword ptr [r14 + 0x20]
0x00000000004a9f9e : call qword ptr [r14 + 0x30]
0x0000000000463d24 : call qword ptr [r14 + 0x38]
0x0000000000411e07 : call qword ptr [r14 + 0x80]
0x000000000048a610 : call qword ptr [r14]
0x0000000000418920 : call qword ptr [r15 + 0x18]
0x0000000000461309 : call qword ptr [r15 + 0x38]
0x0000000000413cf3 : call qword ptr [r15 + 0x40]
0x0000000000416b1d : call qword ptr [r15 + 0x58]
0x000000000047b587 : call qword ptr [r15 + 0x60]
0x0000000000411900 : call qword ptr [r15 + 0x70]
0x000000000041566d : call qword ptr [r15 + 0x78]
0x0000000000413f2a : call qword ptr [r15 + 0x80]
0x0000000000413c8a : call qword ptr [r15 + 0x90]
0x0000000000411fdd : call qword ptr [r8 + 0x80]
0x000000000045e8ee : call qword ptr [rax + 0x10456348]
0x000000000044bf1e : call qword ptr [rax + 0x104a8b4c]
0x000000000041645e : call qword ptr [rax + 0x10638b4c]
0x000000000040205e : call qword ptr [rax + 0x107b8b48]
0x0000000000495bab : call qword ptr [rax + 0x10]
0x0000000000424095 : call qword ptr [rax + 0x10b8db85]
0x0000000000494e6f : call qword ptr [rax + 0x10fff991]
0x0000000000494e77 : call qword ptr [rax + 0x10fff992]
0x0000000000494e7f : call qword ptr [rax + 0x10fff993]
0x0000000000495b47 : call qword ptr [rax + 0x10fffa2c]
0x0000000000495b3f : call qword ptr [rax + 0x10fffa2d]
0x0000000000495b37 : call qword ptr [rax + 0x10fffa2e]
0x0000000000495b2f : call qword ptr [rax + 0x10fffa2f]
0x0000000000495cc7 : call qword ptr [rax + 0x10fffa7d]
0x0000000000495237 : call qword ptr [rax + 0x12]
0x000000000045b35e : call qword ptr [rax + 0x12fa8348]
0x0000000000495bb3 : call qword ptr [rax + 0x13]
0x000000000046fa0e : call qword ptr [rax + 0x1428d4c]
0x0000000000495bf7 : call qword ptr [rax + 0x15]
0x0000000000495bbb : call qword ptr [rax + 0x16]
0x000000000040733e : call qword ptr [rax + 0x18478b49]
0x0000000000406a5e : call qword ptr [rax + 0x187e8b4d]
0x0000000000414c9a : call qword ptr [rax + 0x18]
0x000000000047d9ae : call qword ptr [rax + 0x18c38348]
0x000000000045002e : call qword ptr [rax + 0x18e9c031]
0x0000000000495bc3 : call qword ptr [rax + 0x19]
0x0000000000495c07 : call qword ptr [rax + 0x1b]
0x0000000000495bcb : call qword ptr [rax + 0x1c]
0x0000000000495c0f : call qword ptr [rax + 0x1e]
0x00000000004220a4 : call qword ptr [rax + 0x1f0f2e66]
0x0000000000495bd3 : call qword ptr [rax + 0x1f]
0x0000000000452cae : call qword ptr [rax + 0x20738b48]
0x000000000045aaae : call qword ptr [rax + 0x207e8b49]
0x0000000000494efb : call qword ptr [rax + 0x20fff9bf]
0x0000000000495247 : call qword ptr [rax + 0x20fffa10]
0x0000000000495957 : call qword ptr [rax + 0x20fffa34]
0x000000000049573f : call qword ptr [rax + 0x20fffa37]
0x0000000000495c17 : call qword ptr [rax + 0x21]
0x0000000000495bdb : call qword ptr [rax + 0x22]
0x00000000004908be : call qword ptr [rax + 0x24348b48]
0x000000000046889e : call qword ptr [rax + 0x24448b41]
0x000000000047ac3e : call qword ptr [rax + 0x24448b48]
0x0000000000459fee : call qword ptr [rax + 0x2444c748]
0x000000000040d63e : call qword ptr [rax + 0x24748b48]
0x0000000000494c6f : call qword ptr [rax + 0x26]
0x000000000046082e : call qword ptr [rax + 0x27be]
0x000000000045ae2e : call qword ptr [rax + 0x2a75db85]
0x00000000004980f7 : call qword ptr [rax + 0x2d]
0x0000000000468b7e : call qword ptr [rax + 0x2dbe]
0x000000000045b34e : call qword ptr [rax + 0x2dfa8348]
0x00000000004595de : call qword ptr [rax + 0x2e66c3f3]
0x0000000000494c8f : call qword ptr [rax + 0x2f]
0x000000000045b32e : call qword ptr [rax + 0x2fa8348]
0x000000000046bf2e : call qword ptr [rax + 0x30bd8b48]
0x0000000000494c97 : call qword ptr [rax + 0x30fff931]
0x0000000000495ccf : call qword ptr [rax + 0x30fffa82]
0x0000000000495cef : call qword ptr [rax + 0x30fffa8f]
0x000000000041b5bd : call qword ptr [rax + 0x31]
0x0000000000476a95 : call qword ptr [rax + 0x31f1894c]
0x0000000000495947 : call qword ptr [rax + 0x36]
0x000000000044f3fe : call qword ptr [rax + 0x384d8d49]
0x000000000046c71e : call qword ptr [rax + 0x38858948]
0x0000000000460ba6 : call qword ptr [rax + 0x38]
0x000000000049572f : call qword ptr [rax + 0x39]
0x00000000004760fe : call qword ptr [rax + 0x3fb8]
0x0000000000414616 : call qword ptr [rax + 0x40]
0x000000000047c5fe : call qword ptr [rax + 0x40bf8348]
0x0000000000494d8f : call qword ptr [rax + 0x40fff98e]
0x000000000040e35e : call qword ptr [rax + 0x458b41]
0x00000000004515fe : call qword ptr [rax + 0x4644f641]
0x000000000047041e : call qword ptr [rax + 0x48044a8b]
0x000000000048aa6e : call qword ptr [rax + 0x480c438b]
0x000000000041e29e : call qword ptr [rax + 0x48d18948]
0x000000000047a66e : call qword ptr [rax + 0x48d28548]
0x0000000000417d0e : call qword ptr [rax + 0x48f28948]
0x000000000040e7ee : call qword ptr [rax + 0x48f2894d]
0x000000000045638e : call qword ptr [rax + 0x48fd8948]
0x000000000044c43e : call qword ptr [rax + 0x48ff3155]
0x000000000048b972 : call qword ptr [rax + 0x49]
0x000000000048545e : call qword ptr [rax + 0x49e08949]
0x0000000000494cdf : call qword ptr [rax + 0x4c]
0x00000000004119ee : call qword ptr [rax + 0x4cc88948]
0x00000000004553fe : call qword ptr [rax + 0x4cf6894c]
0x000000000046e42e : call qword ptr [rax + 0x4ee8348]
0x000000000049511f : call qword ptr [rax + 0x50fff9d9]
0x0000000000487eac : call qword ptr [rax + 0x538b3d83]
0x000000000045e49e : call qword ptr [rax + 0x54415541]
0x0000000000476f2e : call qword ptr [rax + 0x54b70f41]
0x000000000041994e : call qword ptr [rax + 0x55415641]
0x000000000045713e : call qword ptr [rax + 0x56415741]
0x000000000045158e : call qword ptr [rax + 0x5644f641]
0x000000000047c50e : call qword ptr [rax + 0x58838b48]
0x000000000047c7ae : call qword ptr [rax + 0x58878b48]
0x0000000000495c7f : call qword ptr [rax + 0x58]
0x00000000004658ee : call qword ptr [rax + 0x5cad8b44]
0x000000000045ae1e : call qword ptr [rax + 0x5fa8348]
0x0000000000494d23 : call qword ptr [rax + 0x64]
0x000000000045d8de : call qword ptr [rax + 0x66c3c031]
0x00000000004240ee : call qword ptr [rax + 0x671a05c7]
0x000000000046fb3e : call qword ptr [rax + 0x68017a80]
0x00000000004724e3 : call qword ptr [rax + 0x68]
0x0000000000494e9b : call qword ptr [rax + 0x68fff997]
0x0000000000486c4e : call qword ptr [rax + 0x6cc205f6]
0x0000000000494fa7 : call qword ptr [rax + 0x70fff9b4]
0x0000000000494f27 : call qword ptr [rax + 0x70fff9b5]
0x0000000000495103 : call qword ptr [rax + 0x70fff9db]
0x00000000004950cf : call qword ptr [rax + 0x70fff9e1]
0x000000000048bac9 : call qword ptr [rax + 0x74]
0x0000000000497237 : call qword ptr [rax + 0x76]
0x000000000047d95e : call qword ptr [rax + 0x78958b48]
0x0000000000414ddc : call qword ptr [rax + 0x78]
0x000000000048dcde : call qword ptr [rax + 0x7f11fe83]
0x0000000000411fde : call qword ptr [rax + 0x80]
0x000000000044d82e : call qword ptr [rax + 0x8478b48]
0x000000000048a69e : call qword ptr [rax + 0x8588b49]
0x0000000000489b9e : call qword ptr [rax + 0x8788d48]
0x000000000044b59e : call qword ptr [rax + 0x87d8b48]
0x000000000044c1ce : call qword ptr [rax + 0x87d8b49]
0x00000000004655be : call qword ptr [rax + 0x8be0f41]
0x000000000046dd8e : call qword ptr [rax + 0x8f88341]
0x0000000000413ef5 : call qword ptr [rax + 0x90]
0x000000000049546b : call qword ptr [rax + 0xa]
0x000000000042308e : call qword ptr [rax + 0xba48]
0x0000000000495ba3 : call qword ptr [rax + 0xd]
0x000000000049544f : call qword ptr [rax + 0xf]
0x000000000045ec9e : call qword ptr [rax + 0xfd28545]
0x000000000044b11e : call qword ptr [rax + 0xfdb8548]
0x000000000040ff9e : call qword ptr [rax + 0xfe7394d]
0x000000000040f1be : call qword ptr [rax + 0xff63949]
0x000000000045b33e : call qword ptr [rax + 0xffa8348]
0x0000000000494d0f : call qword ptr [rax + 0xfff95d]
0x0000000000495b4f : call qword ptr [rax + 0xfffa2b]
0x0000000000495b67 : call qword ptr [rax + 0xfffa30]
0x0000000000417c4e : call qword ptr [rax + 0xffff883]
0x00000000004b04d3 : call qword ptr [rax + 1]
0x000000000049565f : call qword ptr [rax + 3]
0x0000000000495657 : call qword ptr [rax + 4]
0x00000000004b4253 : call qword ptr [rax + 5]
0x000000000049548b : call qword ptr [rax + 6]
0x0000000000495483 : call qword ptr [rax + 7]
0x00000000004127f8 : call qword ptr [rax + 8]
0x0000000000495473 : call qword ptr [rax + 9]
0x0000000000477d72 : call qword ptr [rax - 0x1107a3a]
0x000000000046567e : call qword ptr [rax - 0x1277275]
0x000000000040fa4e : call qword ptr [rax - 0x1600cebb]
0x000000000048183e : call qword ptr [rax - 0x170876b4]
0x000000000046c16e : call qword ptr [rax - 0x176a76b8]
0x00000000004622e8 : call qword ptr [rax - 0x18]
0x000000000049569f : call qword ptr [rax - 0x1a]
0x000000000048fb79 : call qword ptr [rax - 0x1b]
0x0000000000495d47 : call qword ptr [rax - 0x1f000556]
0x00000000004951f3 : call qword ptr [rax - 0x1f000637]
0x0000000000495013 : call qword ptr [rax - 0x1f000655]
0x0000000000495027 : call qword ptr [rax - 0x1f000663]
0x000000000041235e : call qword ptr [rax - 0x1f3a38b7]
0x000000000045515e : call qword ptr [rax - 0x1f7c2f77]
0x0000000000487089 : call qword ptr [rax - 0x21417]
0x000000000049510b : call qword ptr [rax - 0x21]
0x000000000040eb5e : call qword ptr [rax - 0x21d2fa3a]
0x0000000000495187 : call qword ptr [rax - 0x24]
0x0000000000495123 : call qword ptr [rax - 0x25]
0x000000000049509f : call qword ptr [rax - 0x26]
0x000000000049513f : call qword ptr [rax - 0x27]
0x00000000004951cf : call qword ptr [rax - 0x2e]
0x00000000004a468b : call qword ptr [rax - 0x2f00034e]
0x0000000000495bdf : call qword ptr [rax - 0x2f0005f4]
0x0000000000494fdf : call qword ptr [rax - 0x2f000669]
0x000000000048c05e : call qword ptr [rax - 0x36ce09cf]
0x000000000046237e : call qword ptr [rax - 0x3841f0bf]
0x00000000004951e3 : call qword ptr [rax - 0x3c]
0x000000000041649e : call qword ptr [rax - 0x3f3f38b8]
0x000000000045061e : call qword ptr [rax - 0x3fc27cb8]
0x000000000041e2fe : call qword ptr [rax - 0x402e76b8]
0x0000000000494f2f : call qword ptr [rax - 0x47]
0x0000000000419c0e : call qword ptr [rax - 0x48]
0x000000000046dd4e : call qword ptr [rax - 0x4ef7a75]
0x0000000000495e53 : call qword ptr [rax - 0x4f000506]
0x0000000000495e33 : call qword ptr [rax - 0x4f000507]
0x0000000000495e0f : call qword ptr [rax - 0x4f000508]
0x0000000000494c77 : call qword ptr [rax - 0x4f0006d8]
0x000000000046241e : call qword ptr [rax - 0x4ff7a75]
0x0000000000495057 : call qword ptr [rax - 0x53]
0x0000000000495003 : call qword ptr [rax - 0x5a]
0x0000000000495d37 : call qword ptr [rax - 0x5b]
0x00000000004724ae : call qword ptr [rax - 0x5ee1418]
0x0000000000495d87 : call qword ptr [rax - 0x5f00050e]
0x0000000000495f3b : call qword ptr [rax - 0x630004d0]
0x000000000045a0ee : call qword ptr [rax - 0x66ea72b8]
0x0000000000495d07 : call qword ptr [rax - 0x67]
0x0000000000494e93 : call qword ptr [rax - 0x6a]
0x0000000000495cbf : call qword ptr [rax - 0x6f000587]
0x0000000000495cb7 : call qword ptr [rax - 0x6f00058b]
0x0000000000495caf : call qword ptr [rax - 0x6f00058f]
0x0000000000495ca7 : call qword ptr [rax - 0x6f000593]
0x0000000000495c9f : call qword ptr [rax - 0x6f000597]
0x0000000000495c97 : call qword ptr [rax - 0x6f00059b]
0x0000000000495c8f : call qword ptr [rax - 0x6f00059f]
0x0000000000494ef7 : call qword ptr [rax - 0x6f000643]
0x0000000000494e67 : call qword ptr [rax - 0x6f000671]
0x0000000000494d7b : call qword ptr [rax - 0x6f]
0x0000000000495ce7 : call qword ptr [rax - 0x74]
0x0000000000411c5e : call qword ptr [rax - 0x74fd74b8]
0x000000000046dba0 : call qword ptr [rax - 0x75]
0x000000000044d93e : call qword ptr [rax - 0x76b33c0d]
0x000000000041d6ee : call qword ptr [rax - 0x777474b8]
0x0000000000487beb : call qword ptr [rax - 0x7a53b275]
0x00000000004835ae : call qword ptr [rax - 0x7ab23fcf]
0x000000000048d0de : call qword ptr [rax - 0x7bf0127b]
0x000000000045bdfe : call qword ptr [rax - 0x7c1fb873]
0x000000000048038e : call qword ptr [rax - 0x7cb7acab]
0x000000000046bf4e : call qword ptr [rax - 0x8bf4a75]
0x000000000046c7ae : call qword ptr [rax - 0x8d72bb]
0x00000000004882fe : call qword ptr [rax - 0x949f0c0]
0x00000000004652ee : call qword ptr [rax - 0x977a75]
0x0000000000478a2e : call qword ptr [rax - 0xb163fcf]
0x00000000004641de : call qword ptr [rax - 0xc76b6ab]
0x0000000000495d77 : call qword ptr [rax - 0xe]
0x00000000004683fe : call qword ptr [rax - 0xf3f38b8]
0x0000000000495e4b : call qword ptr [rax - 6]
0x0000000000495e2b : call qword ptr [rax - 7]
0x0000000000495e07 : call qword ptr [rax - 8]
0x000000000041fb73 : call qword ptr [rax]
0x0000000000411644 : call qword ptr [rbp + 0x18]
0x00000000004115b8 : call qword ptr [rbp + 0x20]
0x0000000000411ef5 : call qword ptr [rbp + 0x30]
0x00000000004111ec : call qword ptr [rbp + 0x38]
0x0000000000400b5c : call qword ptr [rbp + 0x48]
0x0000000000409b2e : call qword ptr [rbp + 0x53]
0x0000000000411432 : call qword ptr [rbp + 0x58]
0x000000000041093a : call qword ptr [rbp + 0x60]
0x00000000004114d8 : call qword ptr [rbp + 0x68]
0x00000000004139d5 : call qword ptr [rbp + 0x70]
0x0000000000497273 : call qword ptr [rbp + 0x73]
0x0000000000412339 : call qword ptr [rbp + 0x80]
0x00000000004157a2 : call qword ptr [rbp + 0x88]
0x0000000000414f61 : call qword ptr [rbp + 0x90]
0x00000000004b156b : call qword ptr [rbp + 0xb]
0x00000000004197c1 : call qword ptr [rbp + 0xe0]
0x00000000004197ef : call qword ptr [rbp + 0xe8]
0x00000000004b094f : call qword ptr [rbp + 1]
0x00000000004ac77b : call qword ptr [rbp + 2]
0x00000000004124f6 : call qword ptr [rbp + 8]
0x000000000049350f : call qword ptr [rbp - 0x5c]
0x000000000040116e : call qword ptr [rbx + 0x10]
0x0000000000417a1c : call qword ptr [rbx + 0x18]
0x00000000004a5a5f : call qword ptr [rbx + 0x25fffd7d]
0x000000000045ec0a : call qword ptr [rbx + 0x38]
0x0000000000459689 : call qword ptr [rbx + 0x48]
0x000000000048e772 : call qword ptr [rbx + 0x49]
0x000000000041c07c : call qword ptr [rbx + 0x50]
0x000000000048df62 : call qword ptr [rbx + 0x52]
0x000000000041fa26 : call qword ptr [rbx + 0x64]
0x00000000004a8960 : call qword ptr [rbx + 0x7c]
0x00000000004120cb : call qword ptr [rbx + 0x80]
0x0000000000470849 : call qword ptr [rbx + 0x90]
0x0000000000419651 : call qword ptr [rbx + 0xe0]
0x0000000000419679 : call qword ptr [rbx + 0xe8]
0x0000000000461230 : call qword ptr [rbx + 0xf]
0x00000000004ac5cb : call qword ptr [rbx + 1]
0x00000000004b05ab : call qword ptr [rbx + 4]
0x000000000047c90b : call qword ptr [rbx - 0x77]
0x000000000040ebd0 : call qword ptr [rbx]
0x000000000045f364 : call qword ptr [rcx + 0x38]
0x000000000049350b : call qword ptr [rcx + 0x55fff7a4]
0x00000000004b0867 : call qword ptr [rcx + 1]
0x00000000004a824d : call qword ptr [rcx - 0x66]
0x000000000040cf8d : call qword ptr [rcx - 0x74b70001]
0x0000000000404b6d : call qword ptr [rcx - 0x74b80000]
0x0000000000493303 : call qword ptr [rcx - 0xf]
0x000000000048a7c0 : call qword ptr [rcx]
0x0000000000418921 : call qword ptr [rdi + 0x18]
0x000000000046130a : call qword ptr [rdi + 0x38]
0x0000000000413cf4 : call qword ptr [rdi + 0x40]
0x00000000004a9493 : call qword ptr [rdi + 0x4656ee7e]
0x0000000000416b1e : call qword ptr [rdi + 0x58]
0x000000000047b588 : call qword ptr [rdi + 0x60]
0x0000000000411901 : call qword ptr [rdi + 0x70]
0x000000000041566e : call qword ptr [rdi + 0x78]
0x0000000000413f2b : call qword ptr [rdi + 0x80]
0x0000000000413c8b : call qword ptr [rdi + 0x90]
0x00000000004b51b7 : call qword ptr [rdi + 1]
0x00000000004adb97 : call qword ptr [rdi + 2]
0x0000000000495f43 : call qword ptr [rdi - 0x630004d0]
0x00000000004964b3 : call qword ptr [rdi]
0x00000000004952e3 : call qword ptr [rdx + 0x14]
0x00000000004952f3 : call qword ptr [rdx + 0x22fffa12]
0x00000000004957eb : call qword ptr [rdx + 0x22fffa39]
0x00000000004959e3 : call qword ptr [rdx + 0x31]
0x000000000049581b : call qword ptr [rdx + 0x34]
0x0000000000411dca : call qword ptr [rdx + 0x90]
0x00000000004b4c23 : call qword ptr [rdx + 1]
0x000000000046f2b5 : call qword ptr [rdx + 3]
0x0000000000495313 : call qword ptr [rdx]
0x000000000049527f : call qword ptr [rsi + 0x11]
0x00000000004b0447 : call qword ptr [rsi + 0x16]
0x000000000041393f : call qword ptr [rsi + 0x18]
0x00000000004b041f : call qword ptr [rsi + 0x1b]
0x0000000000417c31 : call qword ptr [rsi + 0x20]
0x000000000049528f : call qword ptr [rsi + 0x26fffa0f]
0x0000000000495787 : call qword ptr [rsi + 0x26fffa36]
0x00000000004a9f9f : call qword ptr [rsi + 0x30]
0x0000000000463d25 : call qword ptr [rsi + 0x38]
0x000000000049549f : call qword ptr [rsi + 0x3cfffa03]
0x0000000000496367 : call qword ptr [rsi + 0x40]
0x000000000041b7bd : call qword ptr [rsi + 0x50]
0x0000000000411e08 : call qword ptr [rsi + 0x80]
0x00000000004b39b3 : call qword ptr [rsi + 1]
0x00000000004963c3 : call qword ptr [rsi + rdi + 0x3e61fffb]
0x00000000004932e3 : call qword ptr [rsi - 0x10]
0x000000000044f7ad : call qword ptr [rsi]
0x000000000047d267 : call r10
0x000000000040093c : call r11
0x000000000044b590 : call r12
0x000000000044ffe6 : call r13
0x000000000044f950 : call r14
0x000000000044bad2 : call r15
0x0000000000400410 : call rax
0x0000000000401225 : call rbp
0x000000000040093d : call rbx
0x000000000041d7a3 : call rcx
0x000000000044bad3 : call rdi
0x000000000040ea17 : call rdx
0x000000000044f951 : call rsi
0x000000000044b591 : call rsp
0x0000000000429c57 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a9a40 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000450e63 : cdq ; retf
0x00000000004071cb : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000495021 : cdq ; stc ; inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x000000000045d323 : cdq ; xor edx, edi ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000400b96 : cdqe ; pop rbp ; ret
0x000000000047e2f9 : clc ; add al, 0x75 ; retf
0x0000000000478ae4 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046abe1 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041ddfa : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041da57 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000412149 : clc ; add cl, byte ptr [rax - 0x77] ; and al, 0x30 ; call qword ptr [r13 + 0x30]
0x000000000047f233 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d60d : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004891ef : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000450bb2 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x0000000000400b68 : clc ; add rax, 1 ; pop rbp ; ret
0x000000000042bf77 : clc ; add rax, rcx ; ret
0x000000000042c4a4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004787a3 : clc ; call qword ptr [rax + 0x1f0f2e66]
0x000000000047c7ad : clc ; call qword ptr [rax + 0x58878b48]
0x000000000048dcdd : clc ; call qword ptr [rax + 0x7f11fe83]
0x000000000048038d : clc ; call qword ptr [rax - 0x7cb7acab]
0x0000000000494b66 : clc ; call qword ptr [rax]
0x000000000047c22e : clc ; call qword ptr [rbp + 0x53]
0x00000000004b0446 : clc ; call qword ptr [rsi + 0x16]
0x00000000004b041e : clc ; call qword ptr [rsi + 0x1b]
0x0000000000494b6a : clc ; call rax
0x00000000004b5501 : clc ; cld ; call qword ptr [rbx]
0x0000000000495e0d : clc ; cli ; call qword ptr [rax - 0x4f000508]
0x0000000000495e05 : clc ; cli ; call qword ptr [rax - 8]
0x0000000000495df9 : clc ; cli ; call qword ptr [rax]
0x0000000000495e15 : clc ; cli ; call rax
0x0000000000495e1d : clc ; cli ; inc dword ptr [rax] ; stc ; cli ; call qword ptr [rax]
0x0000000000495e09 : clc ; cli ; push qword ptr [rax - 8] ; cli ; call qword ptr [rax - 0x4f000508]
0x0000000000495e01 : clc ; cli ; push qword ptr [rax] ; clc ; cli ; call qword ptr [rax - 8]
0x0000000000423b98 : clc ; cmovne rax, rcx ; ret
0x000000000042e5e9 : clc ; cmp rcx, rax ; jne 0x42e613 ; xor eax, eax ; ret
0x0000000000477506 : clc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004804b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424560 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473430 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000048d62e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401bbc : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000470c29 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000041204d : clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000047960b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000492cf5 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004628b6 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000046085e : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x0000000000494b64 : clc ; hlt ; clc ; call qword ptr [rax]
0x000000000045fc13 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045a682 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004114d2 : clc ; jbe 0x41152a ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x0000000000413799 : clc ; jbe 0x4137c0 ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x0000000000448faa : clc ; jg 0x448f70 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000449006 : clc ; jg 0x449000 ; int1 ; mov eax, eax ; ret
0x0000000000454f27 : clc ; jg 0x454eb3 ; ret 0xdb76
0x000000000048e0d3 : clc ; leave ; ret
0x00000000004a86a2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000413724 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b52b4 : clc ; mov es, word ptr [rax] ; add byte ptr [rax - 0x21], bh ; cld ; call qword ptr [rdx]
0x00000000004300e7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430a57 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004359a7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430c57 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435917 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430e57 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435887 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430103 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000448aee : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000448c6d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043933c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000447d7a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048e251 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041373c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b966 : clc ; pop rbp ; pop r12 ; ret
0x0000000000494b76 : clc ; push qword ptr [rax - 0x7f00070b] ; hlt ; clc ; call rax
0x00000000004724e7 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000476093 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000491ae8 : clc ; push rbx ; ret
0x0000000000413755 : clc ; ret
0x00000000004054b4 : clc ; retf
0x000000000043fac4 : clc ; rol ch, 1 ; jns 0x43faa0 ; retf 0xead3
0x000000000043fc14 : clc ; rol ch, 1 ; jns 0x43fbf0 ; retf 0xead3
0x000000000043fd64 : clc ; rol ch, 1 ; jns 0x43fd40 ; retf 0xead3
0x000000000043feb4 : clc ; rol ch, 1 ; jns 0x43fe90 ; retf 0xead3
0x0000000000440004 : clc ; rol ch, 1 ; jns 0x43ffe0 ; retf 0xead3
0x0000000000440154 : clc ; rol ch, 1 ; jns 0x440130 ; retf 0xead3
0x00000000004402a4 : clc ; rol ch, 1 ; jns 0x440280 ; retf 0xead3
0x00000000004403f4 : clc ; rol ch, 1 ; jns 0x4403d0 ; retf 0xead3
0x0000000000440544 : clc ; rol ch, 1 ; jns 0x440520 ; retf 0xead3
0x0000000000440694 : clc ; rol ch, 1 ; jns 0x440670 ; retf 0xead3
0x00000000004407e4 : clc ; rol ch, 1 ; jns 0x4407c0 ; retf 0xead3
0x0000000000440934 : clc ; rol ch, 1 ; jns 0x440910 ; retf 0xead3
0x0000000000440a84 : clc ; rol ch, 1 ; jns 0x440a60 ; retf 0xead3
0x0000000000440bd4 : clc ; rol ch, 1 ; jns 0x440bb0 ; retf 0xead3
0x0000000000440d24 : clc ; rol ch, 1 ; jns 0x440d00 ; retf 0xead3
0x000000000048398a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047512f : clc ; shr rax, 2 ; ret
0x00000000004825fd : clc ; std ; jbe 0x482608 ; ret
0x00000000004b39b1 : clc ; sti ; call qword ptr [rsi + 1]
0x0000000000485e21 : clc ; sub rax, r8 ; ret
0x00000000004419e6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000044798b : clc ; sub rax, rsi ; ret
0x000000000042c61b : clc ; vzeroupper ; ret
0x0000000000448f0f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004980f6 : cld ; call qword ptr [rax + 0x2d]
0x00000000004595dd : cld ; call qword ptr [rax + 0x2e66c3f3]
0x0000000000487eab : cld ; call qword ptr [rax + 0x538b3d83]
0x0000000000486c4d : cld ; call qword ptr [rax + 0x6cc205f6]
0x00000000004b4252 : cld ; call qword ptr [rax + 5]
0x00000000004a468a : cld ; call qword ptr [rax - 0x2f00034e]
0x0000000000487bea : cld ; call qword ptr [rax - 0x7a53b275]
0x00000000004b555a : cld ; call qword ptr [rax]
0x00000000004b5502 : cld ; call qword ptr [rbx]
0x00000000004b51b6 : cld ; call qword ptr [rdi + 1]
0x00000000004b4c22 : cld ; call qword ptr [rdx + 1]
0x00000000004b52ba : cld ; call qword ptr [rdx]
0x00000000004a4662 : cld ; call rax
0x00000000004b4e06 : cld ; call rdx
0x00000000004a487e : cld ; call rsp
0x000000000044a0a2 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004a4692 : cld ; inc dword ptr [rax - 0x2f00034e] ; mov cl, 0xfc ; call rax
0x000000000047c7ee : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000448fec : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448f5a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004980ee : cld ; lcall [rax] ; sub eax, 0x2be8fffc ; cld ; call qword ptr [rax + 0x2d]
0x00000000004a4876 : cld ; lcall [rsp + rsi*4 - 0x4b7b0004] ; cld ; call rsp
0x0000000000400c3d : cld ; leave ; ret
0x00000000004a9425 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a93f0 ; retf
0x0000000000430872 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430a75 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430c75 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430e75 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000448af6 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000448c78 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000043934e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000447d88 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000447d82 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004304a6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435b36 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430686 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435ab6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430866 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435a36 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004302c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435bb6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044ab97 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004a466a : cld ; push qword ptr [rax - 0x2f00034e] ; mov cl, 0xfc ; call rax
0x00000000004a469e : cld ; push qword ptr [rax - 0x4e] ; cld ; call rax
0x0000000000430151 : cld ; ret
0x0000000000409690 : cld ; retf 0xffff
0x00000000004aef84 : cld ; sal dh, cl ; call qword ptr [rax]
0x00000000004a7b43 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004a7b56 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000448612 : cld ; vzeroupper ; ret
0x000000000045dbfd : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000004163f1 : cli ; add ch, al ; pop rax ; ret
0x00000000004164f8 : cli ; add ch, al ; push rcx ; ret 0xffff
0x000000000046a135 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004123b2 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000448ae1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x448ae9 ; mov byte ptr [rdi], cl ; ret
0x0000000000447adb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043936c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000449bce : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000449c2c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a9b39 : cli ; call 0xffffffffab58662e
0x0000000000495baa : cli ; call qword ptr [rax + 0x10]
0x0000000000495b46 : cli ; call qword ptr [rax + 0x10fffa2c]
0x0000000000495b3e : cli ; call qword ptr [rax + 0x10fffa2d]
0x0000000000495b36 : cli ; call qword ptr [rax + 0x10fffa2e]
0x0000000000495b2e : cli ; call qword ptr [rax + 0x10fffa2f]
0x0000000000495cc6 : cli ; call qword ptr [rax + 0x10fffa7d]
0x0000000000495236 : cli ; call qword ptr [rax + 0x12]
0x0000000000495bb2 : cli ; call qword ptr [rax + 0x13]
0x0000000000495bf6 : cli ; call qword ptr [rax + 0x15]
0x0000000000495bba : cli ; call qword ptr [rax + 0x16]
0x0000000000495bfe : cli ; call qword ptr [rax + 0x18]
0x0000000000495bc2 : cli ; call qword ptr [rax + 0x19]
0x0000000000495c06 : cli ; call qword ptr [rax + 0x1b]
0x0000000000495bca : cli ; call qword ptr [rax + 0x1c]
0x0000000000495c0e : cli ; call qword ptr [rax + 0x1e]
0x0000000000452fd3 : cli ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000495bd2 : cli ; call qword ptr [rax + 0x1f]
0x0000000000495246 : cli ; call qword ptr [rax + 0x20fffa10]
0x0000000000495956 : cli ; call qword ptr [rax + 0x20fffa34]
0x000000000049573e : cli ; call qword ptr [rax + 0x20fffa37]
0x0000000000495c16 : cli ; call qword ptr [rax + 0x21]
0x0000000000495bda : cli ; call qword ptr [rax + 0x22]
0x0000000000495cce : cli ; call qword ptr [rax + 0x30fffa82]
0x0000000000495cee : cli ; call qword ptr [rax + 0x30fffa8f]
0x0000000000495946 : cli ; call qword ptr [rax + 0x36]
0x0000000000460ba5 : cli ; call qword ptr [rax + 0x38]
0x000000000049572e : cli ; call qword ptr [rax + 0x39]
0x000000000045713d : cli ; call qword ptr [rax + 0x56415741]
0x0000000000495c7e : cli ; call qword ptr [rax + 0x58]
0x000000000049546a : cli ; call qword ptr [rax + 0xa]
0x0000000000495ba2 : cli ; call qword ptr [rax + 0xd]
0x000000000049544e : cli ; call qword ptr [rax + 0xf]
0x0000000000495b4e : cli ; call qword ptr [rax + 0xfffa2b]
0x0000000000495b66 : cli ; call qword ptr [rax + 0xfffa30]
0x000000000049565e : cli ; call qword ptr [rax + 3]
0x0000000000495656 : cli ; call qword ptr [rax + 4]
0x000000000049548a : cli ; call qword ptr [rax + 6]
0x0000000000495482 : cli ; call qword ptr [rax + 7]
0x000000000049547a : cli ; call qword ptr [rax + 8]
0x0000000000495472 : cli ; call qword ptr [rax + 9]
0x000000000049569e : cli ; call qword ptr [rax - 0x1a]
0x0000000000495d46 : cli ; call qword ptr [rax - 0x1f000556]
0x0000000000495bde : cli ; call qword ptr [rax - 0x2f0005f4]
0x0000000000495e52 : cli ; call qword ptr [rax - 0x4f000506]
0x0000000000495e32 : cli ; call qword ptr [rax - 0x4f000507]
0x0000000000495e0e : cli ; call qword ptr [rax - 0x4f000508]
0x0000000000495d36 : cli ; call qword ptr [rax - 0x5b]
0x0000000000495d86 : cli ; call qword ptr [rax - 0x5f00050e]
0x0000000000495d06 : cli ; call qword ptr [rax - 0x67]
0x0000000000495cbe : cli ; call qword ptr [rax - 0x6f000587]
0x0000000000495cb6 : cli ; call qword ptr [rax - 0x6f00058b]
0x0000000000495cae : cli ; call qword ptr [rax - 0x6f00058f]
0x0000000000495ca6 : cli ; call qword ptr [rax - 0x6f000593]
0x0000000000495c9e : cli ; call qword ptr [rax - 0x6f000597]
0x0000000000495c96 : cli ; call qword ptr [rax - 0x6f00059b]
0x0000000000495c8e : cli ; call qword ptr [rax - 0x6f00059f]
0x0000000000495ce6 : cli ; call qword ptr [rax - 0x74]
0x0000000000495d76 : cli ; call qword ptr [rax - 0xe]
0x0000000000495e4a : cli ; call qword ptr [rax - 6]
0x0000000000495e2a : cli ; call qword ptr [rax - 7]
0x0000000000495e06 : cli ; call qword ptr [rax - 8]
0x0000000000495226 : cli ; call qword ptr [rax]
0x00000000004b28c2 : cli ; call qword ptr [rbx]
0x00000000004b25c2 : cli ; call qword ptr [rcx]
0x00000000004b1dda : cli ; call qword ptr [rdi]
0x00000000004952e2 : cli ; call qword ptr [rdx + 0x14]
0x00000000004952f2 : cli ; call qword ptr [rdx + 0x22fffa12]
0x00000000004957ea : cli ; call qword ptr [rdx + 0x22fffa39]
0x00000000004959e2 : cli ; call qword ptr [rdx + 0x31]
0x000000000049581a : cli ; call qword ptr [rdx + 0x34]
0x0000000000495312 : cli ; call qword ptr [rdx]
0x000000000049527e : cli ; call qword ptr [rsi + 0x11]
0x000000000049528e : cli ; call qword ptr [rsi + 0x26fffa0f]
0x0000000000495786 : cli ; call qword ptr [rsi + 0x26fffa36]
0x0000000000495776 : cli ; call qword ptr [rsi + 0x38]
0x000000000049549e : cli ; call qword ptr [rsi + 0x3cfffa03]
0x000000000049526e : cli ; call qword ptr [rsi]
0x0000000000495256 : cli ; call rax
0x00000000004b1d46 : cli ; call rcx
0x0000000000495302 : cli ; call rdx
0x0000000000495796 : cli ; call rsi
0x00000000004953ca : cli ; call rsp
0x00000000004b5559 : cli ; cld ; call qword ptr [rax]
0x0000000000495e51 : cli ; cli ; call qword ptr [rax - 0x4f000506]
0x0000000000495e49 : cli ; cli ; call qword ptr [rax - 6]
0x0000000000495e59 : cli ; cli ; call rax
0x0000000000495e4d : cli ; cli ; push qword ptr [rax - 6] ; cli ; call qword ptr [rax - 0x4f000506]
0x0000000000495e45 : cli ; cli ; push qword ptr [rax] ; cli ; cli ; call qword ptr [rax - 6]
0x000000000044d145 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045e36e : cli ; dec dword ptr [rax + 0x29] ; ret
0x0000000000480050 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045d325 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000472737 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000049542a : cli ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x000000000049574a : cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000495922 : cli ; inc dword ptr [rax + 0x3a] ; cli ; call rax
0x0000000000495c7a : cli ; inc dword ptr [rax + 0x56] ; cli ; call qword ptr [rax + 0x58]
0x0000000000495252 : cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x00000000004953c6 : cli ; inc dword ptr [rax + rdx - 6] ; call rsp
0x0000000000495d42 : cli ; inc dword ptr [rax - 0x57] ; cli ; call qword ptr [rax - 0x1f000556]
0x0000000000495d72 : cli ; inc dword ptr [rax - 0xe] ; cli ; call qword ptr [rax - 0xe]
0x0000000000495242 : cli ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000495df6 : cli ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495c6a : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x000000000049573a : cli ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000495d32 : cli ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax - 0x5b]
0x0000000000495e1e : cli ; inc dword ptr [rax] ; stc ; cli ; call qword ptr [rax]
0x000000000045a67f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000047202b : cli ; inc dword ptr [rcx + rcx*4 - 2] ; mov rdi, r13 ; call qword ptr [r14 + 0x18]
0x00000000004533dd : cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004566c5 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004958be : cli ; inc dword ptr [rdi + rsi - 6] ; call rsp
0x00000000004952fe : cli ; inc dword ptr [rdx + 0x11] ; cli ; call rdx
0x00000000004957f6 : cli ; inc dword ptr [rdx + 0x38] ; cli ; call rdx
0x00000000004952ee : cli ; inc dword ptr [rdx] ; adc edi, edx ; call qword ptr [rdx + 0x22fffa12]
0x00000000004957e6 : cli ; inc dword ptr [rdx] ; cmp bh, dl ; call qword ptr [rdx + 0x22fffa39]
0x0000000000495792 : cli ; inc dword ptr [rsi + 0x35] ; cli ; call rsi
0x000000000049528a : cli ; inc dword ptr [rsi] ; adc dl, bh ; call qword ptr [rsi + 0x26fffa0f]
0x0000000000495232 : cli ; inc eax ; adc bh, dl ; call qword ptr [rax + 0x12]
0x000000000049565a : cli ; inc eax ; add edi, edx ; call qword ptr [rax + 3]
0x0000000000495942 : cli ; inc eax ; cli ; call qword ptr [rax + 0x36]
0x0000000000495c5a : cli ; inc eax ; cli ; call rax
0x000000000049572a : cli ; inc eax ; cmp edx, edi ; call qword ptr [rax + 0x39]
0x0000000000495dea : cli ; inc eax ; idiv edx ; call rax
0x0000000000495d22 : cli ; inc eax ; sahf ; cli ; call qword ptr [rax]
0x0000000000495816 : cli ; inc edx ; xor al, 0xfa ; call qword ptr [rdx + 0x34]
0x000000000049527a : cli ; inc esi ; adc edx, edi ; call qword ptr [rsi + 0x11]
0x0000000000495772 : cli ; inc esi ; cmp dl, bh ; call qword ptr [rsi + 0x38]
0x0000000000439327 : cli ; jg 0x439331 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000447aa6 : cli ; jg 0x447ab0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004480d9 : cli ; jg 0x4480e3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448541 : cli ; jg 0x44854b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448c62 : cli ; jg 0x448c6c ; vzeroupper ; ret
0x0000000000448e38 : cli ; jg 0x448e42 ; vzeroupper ; ret
0x0000000000495916 : cli ; lcall [rdx + 0x2afffa34] ; xor al, 0xfa ; call rax
0x0000000000455d3c : cli ; loopne 0x455db4 ; jae 0x455cca ; retf 0xb941
0x0000000000430c78 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041460f : cli ; mov rsi, r14 ; mov rdi, rbx ; call qword ptr [rax + 0x40]
0x000000000042c928 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042b3d6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9fc1 : cli ; push 0x6e ; ja 0x4a9f49 ; ret 0x48f
0x000000000049523e : cli ; push qword ptr [rax + 0x11] ; cli ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000495496 : cli ; push qword ptr [rax + 0x20fffa04] ; add al, 0xfa ; call qword ptr [rsi + 0x3cfffa03]
0x0000000000495b5e : cli ; push qword ptr [rax + 0x29] ; cli ; call qword ptr [rax]
0x0000000000495736 : cli ; push qword ptr [rax + 0x38] ; cli ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000495426 : cli ; push qword ptr [rax + 0x40fffa13] ; adc edi, edx ; call rax
0x0000000000495746 : cli ; push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x0000000000495c86 : cli ; push qword ptr [rax + 0x5c] ; cli ; call qword ptr [rax]
0x0000000000495d2e : cli ; push qword ptr [rax + 0xfffaa2] ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax - 0x5b]
0x00000000004953c2 : cli ; push qword ptr [rax + rdx + 0x1044fffa] ; cli ; call rsp
0x0000000000495de6 : cli ; push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x0000000000495d8e : cli ; push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000495c56 : cli ; push qword ptr [rax - 0x3f0005bd] ; cli ; call rax
0x0000000000495cfa : cli ; push qword ptr [rax - 0x6c] ; cli ; call qword ptr [rax]
0x0000000000495cda : cli ; push qword ptr [rax - 0x79] ; cli ; call qword ptr [rax]
0x0000000000495e4e : cli ; push qword ptr [rax - 6] ; cli ; call qword ptr [rax - 0x4f000506]
0x0000000000495e2e : cli ; push qword ptr [rax - 7] ; cli ; call qword ptr [rax - 0x4f000507]
0x0000000000495e0a : cli ; push qword ptr [rax - 8] ; cli ; call qword ptr [rax - 0x4f000508]
0x000000000049522e : cli ; push qword ptr [rax] ; adc edi, edx ; inc eax ; adc bh, dl ; call qword ptr [rax + 0x12]
0x0000000000495e02 : cli ; push qword ptr [rax] ; clc ; cli ; call qword ptr [rax - 8]
0x0000000000495e46 : cli ; push qword ptr [rax] ; cli ; cli ; call qword ptr [rax - 6]
0x0000000000495d6e : cli ; push qword ptr [rax] ; cli ; inc dword ptr [rax - 0xe] ; cli ; call qword ptr [rax - 0xe]
0x0000000000495726 : cli ; push qword ptr [rax] ; cmp bh, dl ; inc eax ; cmp edx, edi ; call qword ptr [rax + 0x39]
0x0000000000495b9e : cli ; push qword ptr [rax] ; or al, 0xfa ; call qword ptr [rax + 0xd]
0x0000000000495c76 : cli ; push qword ptr [rax] ; push rsp ; cli ; inc dword ptr [rax + 0x56] ; cli ; call qword ptr [rax + 0x58]
0x0000000000495e26 : cli ; push qword ptr [rax] ; stc ; cli ; call qword ptr [rax - 7]
0x0000000000495cd2 : cli ; push qword ptr [rax] ; test dl, bh ; call rax
0x0000000000495cf2 : cli ; push qword ptr [rax] ; xchg eax, ecx ; cli ; call rax
0x00000000004958ba : cli ; push qword ptr [rdi + rsi + 0x3744fffa] ; cli ; call rsp
0x00000000004952ea : cli ; push qword ptr [rdx + 0x13] ; cli ; inc dword ptr [rdx] ; adc edi, edx ; call qword ptr [rdx + 0x22fffa12]
0x00000000004957e2 : cli ; push qword ptr [rdx + 0x3a] ; cli ; inc dword ptr [rdx] ; cmp bh, dl ; call qword ptr [rdx + 0x22fffa39]
0x00000000004952fa : cli ; push qword ptr [rdx + 0x42fffa11] ; adc edx, edi ; call rdx
0x00000000004957f2 : cli ; push qword ptr [rdx + 0x42fffa38] ; cmp dl, bh ; call rdx
0x0000000000495812 : cli ; push qword ptr [rdx] ; xor eax, 0x34c2fffa ; cli ; call qword ptr [rdx + 0x34]
0x0000000000495286 : cli ; push qword ptr [rsi + 0x10] ; cli ; inc dword ptr [rsi] ; adc dl, bh ; call qword ptr [rsi + 0x26fffa0f]
0x0000000000495276 : cli ; push qword ptr [rsi] ; adc bh, dl ; inc esi ; adc edx, edi ; call qword ptr [rsi + 0x11]
0x000000000049576e : cli ; push qword ptr [rsi] ; cmp edx, edi ; inc esi ; cmp dl, bh ; call qword ptr [rsi + 0x38]
0x0000000000495e1a : cli ; push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; call qword ptr [rax]
0x0000000000495c66 : cli ; push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495d3e : cli ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; inc dword ptr [rax - 0x57] ; cli ; call qword ptr [rax - 0x1f000556]
0x0000000000495d5e : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495e3e : cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x0000000000448a19 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a8a65 : cli ; ret 0xac65
0x0000000000450412 : cli ; retf 0x26
0x000000000044cbfb : cli ; setae al ; ret
0x00000000004a8910 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004004ca : cli ; wait ; sub eax, dword ptr [rax] ; nop ; ret
0x00000000004246b2 : cli ; xchg dword ptr [rcx], ebp ; add bh, dh ; ret 0
0x00000000004a76aa : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004ac77a : cmc ; call qword ptr [rbp + 2]
0x00000000004ac5ca : cmc ; call qword ptr [rbx + 1]
0x00000000004ac3f2 : cmc ; call qword ptr [rdx]
0x00000000004aecf6 : cmc ; call qword ptr [rsi]
0x00000000004ac96a : cmc ; call rax
0x00000000004ac8de : cmc ; call rsp
0x0000000000494b69 : cmc ; clc ; call rax
0x00000000004aa3e9 : cmc ; mov ch, 0xab ; ret
0x0000000000435aba : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004304fe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000446e63 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a7297 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000446e67 : cmc ; sub eax, edx ; ret
0x00000000004a9a25 : cmc ; xlatb ; ret 0x4e27
0x0000000000419e19 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000419e18 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000448f34 : cmove eax, ecx ; pop rbx ; ret
0x0000000000472a91 : cmove eax, ecx ; ret
0x0000000000424563 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000448efc : cmove eax, edx ; pop rbx ; ret
0x000000000042469f : cmove eax, edx ; ret
0x000000000041586f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045da24 : cmove ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000047f338 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000472a90 : cmove r8, rcx ; ret
0x0000000000448f33 : cmove rax, rcx ; pop rbx ; ret
0x0000000000424562 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000448efb : cmove rax, rdx ; pop rbx ; ret
0x000000000042469e : cmove rax, rdx ; ret
0x000000000045da23 : cmove rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000047f337 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000041725b : cmovg eax, ecx ; test rdx, rdx ; jne 0x417250 ; ret
0x00000000004715ab : cmovg eax, ecx ; test rdx, rdx ; jne 0x4715a0 ; ret
0x0000000000423b9a : cmovne eax, ecx ; ret
0x0000000000448f8c : cmovne eax, edx ; pop rbx ; ret
0x000000000042459f : cmovne eax, edx ; ret
0x00000000004413a4 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000423b99 : cmovne rax, rcx ; ret
0x0000000000448f8b : cmovne rax, rdx ; pop rbx ; ret
0x000000000042459e : cmovne rax, rdx ; ret
0x00000000004413a3 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042bf38 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x0000000000451a3c : cmovs eax, edx ; ret
0x00000000004727f8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x4727f0 ; lea eax, [rdx + rdi] ; ret
0x0000000000447978 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000476a92 : cmp ah, byte ptr [rbx - 3] ; call qword ptr [rax + 0x31f1894c]
0x0000000000488f80 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000456862 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004506f2 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000417416 : cmp al, 0x24 ; call 0x4136a0
0x000000000047490b : cmp al, 0x24 ; call rbp
0x000000000048e84e : cmp al, 0x24 ; lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000048e89d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dd6c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048dcfd : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004b06f8 : cmp al, 0x43 ; add byte ptr [rax], al ; jns 0x4b06f8 ; call rsp
0x00000000004a86a0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b0ff8 : cmp al, 0x4c ; add byte ptr [rax], al ; xor al, 0xa6 ; stc ; call rsi
0x00000000004a75a3 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004a8248 : cmp al, 0x7b ; push -0x42 ; outsb dx, byte ptr [rsi] ; call qword ptr [rcx - 0x66]
0x00000000004b0774 : cmp al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004aa08b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000047c7ac : cmp al, 0xf8 ; call qword ptr [rax + 0x58878b48]
0x000000000044c49d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000447326 : cmp al, byte ptr [rsi - 1] ; jne 0x447345 ; xor eax, eax ; ret
0x000000000042c196 : cmp al, dh ; ret
0x000000000042c195 : cmp al, r14b ; ret
0x000000000048bae6 : cmp bh, 0x10 ; jne 0x48bb08 ; xor eax, eax ; ret
0x000000000048ec86 : cmp bh, 0x10 ; jne 0x48ec9e ; xor eax, eax ; ret
0x000000000048fae6 : cmp bh, 0x10 ; jne 0x48fafe ; xor eax, eax ; ret
0x0000000000490556 : cmp bh, 0x10 ; jne 0x490578 ; xor eax, eax ; ret
0x000000000048ec6c : cmp bh, 0x30 ; jne 0x48ec98 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048facc : cmp bh, 0x30 ; jne 0x48faf8 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004b1af8 : cmp bh, bh ; stc ; call qword ptr [rax]
0x00000000004957e9 : cmp bh, dl ; call qword ptr [rdx + 0x22fffa39]
0x0000000000495765 : cmp bh, dl ; call qword ptr [rsi]
0x0000000000495925 : cmp bh, dl ; call rax
0x00000000004957e5 : cmp bh, dl ; inc dword ptr [rdx] ; cmp bh, dl ; call qword ptr [rdx + 0x22fffa39]
0x0000000000495729 : cmp bh, dl ; inc eax ; cmp edx, edi ; call qword ptr [rax + 0x39]
0x0000000000411792 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000041314f : cmp byte ptr [rax + 0x29], cl ; ret
0x000000000047792b : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004111ee : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000413bf9 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000004017db : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000048340e : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042c1d7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000471115 : cmp byte ptr [rax + 1], cl ; ret
0x0000000000470e80 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045948f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045beb7 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000452088 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045c034 : cmp byte ptr [rax - 0x75], cl ; jl 0x45c05d ; and byte ptr [rax + 1], cl ; ret
0x0000000000411793 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047ed59 : cmp byte ptr [rax - 0x77], cl ; retf
0x0000000000412020 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x0000000000470c26 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000453994 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000400ba1 : cmp byte ptr [rax], 0xe8 ; ret
0x0000000000495934 : cmp byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000042c1c6 : cmp byte ptr [rax], ah ; ret
0x0000000000417893 : cmp byte ptr [rax], al ; je 0x4178a0 ; ret
0x000000000048dc6f : cmp byte ptr [rax], al ; je 0x48dc90 ; add rsp, 0x18 ; ret
0x0000000000447912 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000440f40 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042c1b6 : cmp byte ptr [rax], dl ; ret
0x000000000042c1b5 : cmp byte ptr [rax], r10b ; ret
0x000000000042c1c5 : cmp byte ptr [rax], r12b ; ret
0x0000000000440f3f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004b4d39 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b4d6d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b4d05 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048b788 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040dbe6 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416f10 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a8247 : cmp byte ptr [rbx + rdi*2], bh ; push -0x42 ; outsb dx, byte ptr [rsi] ; call qword ptr [rcx - 0x66]
0x00000000004ada7c : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x0000000000472520 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048dd6b : cmp byte ptr [rcx + rsi], 8 ; jne 0x48dd75 ; mov qword ptr [rax], rdx ; ret
0x0000000000492f73 : cmp byte ptr [rcx - 0x17cfdbbc], cl ; ret
0x000000000040409b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x00000000004591b7 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000480c26 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000417858 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042dabd : cmp byte ptr [rdi], dl ; ret
0x000000000042e5d0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042e5b9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042e5a2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d05e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048dcfc : cmp byte ptr [rdx + rsi], 8 ; jne 0x48dd1c ; mov rax, qword ptr [rax] ; ret
0x00000000004194fb : cmp byte ptr [rdx], ch ; add byte ptr [rcx], al ; ret
0x000000000048d2a4 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000489862 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000411260 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000042eca1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042edf1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042ef41 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042f091 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042f1e1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042f331 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042f481 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042f5d1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042f721 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042f871 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042f9c1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042fb11 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042fc61 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042fdb1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042ff01 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000433eda : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043405a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004341da : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043435a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004344da : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043465a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004347da : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000043495a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000434ada : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000434c5a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000434dda : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x0000000000434f5a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004350da : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043525a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004353da : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004aa466 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000404957 : cmp cl, ch ; ret 0xfffb
0x00000000004413a1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000448e1a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004ad2d1 : cmp dh, dh ; call qword ptr [rax]
0x000000000048bae5 : cmp dil, 0x10 ; jne 0x48bb08 ; xor eax, eax ; ret
0x000000000048ec85 : cmp dil, 0x10 ; jne 0x48ec9e ; xor eax, eax ; ret
0x000000000048fae5 : cmp dil, 0x10 ; jne 0x48fafe ; xor eax, eax ; ret
0x0000000000490555 : cmp dil, 0x10 ; jne 0x490578 ; xor eax, eax ; ret
0x0000000000495924 : cmp dil, dl ; call rax
0x0000000000448ae0 : cmp dl, 1 ; ja 0x448afa ; jb 0x448ae9 ; mov byte ptr [rdi], cl ; ret
0x000000000043936b : cmp dl, 1 ; jb 0x439374 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447ada : cmp dl, 1 ; jb 0x447ae1 ; mov byte ptr [rdi], cl ; ret
0x0000000000423c05 : cmp dl, al ; jne 0x423bf0 ; sub rax, 0x10 ; ret
0x000000000049573d : cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000495935 : cmp dl, bh ; call qword ptr [rax]
0x0000000000495775 : cmp dl, bh ; call qword ptr [rsi + 0x38]
0x00000000004957f9 : cmp dl, bh ; call rdx
0x0000000000495739 : cmp dl, bh ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x00000000004957f5 : cmp dl, bh ; inc dword ptr [rdx + 0x38] ; cli ; call rdx
0x00000000004957f8 : cmp dl, dil ; call rdx
0x0000000000423c04 : cmp dl, r8b ; jne 0x423bf0 ; sub rax, 0x10 ; ret
0x00000000004724c8 : cmp dword ptr [rax + 0x30], 0 ; je 0x4724d0 ; ret
0x0000000000400b18 : cmp dword ptr [rax + 0x5d01002b], -0x3d ; nop ; ret
0x000000000042aab7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b297 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040eba1 : cmp dword ptr [rax - 0x39], ecx ; ret
0x000000000045ddf8 : cmp dword ptr [rbx + rcx*4 + 0x59], ecx ; sub byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004355f8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000417891 : cmp dword ptr [rdi + 0x38], 0 ; je 0x4178a0 ; ret
0x00000000004253a1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004804af : cmp eax, -1 ; cmove rax, rdx ; ret
0x00000000004724e6 : cmp eax, -1 ; je 0x4724f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004825fc : cmp eax, -3 ; jbe 0x482608 ; ret
0x0000000000488375 : cmp eax, 0x231bfd ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000004136a2 : cmp eax, 0x2a6900 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040398a : cmp eax, 0x2b65d0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004055df : cmp eax, 0x2b84b4 ; call 0x4220b0
0x000000000044b5b2 : cmp eax, 0x7d8b48 ; call r12
0x000000000044d31f : cmp eax, 0x83482f74 ; ret
0x000000000044d146 : cmp eax, 0x83497174 ; ret
0x0000000000474134 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000455d32 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004a798b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044a456 : cmp eax, 0xfffff000 ; ja 0x44a460 ; ret
0x000000000044a4a4 : cmp eax, 0xfffff000 ; ja 0x44a4b0 ; ret
0x000000000044a6af : cmp eax, 0xfffff000 ; ja 0x44a710 ; ret
0x000000000044a745 : cmp eax, 0xfffff000 ; ja 0x44a750 ; ret
0x000000000044a782 : cmp eax, 0xfffff000 ; ja 0x44a7e0 ; ret
0x000000000044a818 : cmp eax, 0xfffff000 ; ja 0x44a828 ; ret
0x000000000044a848 : cmp eax, 0xfffff000 ; ja 0x44a858 ; ret
0x000000000044aa52 : cmp eax, 0xfffff000 ; ja 0x44aa98 ; ret
0x000000000044aac8 : cmp eax, 0xfffff000 ; ja 0x44aad8 ; ret
0x000000000044b221 : cmp eax, 0xfffff000 ; ja 0x44b230 ; ret
0x000000000045be3e : cmp eax, 0xfffff000 ; ja 0x45be50 ; ret
0x0000000000476176 : cmp eax, 0xfffff000 ; ja 0x476180 ; ret
0x00000000004761ca : cmp eax, 0xfffff000 ; ja 0x4761d8 ; ret
0x000000000044a3c8 : cmp eax, 0xfffff001 ; jae 0x44a3d0 ; ret
0x000000000044b458 : cmp eax, 0xfffff001 ; jae 0x44b460 ; ret
0x000000000044b488 : cmp eax, 0xfffff001 ; jae 0x44b490 ; ret
0x000000000044b4b8 : cmp eax, 0xfffff001 ; jae 0x44b4c0 ; ret
0x000000000044cb6b : cmp eax, 0xfffff001 ; jae 0x44cb73 ; ret
0x000000000044cb98 : cmp eax, 0xfffff001 ; jae 0x44cba0 ; ret
0x0000000000476108 : cmp eax, 0xfffff001 ; jae 0x476110 ; ret
0x0000000000489128 : cmp eax, 0xfffff001 ; jae 0x489130 ; ret
0x000000000044949b : cmp eax, 2 ; je 0x4494a8 ; xor eax, eax ; ret
0x000000000044ccda : cmp eax, 4 ; je 0x44cce0 ; ret
0x00000000004a9857 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000410933 : cmp eax, ecx ; jbe 0x4109a8 ; mov rdi, rbx ; call qword ptr [rbp + 0x60]
0x0000000000416268 : cmp eax, ecx ; jbe 0x4162a0 ; mov rdi, rbx ; call qword ptr [rbp + 0x88]
0x00000000004178ff : cmp eax, ecx ; jbe 0x417938 ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x0000000000417978 : cmp eax, ecx ; jbe 0x4179a0 ; mov rdi, rbx ; call qword ptr [rbp + 0x20]
0x0000000000418708 : cmp eax, ecx ; jbe 0x418740 ; mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x00000000004726fd : cmp eax, ecx ; jbe 0x472730 ; mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x000000000044792f : cmp eax, ecx ; jle 0x447968 ; movsxd rax, ecx ; ret
0x0000000000447343 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004114d1 : cmp eax, edi ; jbe 0x41152a ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x0000000000413798 : cmp eax, edi ; jbe 0x4137c0 ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x000000000041959b : cmp eax, edx ; jae 0x4195c0 ; movzx eax, byte ptr [rax] ; ret
0x0000000000471918 : cmp eax, esi ; jbe 0x471950 ; mov rdi, rbx ; call qword ptr [rbp + 0x20]
0x00000000004888a4 : cmp eax, esi ; je 0x4888b0 ; ret
0x000000000044cc76 : cmp ebx, 0xa ; je 0x44cc7c ; ret
0x000000000044e232 : cmp ebx, edi ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000474855 : cmp ecx, 0xc00 ; je 0x474860 ; ret
0x000000000044cea1 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44ce90 ; ret
0x00000000004830c8 : cmp ecx, dword ptr [rax - 0x77] ; retf 0x2fe8
0x000000000044f7a2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000041c660 : cmp ecx, dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000473999 : cmp ecx, dword ptr [rcx + rcx*4 - 0x1e] ; mov rdi, rbx ; call 0x400478
0x00000000004804f8 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x4804a1 ; xor eax, eax ; ret
0x0000000000472a8e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042e5eb : cmp ecx, eax ; jne 0x42e613 ; xor eax, eax ; ret
0x000000000047f288 : cmp ecx, eax ; jne 0x47f22b ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000484e22 : cmp ecx, ecx ; ret
0x00000000004727fa : cmp ecx, esi ; jne 0x4727f0 ; lea eax, [rdx + rdi] ; ret
0x000000000047f276 : cmp ecx, esi ; jne 0x47f250 ; ret
0x0000000000466d30 : cmp edi, eax ; ja 0x466d10 ; mov eax, r9d ; ret
0x00000000004764ee : cmp edi, edx ; ja 0x476518 ; ret
0x0000000000447ce2 : cmp edi, edx ; jb 0x447ce9 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000466d2f : cmp edi, r8d ; ja 0x466d10 ; mov eax, r9d ; ret
0x000000000042044a : cmp edx, eax ; jne 0x420410 ; ret
0x0000000000448acb : cmp edx, ecx ; jne 0x448ab3 ; ret
0x0000000000448c32 : cmp edx, ecx ; jne 0x448c17 ; vzeroupper ; ret
0x0000000000448df5 : cmp edx, ecx ; jne 0x448dd2 ; vzeroupper ; ret
0x000000000049572d : cmp edx, edi ; call qword ptr [rax + 0x39]
0x0000000000495771 : cmp edx, edi ; inc esi ; cmp dl, bh ; call qword ptr [rsi + 0x38]
0x000000000044cbfa : cmp edx, edi ; setae al ; ret
0x0000000000474f66 : cmp edx, esi ; je 0x474f6e ; test edx, edx ; jne 0x474f60 ; ret
0x00000000004195d9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000459604 : cmp esi, 3 ; je 0x459610 ; ret
0x00000000004480c5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a9a24 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00000000004187fa : cmp esi, ecx ; jne 0x4187f0 ; lea eax, [rdx + rdi] ; ret
0x00000000004ad335 : cmp esi, esi ; call qword ptr [rdi]
0x0000000000460f2b : cmp esp, -1 ; call qword ptr [rax + 0x458b41]
0x00000000004724c7 : cmp qword ptr [rax + 0x30], 0 ; je 0x4724d0 ; ret
0x0000000000417890 : cmp qword ptr [rdi + 0x38], 0 ; je 0x4178a0 ; ret
0x000000000044cc75 : cmp r11d, 0xa ; je 0x44cc7c ; ret
0x000000000044a455 : cmp rax, -0x1000 ; ja 0x44a460 ; ret
0x000000000044a4a3 : cmp rax, -0x1000 ; ja 0x44a4b0 ; ret
0x000000000044a6ae : cmp rax, -0x1000 ; ja 0x44a710 ; ret
0x000000000044a744 : cmp rax, -0x1000 ; ja 0x44a750 ; ret
0x000000000044a781 : cmp rax, -0x1000 ; ja 0x44a7e0 ; ret
0x000000000044a817 : cmp rax, -0x1000 ; ja 0x44a828 ; ret
0x000000000044a847 : cmp rax, -0x1000 ; ja 0x44a858 ; ret
0x000000000044aa51 : cmp rax, -0x1000 ; ja 0x44aa98 ; ret
0x000000000044aac7 : cmp rax, -0x1000 ; ja 0x44aad8 ; ret
0x000000000044b220 : cmp rax, -0x1000 ; ja 0x44b230 ; ret
0x000000000045be3d : cmp rax, -0x1000 ; ja 0x45be50 ; ret
0x0000000000476175 : cmp rax, -0x1000 ; ja 0x476180 ; ret
0x00000000004761c9 : cmp rax, -0x1000 ; ja 0x4761d8 ; ret
0x000000000044a3c7 : cmp rax, -0xfff ; jae 0x44a3d0 ; ret
0x000000000044b457 : cmp rax, -0xfff ; jae 0x44b460 ; ret
0x000000000044b487 : cmp rax, -0xfff ; jae 0x44b490 ; ret
0x000000000044b4b7 : cmp rax, -0xfff ; jae 0x44b4c0 ; ret
0x000000000044cb6a : cmp rax, -0xfff ; jae 0x44cb73 ; ret
0x000000000044cb97 : cmp rax, -0xfff ; jae 0x44cba0 ; ret
0x0000000000476107 : cmp rax, -0xfff ; jae 0x476110 ; ret
0x0000000000489127 : cmp rax, -0xfff ; jae 0x489130 ; ret
0x00000000004804ae : cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004825fb : cmp rax, -3 ; jbe 0x482608 ; ret
0x0000000000410932 : cmp rax, rcx ; jbe 0x4109a8 ; mov rdi, rbx ; call qword ptr [rbp + 0x60]
0x0000000000416267 : cmp rax, rcx ; jbe 0x4162a0 ; mov rdi, rbx ; call qword ptr [rbp + 0x88]
0x00000000004178fe : cmp rax, rcx ; jbe 0x417938 ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x0000000000417977 : cmp rax, rcx ; jbe 0x4179a0 ; mov rdi, rbx ; call qword ptr [rbp + 0x20]
0x0000000000418707 : cmp rax, rcx ; jbe 0x418740 ; mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x00000000004726fc : cmp rax, rcx ; jbe 0x472730 ; mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x00000000004114d0 : cmp rax, rdi ; jbe 0x41152a ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x0000000000413797 : cmp rax, rdi ; jbe 0x4137c0 ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x000000000041959a : cmp rax, rdx ; jae 0x4195c0 ; movzx eax, byte ptr [rax] ; ret
0x0000000000471917 : cmp rax, rsi ; jbe 0x471950 ; mov rdi, rbx ; call qword ptr [rbp + 0x20]
0x00000000004888a3 : cmp rax, rsi ; je 0x4888b0 ; ret
0x000000000044cea0 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44ce90 ; ret
0x00000000004804f7 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x4804a1 ; xor eax, eax ; ret
0x0000000000472a8d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047f287 : cmp rcx, r8 ; jne 0x47f22b ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042e5ea : cmp rcx, rax ; jne 0x42e613 ; xor eax, eax ; ret
0x00000000004727f9 : cmp rcx, rsi ; jne 0x4727f0 ; lea eax, [rdx + rdi] ; ret
0x000000000047f275 : cmp rcx, rsi ; jne 0x47f250 ; ret
0x00000000004764ed : cmp rdi, rdx ; ja 0x476518 ; ret
0x0000000000447ce1 : cmp rdi, rdx ; jb 0x447ce9 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420449 : cmp rdx, r8 ; jne 0x420410 ; ret
0x0000000000448aca : cmp rdx, rcx ; jne 0x448ab3 ; ret
0x0000000000448c31 : cmp rdx, rcx ; jne 0x448c17 ; vzeroupper ; ret
0x0000000000448df4 : cmp rdx, rcx ; jne 0x448dd2 ; vzeroupper ; ret
0x000000000044cbf9 : cmp rdx, rdi ; setae al ; ret
0x00000000004187f9 : cmp rsi, rcx ; jne 0x4187f0 ; lea eax, [rdx + rdi] ; ret
0x000000000042e069 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004a7a56 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a7a1a ; mov ecx, 0x5b92ac50 ; retf
0x000000000043ed56 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9b71 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000495045 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x00000000004b0ffd : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x000000000041dbed : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x0000000000495d41 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; inc dword ptr [rax - 0x57] ; cli ; call qword ptr [rax - 0x1f000556]
0x00000000004116c9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004a753f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x0000000000419e85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rdx], ebp ; add bl, dh ; ret
0x0000000000403455 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000048bb60 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041ae8c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048bbf5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004116ca : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000045258f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000411ebb : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbp + 0x20]
0x0000000000412108 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [r13 + 0x20]
0x0000000000492bfc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049235c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b5c55 : cwde ; add byte ptr [rax], al ; fsubr dword ptr [rdi] ; std ; call qword ptr [rbx]
0x00000000004b5c54 : cwde ; cwde ; add byte ptr [rax], al ; fsubr dword ptr [rdi] ; std ; call qword ptr [rbx]
0x0000000000400b97 : cwde ; pop rbp ; ret
0x0000000000443041 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000443042 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044860d : dec byte ptr [rax + 0x7f] ; jl 0x448629 ; cld ; vzeroupper ; ret
0x000000000045eb69 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x00000000004818ff : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x9de8
0x00000000004732e0 : dec byte ptr [rax - 0x77] ; ret
0x000000000048189d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044b702 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e546 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044bd93 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000471fca : dec byte ptr [rcx + rcx*4 - 0x11] ; call qword ptr [r14 + 0x18]
0x000000000040e0f7 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000495220 : dec byte ptr [rip + 0x1480fffa] ; cli ; call qword ptr [rax]
0x00000000004825f9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x482608 ; ret
0x0000000000457783 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000041527e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000041205d : dec dword ptr [rax + 0x29] ; ret
0x0000000000443182 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004835c1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000483701 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041f4d5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000046a120 : dec dword ptr [rax + 0x29] ; sar rdx, 2 ; call qword ptr [rbx + 0x38]
0x0000000000476f0b : dec dword ptr [rax + 0x39] ; ret
0x0000000000413e8d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000489dc9 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041e875 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041e847 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x00000000004852be : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000045fc9c : dec dword ptr [rax + 0x63] ; retf
0x000000000046fc92 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000004740c9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000004804b1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424561 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000474879 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045bebb : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000473431 : dec dword ptr [rax + 1] ; ret
0x0000000000403153 : dec dword ptr [rax - 0x39] ; ret
0x000000000044a34f : dec dword ptr [rax - 0x39] ; ret 0
0x000000000044a2f4 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045ebd0 : dec dword ptr [rax - 0x39] ; ret 0xbce0
0x000000000044a267 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000469866 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000044a5e5 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000044a1bc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004866f1 : dec dword ptr [rax - 0x39] ; sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000048c90f : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000457694 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x00000000004806d5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041f928 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048ce02 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044ff3c : dec dword ptr [rax - 0x75] ; jne 0x44fed1 ; call rsi
0x000000000046a07b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000045f35c : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call qword ptr [rcx + 0x38]
0x000000000048d62f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044b995 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000048283c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004205d4 : dec dword ptr [rax - 0x77] ; add eax, 0x29a284 ; ret
0x000000000048afb7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000480051 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000464140 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; out dx, eax ; ret 0xfff9
0x0000000000401bbd : dec dword ptr [rax - 0x77] ; ret
0x00000000004764de : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041fdcf : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000046ebe6 : dec dword ptr [rax - 0x77] ; ret 0x39e8
0x000000000042517b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047643d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041fb4c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004244d7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045bce2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046e878 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x000000000044a0a3 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047926c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000424bf6 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044b415 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x000000000044a241 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000047d887 : dec dword ptr [rax - 0x77] ; ret 0xa8e8
0x00000000004576ad : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044a22d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000425008 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046c989 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000476a1c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x0000000000470c2a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040596f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000041204e : dec dword ptr [rax - 0x77] ; retf
0x0000000000478a0c : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000462e6c : dec dword ptr [rax - 0x77] ; retf 0x8948
0x00000000004119c9 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000047896d : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046ddcf : dec dword ptr [rax - 0x77] ; retf 0xc148
0x00000000004035bc : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000046a873 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004825fa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x482608 ; ret
0x00000000004048bf : dec dword ptr [rax - 0x7d] ; ret
0x00000000004554b1 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000453b9b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405ebb : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000457784 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048ebf7 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040daec : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x000000000045a288 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044c4a0 : dec dword ptr [rax - 0x7f] ; ret
0x00000000004355fc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000477c37 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x000000000048f5f4 : dec dword ptr [rax - 9] ; ret
0x0000000000459405 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000462ad4 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000468cfd : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000045230d : dec dword ptr [rbp - 0x77] ; retf
0x000000000045d326 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424e33 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400f34 : dec dword ptr [rbx + 0x2bbf8115] ; add bh, dh ; ret 0
0x0000000000423b4d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000403526 : dec dword ptr [rbx + rcx*4 + 0x2d] ; retf 0x2b6b
0x0000000000472738 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000471ccb : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d228 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048d246 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048d2a7 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000461313 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000462a2f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047cf29 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048b89a : dec dword ptr [rcx + 0x39] ; retf
0x000000000048d2b2 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046c195 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046bd17 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046e4be : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x000000000048d27b : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048d270 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047d1a5 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x000000000045908a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000046ad77 : dec dword ptr [rcx + rcx*4 - 0x16] ; call qword ptr [rbx + 0x38]
0x0000000000419675 : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [rbx + 0xe8]
0x000000000046263d : dec dword ptr [rcx + rcx*4 - 0x3a] ; mov rdi, r14 ; call qword ptr [r15 + 0x38]
0x000000000046daa2 : dec dword ptr [rcx + rcx*4 - 1] ; call qword ptr [rax + 0x38]
0x000000000046cad7 : dec dword ptr [rcx + rcx*4 - 1] ; call qword ptr [rcx + 0x38]
0x000000000044ff39 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004197ea : dec dword ptr [rcx + rcx*4 - 9] ; call qword ptr [r13 + 0xe8]
0x0000000000461305 : dec dword ptr [rcx + rcx*4 - 9] ; call qword ptr [r15 + 0x38]
0x0000000000461005 : dec dword ptr [rcx + rcx*4 - 9] ; call qword ptr [rax + 0x38]
0x000000000044ffe2 : dec dword ptr [rcx + rcx*4 - 9] ; call r13
0x00000000004591e1 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x00000000004594bf : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045e9c6 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046c40f : dec dword ptr [rcx - 0x3f] ; inc byte ptr [rdx] ; mov rdx, r14 ; call qword ptr [rax + 0x38]
0x000000000046dcf3 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041cc6c : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000492cf6 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x000000000048a027 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e3bf : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000490d0e : dec dword ptr [rcx - 0x75] ; jge 0x490d23 ; add rdi, rbx ; call rbp
0x0000000000461277 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047d270 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x0000000000404901 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047dc10 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046bce4 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041d006 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000046107f : dec dword ptr [rcx - 0x7d] ; ret
0x000000000049726f : dec dword ptr [rcx] ; jb 0x49726e ; call qword ptr [rbp + 0x73]
0x000000000046157b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x000000000045a402 : dec dword ptr [rdi] ; mov bh, 0x15 ; retf 0x3db
0x0000000000474905 : dec dword ptr [rdi] ; mov dh, 0xf3 ; mov rdi, qword ptr [r12] ; call rbp
0x0000000000451a3b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000045409f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004471d0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046085f : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047e36a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000460fe7 : dec dword ptr [rdi] ; xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004220dc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004195db : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000495f1b : dec ecx ; xor bl, bh ; call qword ptr [rsi]
0x000000000045c3d8 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000443181 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004742b2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047f2d5 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000459601 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x459610 ; ret
0x00000000004520d2 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000466d46 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000449008 : div ecx ; mov eax, eax ; ret
0x0000000000448fef : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000466d45 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042c6c7 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000004b6028 : enter -0x2ac, -1 ; ret
0x000000000047f230 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000447344 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000400b95 : enter -0x67b8, 0x5d ; ret
0x000000000048434b : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000044303e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044317e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000476ca0 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042c4a7 : enter -0x73b, 0x77 ; ret
0x000000000047f33a : enter -0x76b8, -0x38 ; ret
0x000000000046558f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000041c076 : enter -0x7cb8, -0x14 ; or byte ptr [rcx], dh ; call qword ptr [rbx + 0x50]
0x000000000041b7b7 : enter -0x7cb8, -0x14 ; or byte ptr [rcx], dh ; call qword ptr [rsi + 0x50]
0x000000000042ce74 : enter -2, -1 ; ret
0x000000000049ee3c : enter 0, 0 ; retf
0x00000000004a2e90 : enter 0, 0 ; retf 0
0x000000000049ffe8 : enter 0x10, 0 ; retf
0x00000000004415c9 : enter 0x148, -8 ; vzeroupper ; ret
0x0000000000417979 : enter 0x2476, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x20]
0x0000000000485111 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000420579 : enter 0x29, 0 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044192e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x00000000004726fe : enter 0x2f76, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x30]
0x0000000000426a2d : enter 0x31c3, -0x40 ; ret
0x0000000000418709 : enter 0x3476, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x30]
0x0000000000416269 : enter 0x3476, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x88]
0x0000000000417900 : enter 0x3576, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x68]
0x0000000000447930 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x000000000045e4e9 : enter 0x5c76, 0x48 ; movsxd rbp, ebp ; mov rdx, rbp ; call qword ptr [r13 + 0x38]
0x0000000000471fc5 : enter 0x6076, 0x44 ; mov esi, edi ; mov rdi, r13 ; call qword ptr [r14 + 0x18]
0x0000000000410934 : enter 0x7176, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x60]
0x00000000004699a7 : enter 0x7676, 0x48 ; movsxd rbx, ebx ; mov rdx, rbx ; call qword ptr [r13 + 0x38]
0x000000000049f7e8 : enter 0xa, 0 ; retf
0x000000000049fbe8 : enter 0xd, 0 ; retf
0x000000000042e116 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440f91 : enter 0xf66, -0x15 ; ret
0x00000000004a3090 : enter 1, 0 ; retf 1
0x00000000004a03a0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a3290 : enter 2, 0 ; retf 2
0x00000000004a3490 : enter 3, 0 ; retf 3
0x00000000004a3690 : enter 4, 0 ; retf 4
0x00000000004a3890 : enter 5, 0 ; retf 5
0x00000000004a3a90 : enter 6, 0 ; retf 6
0x00000000004a3c90 : enter 7, 0 ; retf 7
0x00000000004a3e90 : enter 8, 0 ; retf 8
0x00000000004a4090 : enter 9, 0 ; retf 9
0x000000000048dd13 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004105f8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004100c6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004b58c8 : fadd dword ptr [rdi] ; std ; call qword ptr [rbx + 1]
0x00000000004225a4 : fadd dword ptr [rdx - 0x7cb7ffd7] ; retf 0x4901
0x0000000000458fb5 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000466d33 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x00000000004140b0 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; xor edx, edx ; mov rdi, rbx ; call qword ptr [rax + 0x80]
0x000000000042dc61 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000490b24 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a9818 : fcmovb st(0), st(3) ; ret
0x0000000000441a4b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000048dd19 : fcomi st(3) ; ret
0x0000000000411279 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004154b6 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044b2b1 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004aa599 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a8800 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000490162 : fcomp st(0), st(2) ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000495ed8 : fdiv dword ptr [rax] ; sti ; call qword ptr [rax]
0x0000000000489018 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004890ff : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000495085 : fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000495149 : fdiv st(1), st(0) ; call rax
0x000000000048b969 : fdiv st(3) ; ret
0x00000000004b51b5 : fdiv st(4), st(0) ; call qword ptr [rdi + 1]
0x00000000004b0409 : fdivr st(0) ; call qword ptr [rax]
0x00000000004b041d : fdivr st(0) ; call qword ptr [rsi + 0x1b]
0x00000000004a7b55 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000447348 : fdivr st(7) ; ret
0x0000000000400591 : fiadd dword ptr [rax] ; test dl, dl ; jne 0x400599 ; ret
0x000000000040f958 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000471e73 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x00000000004132da : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000004aa3e6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000488c75 : fidivr dword ptr [rax + 1] ; ret
0x0000000000425491 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000465b22 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x000000000044b507 : fild word ptr [rcx + rcx*4 - 0x1e] ; mov esi, 1 ; call rbp
0x0000000000425492 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041aa7c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000456249 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004818f7 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x00000000004666bd : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000487364 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000466682 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042b1f6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046d03d : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000404ae4 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x00000000004111e7 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; call qword ptr [r13 + 0x38]
0x0000000000451bdf : fimul word ptr [rax + 1] ; ret
0x0000000000484f9c : fimul word ptr [rbp + 0x11] ; retf
0x0000000000422831 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41ea70
0x0000000000411e03 : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [r14 + 0x80]
0x000000000045bfb0 : fimul word ptr [rcx + rcx*4 - 9] ; call rbp
0x00000000004610e1 : fimul word ptr [rcx + rcx*4 - 9] ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000420aa1 : fistp dword ptr [rbp - 0x7cb7ffd7] ; retf 0x4901
0x000000000044a7af : fistp qword ptr [rax + 1] ; syscall
0x000000000041562c : fistp qword ptr [rdx + 1] ; call qword ptr [r15 + 0x80]
0x000000000044c054 : fistp qword ptr [rsi + 1] ; call rbp
0x0000000000459817 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000483f51 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046750c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004800c6 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000478b3e : fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000483f6b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000455f27 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047e1e4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000421ccb : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405ede : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000458b7a : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000481902 : fisttp word ptr [rax - 0x77] ; ret 0x9de8
0x0000000000478df3 : fisttp word ptr [rax - 0x7d] ; in al, dx ; or al, ch ; retf
0x0000000000401a23 : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000483fef : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044aa6d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000044008d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042e031 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dd31 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045a5a5 : fld dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000484264 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a8841 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000474102 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x0000000000474162 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042c0d9 : fldenv [rsi + 0xf] ; je 0x42c12d ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c3b7 : fldenv [rsi + 0xf] ; je 0x42c40b ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042e0b1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042bfd1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000455c33 : fldl2t ; retf 0xfffd
0x000000000046952c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000485004 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041bb7f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000447617 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000412f58 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e1d1 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000048a574 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044d36c : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000477c3a : fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x0000000000469f10 : fmul dword ptr [rdi] ; ret
0x0000000000487802 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048fbae : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004257e9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000439d0f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000046063f : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000458d78 : fmul qword ptr [rdi] ; ret 0xc389
0x0000000000474100 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042534f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047c7ab : fnstcw word ptr [rax + rdi*8] ; call qword ptr [rax + 0x58878b48]
0x00000000004aa08a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dc39 : fpatan ; ret
0x000000000042de31 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004aecf4 : fst qword ptr [rdi] ; cmc ; call qword ptr [rsi]
0x00000000004a8527 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a88a0 : fstp st(0) ; ret 0xde5d
0x00000000004a7a6b : fstp st(3), st(0) ; retf 0xeb83
0x00000000004b2794 : fsub dword ptr [rbx] ; add byte ptr [rax], bl ; std ; call rdx
0x000000000044a3d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000044a468 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042e131 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000441eb4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a9e58 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000042df31 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004410ac : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000042582f : fsub st(1), st(0) ; imul edi, edi, -1 ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004b5c58 : fsubr dword ptr [rdi] ; std ; call qword ptr [rbx]
0x0000000000495ef8 : fsubr qword ptr [rdi] ; sti ; call rax
0x0000000000495f00 : fsubr qword ptr [rdi] ; sti ; call rdi
0x000000000044aa14 : fsubr st(3) ; ret 0xf66
0x00000000004aa578 : fucom st(5) ; loop 0x4aa5c8 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047ad71 : fucomi st(3) ; ret 0x1f0f
0x0000000000464143 : fucomip st(0) ; out dx, eax ; ret 0xfff9
0x000000000048c011 : fucomip st(1) ; ret
0x00000000004a9bbe : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000495101 : fyl2xp1 ; call qword ptr [rax + 0x70fff9db]
0x0000000000495121 : fyl2xp1 ; call qword ptr [rax - 0x25]
0x0000000000495141 : fyl2xp1 ; call qword ptr [rax]
0x0000000000495161 : fyl2xp1 ; call rax
0x000000000044bad1 : hlt ; call r15
0x0000000000494b65 : hlt ; clc ; call qword ptr [rax]
0x00000000004b0445 : hlt ; clc ; call qword ptr [rsi + 0x16]
0x0000000000494b7d : hlt ; clc ; call rax
0x00000000004b51b0 : hlt ; lea eax, [rax] ; add byte ptr [rsp + rbx*8 - 4], ch ; call qword ptr [rdi + 1]
0x0000000000435a3a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004306ee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000449dfe : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000446e53 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a6a : hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004a8a63 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000446e57 : hlt ; sub eax, edx ; ret
0x0000000000468b7c : idiv bh ; call qword ptr [rax + 0x2dbe]
0x000000000041e2fc : idiv bh ; call qword ptr [rax - 0x402e76b8]
0x0000000000419c0c : idiv bh ; call qword ptr [rax - 0x48]
0x000000000045e9cc : idiv bh ; call rax
0x000000000045fc14 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004ae05e : idiv bh ; retf
0x0000000000412330 : idiv byte ptr [rdx + 1] ; mov rdi, r15 ; call qword ptr [rbp + 0x80]
0x00000000004120c2 : idiv byte ptr [rdx + 2] ; mov rdi, r15 ; call qword ptr [rbx + 0x80]
0x000000000041418f : idiv byte ptr [rdx + 2] ; mov rdi, rbx ; call qword ptr [r14 + 0x80]
0x0000000000415497 : idiv byte ptr [rdx + 2] ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x0000000000451a36 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000045f3ec : idiv edi ; call qword ptr [rax + 0xfdb8548]
0x000000000045ece6 : idiv edi ; call qword ptr [rax]
0x000000000046a7b7 : idiv edi ; call qword ptr [rbx + 0xf]
0x000000000045fc9a : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045ebce : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbce0
0x000000000046b6b1 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000046ad75 : idiv edi ; dec dword ptr [rcx + rcx*4 - 0x16] ; call qword ptr [rbx + 0x38]
0x000000000046a90d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000495ded : idiv edx ; call rax
0x0000000000495df5 : idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495de9 : idiv edx ; inc eax ; idiv edx ; call rax
0x0000000000479607 : imul al ; jnp 0x479679 ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004459b1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000429627 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000468ff2 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000429027 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000410dcd : imul ebp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004136a4 : imul ebp, dword ptr [rdx], 0x2740000 ; ret
0x000000000042a387 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042b567 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000428d27 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ae1b7 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000496360 : imul edi, dword ptr [rdi], -5 ; lcall [rsi + 0x3f] ; sti ; call qword ptr [rsi + 0x40]
0x0000000000494d3d : imul edi, ecx, 0xf96ae0ff ; call rax
0x000000000040733b : imul edi, edi, -1 ; call qword ptr [rax + 0x18478b49]
0x0000000000425831 : imul edi, edi, -1 ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000404a94 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000495ca1 : imul edi, edx, 0xfa6b90ff ; call qword ptr [rax - 0x6f000593]
0x0000000000428727 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000428427 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000428127 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x000000000041904e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000444e2c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004a9ea1 : in al, 0x4c ; pop rax ; retf
0x0000000000487be8 : in al, 0x51 ; cld ; call qword ptr [rax - 0x7a53b275]
0x0000000000441b3c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044d143 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x00000000004b094c : in al, 0x89 ; stc ; call qword ptr [rbp + 1]
0x00000000004a6e44 : in al, 0xe5 ; out 0xe7, al ; call 0xffffffffed365936
0x000000000045f2c0 : in al, 0xf ; lahf ; ret
0x0000000000435a1a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000448ace : in al, 0xf3 ; ret
0x0000000000495179 : in al, 0xf9 ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x0000000000495139 : in al, 0xf9 ; inc eax ; out 0xf9, al ; call qword ptr [rax - 0x27]
0x0000000000470997 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rdi ; ret 0xfffd
0x0000000000411263 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000422864 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2a3
0x00000000004109e8 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 3
0x0000000000416a2b : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000041097c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; stosb byte ptr [rdi], al ; ret 3
0x000000000045f5a1 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000047c7ed : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000452fd2 : in al, dx ; cli ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004ad334 : in al, dx ; cmp esi, esi ; call qword ptr [rdi]
0x0000000000433c60 : in al, dx ; je 0x433c8b ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000415871 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004306ea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435e1a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000048dd1e : in al, dx ; or al, ch ; add r8b, dil ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000478df6 : in al, dx ; or al, ch ; retf
0x000000000041fb6f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042b5e4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041c079 : in al, dx ; or byte ptr [rcx], dh ; call qword ptr [rbx + 0x50]
0x000000000041b7ba : in al, dx ; or byte ptr [rcx], dh ; call qword ptr [rsi + 0x50]
0x00000000004aa08d : in al, dx ; retf 0xae32
0x000000000048e8f9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048b374 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046a871 : in al, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a9fbe : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9f49 ; ret 0x48f
0x0000000000495f18 : in al, dx ; xor bl, bh ; dec ecx ; xor bl, bh ; call qword ptr [rsi]
0x000000000044a136 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004a86c3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004852c2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a7959 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048ce3a : in eax, 0x83 ; call qword ptr [rcx]
0x000000000046450d : in eax, 0xdf ; loopne 0x46449a ; ret
0x00000000004aa579 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a871a : in eax, 0xe5 ; retf 0x2a91
0x0000000000475423 : in eax, 0xf ; je 0x475440 ; add rax, 2 ; ret
0x0000000000448f89 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000435a9a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004950f9 : in eax, 0xf9 ; inc dword ptr [rax - 0x19] ; stc ; call rax
0x0000000000495119 : in eax, 0xf9 ; inc dword ptr [rax] ; out 0xf9, eax ; call qword ptr [rax + 0x50fff9d9]
0x0000000000495099 : in eax, 0xf9 ; inc eax ; out 0xf9, eax ; call qword ptr [rax - 0x26]
0x000000000046082c : in eax, 0xff ; call qword ptr [rax + 0x27be]
0x00000000004a9a41 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004254db : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000400c37 : in eax, 4 ; add dword ptr [rax], eax ; mov eax, dword ptr [rbp - 4] ; leave ; ret
0x0000000000467ab8 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x000000000044b58a : in eax, dx ; jne 0x44b5a0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c0f5 : in eax, dx ; jne 0x44c118 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c128 : in eax, dx ; jne 0x44c170 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c154 : in eax, dx ; jne 0x44c1d0 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490b6f : in eax, dx ; jne 0x490b48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490dc2 : in eax, dx ; jne 0x490da8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049197c : in eax, dx ; jne 0x491960 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447672 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000004304fa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000045e4ee : in eax, dx ; mov rdx, rbp ; call qword ptr [r13 + 0x38]
0x0000000000435e9a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000483737 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000417262 : in eax, dx ; ret
0x00000000004a8498 : in eax, dx ; retf
0x00000000004477c2 : in eax, dx ; sub rax, 1 ; ret
0x0000000000447ad8 : inc bl ; cmp dl, 1 ; jb 0x447ae1 ; mov byte ptr [rdi], cl ; ret
0x0000000000417852 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044b71c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000459605 : inc byte ptr [rbx] ; je 0x459610 ; ret
0x000000000046c412 : inc byte ptr [rdx] ; mov rdx, r14 ; call qword ptr [rax + 0x38]
0x000000000047fd78 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049515b : inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x000000000049542b : inc dword ptr [rax + 0x13] ; cli ; call rax
0x000000000049574b : inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000495923 : inc dword ptr [rax + 0x3a] ; cli ; call rax
0x0000000000494cd7 : inc dword ptr [rax + 0x49] ; stc ; push qword ptr [rax + 0x33] ; stc ; call qword ptr [rax + 0x4c]
0x0000000000495c7b : inc dword ptr [rax + 0x56] ; cli ; call qword ptr [rax + 0x58]
0x0000000000494d1b : inc dword ptr [rax + 0x60fff94b] ; movsxd rdi, ecx ; call qword ptr [rax + 0x64]
0x000000000048bac3 : inc dword ptr [rax + 0x74] ; sub dword ptr [rax - 0x80], eax ; call qword ptr [rax + 0x74]
0x0000000000495253 : inc dword ptr [rax + 0xf] ; cli ; call rax
0x00000000004953c7 : inc dword ptr [rax + rdx - 6] ; call rsp
0x00000000004950fb : inc dword ptr [rax - 0x19] ; stc ; call rax
0x000000000049517b : inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004950f7 : inc dword ptr [rax - 0x1b] ; stc ; inc dword ptr [rax - 0x19] ; stc ; call rax
0x0000000000495177 : inc dword ptr [rax - 0x1c] ; stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004a4693 : inc dword ptr [rax - 0x2f00034e] ; mov cl, 0xfc ; call rax
0x00000000004951ef : inc dword ptr [rax - 0x38] ; stc ; call qword ptr [rax - 0x1f000637]
0x000000000049500f : inc dword ptr [rax - 0x56] ; stc ; call qword ptr [rax - 0x1f000655]
0x0000000000495d43 : inc dword ptr [rax - 0x57] ; cli ; call qword ptr [rax - 0x1f000556]
0x0000000000495023 : inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x0000000000495157 : inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x0000000000495d73 : inc dword ptr [rax - 0xe] ; cli ; call qword ptr [rax - 0xe]
0x0000000000495243 : inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000461289 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000045fc16 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000448f2f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042e647 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000495df7 : inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495c6b : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x000000000049573b : inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000495117 : inc dword ptr [rax] ; in eax, 0xf9 ; inc dword ptr [rax] ; out 0xf9, eax ; call qword ptr [rax + 0x50fff9d9]
0x0000000000495053 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax - 0x53]
0x0000000000494f9f : inc dword ptr [rax] ; mov cl, 0xf9 ; inc eax ; mov dl, 0xf9 ; call qword ptr [rax + 0x70fff9b4]
0x0000000000495d33 : inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax - 0x5b]
0x0000000000494fff : inc dword ptr [rax] ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rax - 0x5a]
0x000000000049511b : inc dword ptr [rax] ; out 0xf9, eax ; call qword ptr [rax + 0x50fff9d9]
0x00000000004951cb : inc dword ptr [rax] ; sar ecx, 1 ; call qword ptr [rax - 0x2e]
0x0000000000495e1f : inc dword ptr [rax] ; stc ; cli ; call qword ptr [rax]
0x0000000000455f24 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047c7ef : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000048314c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402880 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400937 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040d60b : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048ee69 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000045a680 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004a59af : inc dword ptr [rbx - 0x7a] ; std ; call rax
0x00000000004a59ab : inc dword ptr [rbx - 0x7a] ; std ; inc dword ptr [rbx - 0x7a] ; std ; call rax
0x000000000048d063 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045fbd4 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x0000000000448fed : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448f5b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047fd79 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460fa2 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046dcf9 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000488ba4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000481ab2 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x000000000041353b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x000000000047202c : inc dword ptr [rcx + rcx*4 - 2] ; mov rdi, r13 ; call qword ptr [r14 + 0x18]
0x00000000004533de : inc dword ptr [rcx - 0x77] ; ret
0x00000000004566c6 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000045a683 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046eae6 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044b407 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000046a90f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000046601f : inc dword ptr [rcx] ; retf
0x00000000004958bf : inc dword ptr [rdi + rsi - 6] ; call rsp
0x00000000004952ff : inc dword ptr [rdx + 0x11] ; cli ; call rdx
0x00000000004957f7 : inc dword ptr [rdx + 0x38] ; cli ; call rdx
0x00000000004952ef : inc dword ptr [rdx] ; adc edi, edx ; call qword ptr [rdx + 0x22fffa12]
0x00000000004957e7 : inc dword ptr [rdx] ; cmp bh, dl ; call qword ptr [rdx + 0x22fffa39]
0x000000000044086d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000495793 : inc dword ptr [rsi + 0x35] ; cli ; call rsi
0x00000000004964e7 : inc dword ptr [rsi + rdi + 0x3e84fffb] ; sti ; call rbx
0x0000000000494e03 : inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x000000000048ec42 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x000000000049528b : inc dword ptr [rsi] ; adc dl, bh ; call qword ptr [rsi + 0x26fffa0f]
0x0000000000495233 : inc eax ; adc bh, dl ; call qword ptr [rax + 0x12]
0x000000000049565b : inc eax ; add edi, edx ; call qword ptr [rax + 3]
0x0000000000495943 : inc eax ; cli ; call qword ptr [rax + 0x36]
0x0000000000495c5b : inc eax ; cli ; call rax
0x000000000049572b : inc eax ; cmp edx, edi ; call qword ptr [rax + 0x39]
0x0000000000495043 : inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000495deb : inc eax ; idiv edx ; call rax
0x0000000000495137 : inc eax ; in al, 0xf9 ; inc eax ; out 0xf9, al ; call qword ptr [rax - 0x27]
0x0000000000495097 : inc eax ; in eax, 0xf9 ; inc eax ; out 0xf9, eax ; call qword ptr [rax - 0x26]
0x0000000000494fef : inc eax ; lahf ; stc ; call qword ptr [rax]
0x0000000000494fa3 : inc eax ; mov dl, 0xf9 ; call qword ptr [rax + 0x70fff9b4]
0x000000000049513b : inc eax ; out 0xf9, al ; call qword ptr [rax - 0x27]
0x000000000049509b : inc eax ; out 0xf9, eax ; call qword ptr [rax - 0x26]
0x00000000004951bb : inc eax ; retf
0x0000000000495d23 : inc eax ; sahf ; cli ; call qword ptr [rax]
0x000000000049520f : inc eax ; sar cl, cl ; call qword ptr [rax]
0x0000000000494e8f : inc eax ; xchg eax, ebp ; stc ; call qword ptr [rax - 0x6a]
0x000000000042cf9c : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000472a9c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000447349 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000495817 : inc edx ; xor al, 0xfa ; call qword ptr [rdx + 0x34]
0x000000000049527b : inc esi ; adc edx, edi ; call qword ptr [rsi + 0x11]
0x0000000000495773 : inc esi ; cmp dl, bh ; call qword ptr [rsi + 0x38]
0x0000000000494dff : inc esi ; xchg eax, ebx ; stc ; inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x00000000004255cb : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042bd64 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004acf14 : insb byte ptr [rdi], dx ; and dh, dh ; call qword ptr [rdx]
0x000000000041e2f6 : insb byte ptr [rdi], dx ; and eax, 0xfbe90100 ; idiv bh ; call qword ptr [rax - 0x402e76b8]
0x00000000004b51b4 : insb byte ptr [rdi], dx ; fdiv st(4), st(0) ; call qword ptr [rdi + 1]
0x00000000004aa57e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000485eb0 : insb byte ptr [rdi], dx ; jae 0x485ed6 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004724db : insb byte ptr [rdi], dx ; mov rax, qword ptr [rax + 0x130] ; call qword ptr [rax + 0x68]
0x000000000045e365 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004a9946 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000469864 : insb byte ptr [rdi], dx ; stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004760fc : insb byte ptr [rdi], dx ; std ; call qword ptr [rax + 0x3fb8]
0x00000000004252e0 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000454096 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000040a01f : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004251db : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004796e0 : insd dword ptr [rdi], dx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ac3f0 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rdx]
0x0000000000490bf2 : insd dword ptr [rdi], dx ; js 0x490c6c ; ret 0x8b48
0x00000000004aa57f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a892d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004b05a9 : insd dword ptr [rdi], dx ; stc ; call qword ptr [rbx + 4]
0x00000000004a983f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000468fea : int 0x80
0x0000000000474e46 : int1 ; call rbx
0x0000000000495d61 : int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000447a5b : int1 ; jl 0x447aa6 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447a7c : int1 ; jl 0x447ac7 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447a8f : int1 ; jl 0x447ada ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447b64 : int1 ; jl 0x447baf ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447bbc : int1 ; jl 0x447c07 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000447c59 : int1 ; jl 0x447ca4 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004727fb : int1 ; jne 0x4727f0 ; lea eax, [rdx + rdi] ; ret
0x000000000047f277 : int1 ; jne 0x47f250 ; ret
0x00000000004a9804 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000449009 : int1 ; mov eax, eax ; ret
0x000000000043588b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430cbf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000446e23 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000448ff0 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000044c43b : int1 ; push rdi ; sti ; call qword ptr [rax + 0x48ff3155]
0x00000000004a9f56 : int1 ; ret 0x5803
0x000000000045713b : int1 ; stosb byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x56415741]
0x0000000000446e27 : int1 ; sub eax, edx ; ret
0x0000000000405eed : ja 0x405ec5 ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004127f3 : ja 0x41284d ; mov rdi, rax ; call qword ptr [rax + 8]
0x0000000000419648 : ja 0x41975a ; mov rdi, r14 ; call qword ptr [rbx + 0xe0]
0x0000000000439793 : ja 0x43978e ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000444f77 : ja 0x444f7b ; ret
0x0000000000444f93 : ja 0x444f99 ; mov dword ptr [rdi], ecx ; ret
0x0000000000444fd4 : ja 0x444fde ; mov qword ptr [rdi], rcx ; ret
0x0000000000445059 : ja 0x44506b ; ret
0x00000000004450af : ja 0x4450c5 ; ret
0x0000000000445131 : ja 0x44514b ; ret
0x0000000000445597 : ja 0x44559b ; lea rax, [rdi + 2] ; ret
0x00000000004455b3 : ja 0x4455b9 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000445604 : ja 0x44560e ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000004456e9 : ja 0x4456fb ; lea rax, [rdi + 0x10] ; ret
0x000000000044575f : ja 0x445775 ; lea rax, [rdi + 0x14] ; ret
0x00000000004457e1 : ja 0x4457fb ; lea rax, [rdi + 0x18] ; ret
0x0000000000447d64 : ja 0x447d8c ; jb 0x447d6d ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004480c4 : ja 0x448101 ; jb 0x4480cd ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448514 : ja 0x448569 ; jb 0x44851d ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448ae3 : ja 0x448afa ; jb 0x448ae9 ; mov byte ptr [rdi], cl ; ret
0x0000000000448c51 : ja 0x448c7f ; jb 0x448c57 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448e19 : ja 0x448e55 ; jb 0x448e1f ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000449dfc : ja 0x449e20 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449e5f : ja 0x449e61 ; add byte ptr [rax], al ; syscall
0x000000000044a45b : ja 0x44a460 ; ret
0x000000000044a4a9 : ja 0x44a4b0 ; ret
0x000000000044a6b4 : ja 0x44a710 ; ret
0x000000000044a74a : ja 0x44a750 ; ret
0x000000000044a787 : ja 0x44a7e0 ; ret
0x000000000044a81d : ja 0x44a828 ; ret
0x000000000044a84d : ja 0x44a858 ; ret
0x000000000044aa57 : ja 0x44aa98 ; ret
0x000000000044aacd : ja 0x44aad8 ; ret
0x000000000044b226 : ja 0x44b230 ; ret
0x000000000045be43 : ja 0x45be50 ; ret
0x0000000000466d32 : ja 0x466d10 ; mov eax, r9d ; ret
0x0000000000475909 : ja 0x4758ce ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047617b : ja 0x476180 ; ret
0x00000000004761cf : ja 0x4761d8 ; ret
0x00000000004764f0 : ja 0x476518 ; ret
0x00000000004839ee : ja 0x483a39 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048e7fd : ja 0x48e801 ; sbb eax, eax ; ret
0x0000000000495cbd : ja 0x495cb9 ; call qword ptr [rax - 0x6f000587]
0x00000000004a9fc4 : ja 0x4a9f49 ; ret 0x48f
0x0000000000414fba : jae 0x415070 ; mov rdi, rbx ; call qword ptr [r13 + 0x20]
0x000000000041959d : jae 0x4195c0 ; movzx eax, byte ptr [rax] ; ret
0x000000000044a3cd : jae 0x44a3d0 ; ret
0x000000000044b45d : jae 0x44b460 ; ret
0x000000000044b48d : jae 0x44b490 ; ret
0x000000000044b4bd : jae 0x44b4c0 ; ret
0x000000000044cb70 : jae 0x44cb73 ; ret
0x000000000044cb9d : jae 0x44cba0 ; ret
0x000000000044cea4 : jae 0x44ce90 ; ret
0x0000000000455d3f : jae 0x455cca ; retf 0xb941
0x000000000045bbee : jae 0x45bc30 ; xor eax, eax ; pop rbx ; ret
0x000000000047610d : jae 0x476110 ; ret
0x00000000004804fb : jae 0x4804a1 ; xor eax, eax ; ret
0x0000000000485eb1 : jae 0x485ed6 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000488c74 : jae 0x488c50 ; mov eax, 1 ; ret
0x000000000048912d : jae 0x489130 ; ret
0x000000000048f786 : jae 0x48f790 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000492cf4 : jae 0x492cee ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000495cb5 : jae 0x495cb1 ; call qword ptr [rax - 0x6f00058b]
0x0000000000497219 : jae 0x497216 ; call qword ptr [rcx]
0x00000000004a8582 : jae 0x4a855b ; jo 0x4a85f7 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a941e : jae 0x4a93f3 ; push rsi ; pop rdx ; je 0x4a93e8 ; ret 0xacfc
0x00000000004adf12 : jae 0x4adf1e ; ret
0x00000000004b225d : jae 0x4b2259 ; call qword ptr [rdx]
0x000000000041955e : jb 0x419598 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041ea27 : jb 0x41ea08 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000043936e : jb 0x439374 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447ac5 : jb 0x447acd ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000447ad0 : jb 0x447ada ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000447add : jb 0x447ae1 ; mov byte ptr [rdi], cl ; ret
0x0000000000447ce4 : jb 0x447ce9 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447d66 : jb 0x447d6d ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004480c6 : jb 0x4480cd ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448516 : jb 0x44851d ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448ae5 : jb 0x448ae9 ; mov byte ptr [rdi], cl ; ret
0x0000000000448c53 : jb 0x448c57 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448e1b : jb 0x448e1f ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004642b7 : jb 0x4642bb ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004952ec : jb 0x495301 ; cli ; inc dword ptr [rdx] ; adc edi, edx ; call qword ptr [rdx + 0x22fffa12]
0x00000000004957e4 : jb 0x495820 ; cli ; inc dword ptr [rdx] ; cmp bh, dl ; call qword ptr [rdx + 0x22fffa39]
0x0000000000497271 : jb 0x49726e ; call qword ptr [rbp + 0x73]
0x00000000004ac779 : jb 0x4ac770 ; call qword ptr [rbp + 2]
0x00000000004b05c1 : jb 0x4b05bc ; call qword ptr [rdi]
0x0000000000401904 : jbe 0x401916 ; syscall
0x0000000000410935 : jbe 0x4109a8 ; mov rdi, rbx ; call qword ptr [rbp + 0x60]
0x00000000004114d3 : jbe 0x41152a ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x00000000004115ff : jbe 0x411649 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041379a : jbe 0x4137c0 ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x0000000000415230 : jbe 0x415390 ; mov rdi, rbx ; call qword ptr [r13 + 0x20]
0x0000000000415799 : jbe 0x4158d0 ; mov rdi, rbx ; call qword ptr [rbp + 0x88]
0x000000000041626a : jbe 0x4162a0 ; mov rdi, rbx ; call qword ptr [rbp + 0x88]
0x0000000000417901 : jbe 0x417938 ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x000000000041797a : jbe 0x4179a0 ; mov rdi, rbx ; call qword ptr [rbp + 0x20]
0x0000000000417c27 : jbe 0x417d88 ; mov rdi, rbx ; call qword ptr [r14 + 0x20]
0x000000000041870a : jbe 0x418740 ; mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x000000000041a4b2 : jbe 0x41a4dd ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042c1d6 : jbe 0x42c210 ; add rax, rdi ; ret
0x000000000042c1e6 : jbe 0x42c210 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c1f6 : jbe 0x42c210 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c206 : jbe 0x42c210 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c617 : jbe 0x42c680 ; add rax, rdi ; vzeroupper ; ret
0x0000000000456e12 : jbe 0x456e0a ; ret
0x000000000045e4ea : jbe 0x45e548 ; movsxd rbp, ebp ; mov rdx, rbp ; call qword ptr [r13 + 0x38]
0x00000000004699a9 : jbe 0x4699f3 ; movsxd rbx, ebx ; mov rdx, rbx ; call qword ptr [r13 + 0x38]
0x00000000004699a8 : jbe 0x469a20 ; movsxd rbx, ebx ; mov rdx, rbx ; call qword ptr [r13 + 0x38]
0x000000000047191a : jbe 0x471950 ; mov rdi, rbx ; call qword ptr [rbp + 0x20]
0x0000000000471fc6 : jbe 0x472028 ; mov esi, r15d ; mov rdi, r13 ; call qword ptr [r14 + 0x18]
0x00000000004726ff : jbe 0x472730 ; mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x00000000004825ff : jbe 0x482608 ; ret
0x0000000000495288 : jbe 0x49529a ; cli ; inc dword ptr [rsi] ; adc dl, bh ; call qword ptr [rsi + 0x26fffa0f]
0x0000000000497235 : jbe 0x497232 ; call qword ptr [rax + 0x76]
0x00000000004a9e5c : jbe 0x4a9e29 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000040040e : je 0x400412 ; call rax
0x0000000000405abe : je 0x405ac6 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000411dc4 : je 0x411dea ; xor byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rdx + 0x90]
0x000000000041314d : je 0x413173 ; cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004136a8 : je 0x4136ac ; ret
0x000000000041527c : je 0x4152ae ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000417411 : je 0x417437 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4136a0
0x0000000000417895 : je 0x4178a0 ; ret
0x0000000000419c2b : je 0x419c38 ; test byte ptr [rbx], 1 ; jne 0x419c38 ; call qword ptr [rbx + 0xe8]
0x0000000000423692 : je 0x4236b8 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000423b83 : je 0x423b90 ; lea rax, [rdx - 0x10] ; ret
0x0000000000423d90 : je 0x423d1b ; retf 0x4c89
0x0000000000425242 : je 0x42520a ; ret
0x000000000042beaa : je 0x42bead ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042c0dc : je 0x42c12d ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c3ba : je 0x42c40b ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cd85 : je 0x42cd90 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042e3a7 : je 0x42e3ab ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433c61 : je 0x433c8b ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000441151 : je 0x441160 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000441774 : je 0x44177a ; bsf eax, edx ; ret
0x000000000044181d : je 0x441830 ; bsf rax, rdx ; ret
0x0000000000447df3 : je 0x447e0c ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044949e : je 0x4494a8 ; xor eax, eax ; ret
0x0000000000449499 : je 0x4494b0 ; cmp eax, 2 ; je 0x4494a8 ; xor eax, eax ; ret
0x00000000004494ed : je 0x4494d0 ; ret
0x000000000044a9c8 : je 0x44a9f0 ; mov eax, 0x48 ; syscall
0x000000000044ad87 : je 0x44adad ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044b2ea : je 0x44b2ee ; ret
0x000000000044c03b : je 0x44c098 ; mov rbx, rdi ; xor edx, edx ; xor esi, esi ; call rbp
0x000000000044cc79 : je 0x44cc7c ; ret
0x000000000044ccdd : je 0x44cce0 ; ret
0x000000000044e258 : je 0x44e260 ; ret
0x000000000044e274 : je 0x44e280 ; mov dword ptr [rip + 0x26b83c], edx ; pop rbx ; ret
0x0000000000452375 : je 0x45239b ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000452b2f : je 0x452b55 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452e1f : je 0x452e45 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453167 : je 0x45318d ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004533a6 : je 0x4533cc ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045360d : je 0x453633 ; mov rdi, qword ptr [rsp + 0x38] ; call r13
0x0000000000453a0e : je 0x453a34 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004545a6 : je 0x4545cc ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455632 : je 0x455658 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045612b : je 0x456151 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004564d3 : je 0x4564f9 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456917 : je 0x45693d ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456d52 : je 0x456d78 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000457314 : je 0x45733a ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000457643 : je 0x457669 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000457b57 : je 0x457b7d ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000457f92 : je 0x457fb8 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000459602 : je 0x459610 ; cmp esi, 3 ; je 0x459610 ; ret
0x0000000000459607 : je 0x459610 ; ret
0x0000000000459f5a : je 0x459f5e ; call rsi
0x000000000045a056 : je 0x45a05a ; call rax
0x000000000045b45b : je 0x45b45f ; call rax
0x000000000045ba1e : je 0x45ba28 ; ret
0x000000000045cb60 : je 0x45cb86 ; adc byte ptr [rcx + rcx*4 - 9], cl ; call rbp
0x0000000000469b7c : je 0x469ba2 ; and byte ptr [rax + 1], cl ; ret
0x0000000000471676 : je 0x4716c0 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004724cc : je 0x4724d0 ; ret
0x00000000004724e9 : je 0x4724f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472523 : je 0x472580 ; pop rbp ; pop r12 ; ret
0x00000000004725af : je 0x47260c ; pop rbp ; pop r12 ; ret
0x000000000047273a : je 0x472760 ; or al, 0xeb ; ret 0x5590
0x00000000004743bc : je 0x4743e0 ; bsf rax, rdx ; ret
0x000000000047485b : je 0x474860 ; ret
0x0000000000474e3e : je 0x474e64 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000474f68 : je 0x474f6e ; test edx, edx ; jne 0x474f60 ; ret
0x0000000000475409 : je 0x475420 ; mov cl, dl ; and cl, 0xf ; je 0x475430 ; ret
0x0000000000475410 : je 0x475430 ; ret
0x0000000000475425 : je 0x475440 ; add rax, 2 ; ret
0x000000000047635d : je 0x476388 ; mov eax, 0x101 ; syscall
0x00000000004768d2 : je 0x4769c8 ; xor eax, eax ; leave ; ret
0x000000000047f2d6 : je 0x47f2db ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000481aad : je 0x4819f6 ; sub eax, r8d ; ret
0x0000000000485be2 : je 0x485bf0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004860e8 : je 0x48610e ; or byte ptr [rax + 1], cl ; ret
0x00000000004888a6 : je 0x4888b0 ; ret
0x000000000048b6ed : je 0x48b713 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048dc88 : je 0x48dc6c ; add rsp, 0x18 ; ret
0x000000000048dc71 : je 0x48dc90 ; add rsp, 0x18 ; ret
0x000000000048dd18 : je 0x48dcf5 ; ret
0x000000000048dd59 : je 0x48dd60 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000049004a : je 0x490050 ; ret
0x0000000000490083 : je 0x49008b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x490090 ; ret
0x000000000049015a : je 0x490160 ; ret
0x00000000004918f3 : je 0x4918fc ; call rax
0x00000000004a798c : je 0x4a79b3 ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a86e8 : je 0x4a86af ; xor al, 0xd8 ; ret
0x00000000004a9422 : je 0x4a93e8 ; ret 0xacfc
0x00000000004ad330 : je 0x4ad341 ; add byte ptr [rax], al ; in al, dx ; cmp esi, esi ; call qword ptr [rdi]
0x00000000004b225c : je 0x4b22d1 ; cli ; call qword ptr [rdx]
0x0000000000417892 : jg 0x4178cc ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004220a2 : jg 0x4220a3 ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004308a9 : jg 0x4308fa ; ret
0x00000000004308f0 : jg 0x430939 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000004308f5 : jg 0x430946 ; retf
0x000000000043092f : jg 0x430978 ; ret
0x000000000043096f : jg 0x4309b8 ; retf
0x0000000000430aa9 : jg 0x430afa ; ret 0x894c
0x0000000000430af0 : jg 0x430b39 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000430af5 : jg 0x430b46 ; retf 0x894c
0x0000000000430b2f : jg 0x430b78 ; ret 0x894c
0x0000000000430b6b : jg 0x430bb4 ; retf 0x894c
0x0000000000433279 : jg 0x4332ca ; ret
0x00000000004332c0 : jg 0x433309 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000004332c5 : jg 0x433316 ; retf
0x00000000004332ff : jg 0x433348 ; ret
0x000000000043333f : jg 0x433388 ; retf
0x0000000000433479 : jg 0x4334ca ; ret 0x894c
0x00000000004334c0 : jg 0x433509 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004334c5 : jg 0x433516 ; retf 0x894c
0x00000000004334ff : jg 0x433548 ; ret 0x894c
0x000000000043353b : jg 0x433584 ; retf 0x894c
0x0000000000435868 : jg 0x4358b1 ; loope 0x43585f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004358df : jg 0x435928 ; ret 0xff2
0x00000000004358f8 : jg 0x435941 ; loop 0x4358ef ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043596f : jg 0x4359b8 ; ret
0x0000000000435988 : jg 0x4359d1 ; jrcxz 0x43597f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435a18 : jg 0x435a61 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435a98 : jg 0x435ae1 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435b18 : jg 0x435b61 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435b98 : jg 0x435be1 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435cf5 : jg 0x435d3e ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000435cff : jg 0x435d48 ; retf 0xff2
0x0000000000435d75 : jg 0x435dbe ; mov ebx, 0x46f00ff2 ; retf
0x0000000000435d7f : jg 0x435dc8 ; retf
0x0000000000435e18 : jg 0x435e61 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435e98 : jg 0x435ee1 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435f28 : jg 0x435f71 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435fa8 : jg 0x435ff1 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043601c : jg 0x436025 ; ret
0x0000000000436076 : jg 0x436087 ; ret
0x0000000000436071 : jg 0x4360ba ; psllq mm1, qword ptr [rdi] ; jg 0x436087 ; ret
0x00000000004360e6 : jg 0x4360f7 ; ret
0x0000000000436156 : jg 0x436167 ; ret
0x0000000000436151 : jg 0x43619a ; or eax, 0xf7f0ff3 ; ret
0x00000000004361c6 : jg 0x4361d7 ; ret
0x00000000004361c1 : jg 0x43620a ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436236 : jg 0x436247 ; ret
0x0000000000436231 : jg 0x43627a ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004362a6 : jg 0x4362b7 ; ret
0x00000000004362a1 : jg 0x4362ea ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436316 : jg 0x436327 ; ret
0x0000000000436311 : jg 0x43635a ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436386 : jg 0x436397 ; ret
0x0000000000436381 : jg 0x4363ca ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004363f6 : jg 0x436407 ; ret
0x0000000000436466 : jg 0x436477 ; ret
0x00000000004364d6 : jg 0x4364e7 ; ret
0x00000000004364d1 : jg 0x43651a ; add eax, 0xf7f0ff3 ; ret
0x0000000000436546 : jg 0x436557 ; ret
0x0000000000436541 : jg 0x43658a ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004365b6 : jg 0x4365c7 ; ret
0x00000000004365b1 : jg 0x4365fa ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436626 : jg 0x436637 ; ret
0x0000000000436621 : jg 0x43666a ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436696 : jg 0x4366a7 ; ret
0x0000000000436691 : jg 0x4366da ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438388 : jg 0x4383d1 ; loope 0x43837f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004383ff : jg 0x438448 ; ret 0xff2
0x0000000000438418 : jg 0x438461 ; loop 0x43840f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043848f : jg 0x4384d8 ; ret
0x00000000004384a8 : jg 0x4384f1 ; jrcxz 0x43849f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438538 : jg 0x438581 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004385b8 : jg 0x438601 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438638 : jg 0x438681 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004386b8 : jg 0x438701 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438815 : jg 0x43885e ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043881f : jg 0x438868 ; retf 0xff2
0x0000000000438895 : jg 0x4388de ; mov ebx, 0x46f00ff2 ; retf
0x000000000043889f : jg 0x4388e8 ; retf
0x0000000000438938 : jg 0x438981 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004389b8 : jg 0x438a01 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438a48 : jg 0x438a91 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438ac8 : jg 0x438b11 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438b3c : jg 0x438b45 ; ret
0x0000000000438b96 : jg 0x438ba7 ; ret
0x0000000000438b91 : jg 0x438bda ; psllq mm1, qword ptr [rdi] ; jg 0x438ba7 ; ret
0x0000000000438c06 : jg 0x438c17 ; ret
0x0000000000438c76 : jg 0x438c87 ; ret
0x0000000000438c71 : jg 0x438cba ; or eax, 0xf7f0ff3 ; ret
0x0000000000438ce6 : jg 0x438cf7 ; ret
0x0000000000438ce1 : jg 0x438d2a ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438d56 : jg 0x438d67 ; ret
0x0000000000438d51 : jg 0x438d9a ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438dc6 : jg 0x438dd7 ; ret
0x0000000000438dc1 : jg 0x438e0a ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438e36 : jg 0x438e47 ; ret
0x0000000000438e31 : jg 0x438e7a ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438ea6 : jg 0x438eb7 ; ret
0x0000000000438ea1 : jg 0x438eea ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438f16 : jg 0x438f27 ; ret
0x0000000000438f86 : jg 0x438f97 ; ret
0x0000000000438ff6 : jg 0x439007 ; ret
0x0000000000438ff1 : jg 0x43903a ; add eax, 0xf7f0ff3 ; ret
0x0000000000439066 : jg 0x439077 ; ret
0x0000000000439061 : jg 0x4390aa ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004390d6 : jg 0x4390e7 ; ret
0x00000000004390d1 : jg 0x43911a ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439146 : jg 0x439157 ; ret
0x0000000000439141 : jg 0x43918a ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004391b6 : jg 0x4391c7 ; ret
0x00000000004391b1 : jg 0x4391fa ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439314 : jg 0x43931d ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000439328 : jg 0x439331 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043979a : jg 0x439794 ; ret
0x0000000000445046 : jg 0x44504f ; ret
0x0000000000445056 : jg 0x44505f ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044506a : jg 0x445073 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445089 : jg 0x445092 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000445099 : jg 0x4450a2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004450a9 : jg 0x4450b2 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004450ca : jg 0x4450d3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004450ea : jg 0x4450f3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044510a : jg 0x445113 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044512a : jg 0x445133 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044516d : jg 0x445176 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044518d : jg 0x445196 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004451ab : jg 0x4451b4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004451cb : jg 0x4451d4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004451eb : jg 0x4451f4 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044520b : jg 0x445214 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004456d6 : jg 0x4456df ; lea rax, [rdi + 0xf] ; ret
0x00000000004456e6 : jg 0x4456ef ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000445719 : jg 0x445722 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000445739 : jg 0x445742 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000044585f : jg 0x4458b8 ; or eax, 0x1c478d48 ; ret
0x0000000000447aa7 : jg 0x447ab0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447a9d : jg 0x447ab6 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447f34 : jg 0x447f66 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000448002 : jg 0x448034 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004480da : jg 0x4480e3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044826b : jg 0x448290 ; vzeroupper ; ret
0x0000000000448312 : jg 0x448317 ; vzeroupper ; ret
0x000000000044839e : jg 0x4483c3 ; vzeroupper ; ret
0x000000000044842e : jg 0x448433 ; vzeroupper ; ret
0x0000000000448542 : jg 0x44854b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448726 : jg 0x44874b ; vzeroupper ; ret
0x00000000004487ec : jg 0x4487f1 ; vzeroupper ; ret
0x00000000004488bf : jg 0x4488e4 ; vzeroupper ; ret
0x0000000000448992 : jg 0x448997 ; vzeroupper ; ret
0x00000000004489fc : jg 0x448a05 ; ret
0x0000000000448a4c : jg 0x448a55 ; ret
0x0000000000448ac3 : jg 0x448b06 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000448b54 : jg 0x448b5d ; vzeroupper ; ret
0x0000000000448ba4 : jg 0x448bad ; vzeroupper ; ret
0x0000000000448c63 : jg 0x448c6c ; vzeroupper ; ret
0x0000000000448ce1 : jg 0x448cea ; vzeroupper ; ret
0x0000000000448d41 : jg 0x448d4a ; vzeroupper ; ret
0x0000000000448e2b : jg 0x448e34 ; vzeroupper ; ret
0x0000000000448e39 : jg 0x448e42 ; vzeroupper ; ret
0x0000000000448e90 : jg 0x448ecb ; ret 0x2b77
0x0000000000448fab : jg 0x448f70 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000449007 : jg 0x449000 ; int1 ; mov eax, eax ; ret
0x000000000044f216 : jg 0x44f19b ; retf
0x0000000000454f28 : jg 0x454eb3 ; ret 0xdb76
0x000000000045e0b2 : jg 0x45e0f5 ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x000000000045ff22 : jg 0x45ff33 ; test byte ptr [rip - 0x7c000011], al ; ret
0x000000000046a4f2 : jg 0x46a503 ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046b96a : jg 0x46b97b ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046ba67 : jg 0x46ba78 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000047ff67 : jg 0x47ff71 ; test rdi, rdi ; jne 0x47ff40 ; ret
0x000000000048b538 : jg 0x48b53a ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000040e06a : jge 0x40e06c ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000422aaa : jge 0x422ad5 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000044b5b5 : jge 0x44b5b7 ; call r12
0x000000000044b5dd : jge 0x44b5df ; call r12
0x000000000044bacd : jge 0x44ba77 ; mov r12d, r14d ; call r15
0x000000000044c12d : jge 0x44c12f ; call r12
0x000000000044c159 : jge 0x44c15b ; call r12
0x000000000044c18d : jge 0x44c18f ; call r12
0x000000000044c1bd : jge 0x44c1bf ; call r12
0x000000000044c1e5 : jge 0x44c1e7 ; call r12
0x000000000044c215 : jge 0x44c217 ; call r12
0x000000000048e0d2 : jge 0x48e0cc ; leave ; ret
0x000000000048e250 : jge 0x48e24a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e39c : jge 0x48e396 ; leave ; ret
0x000000000048e3e8 : jge 0x48e3e2 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e577 : jge 0x48e571 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e6d7 : jge 0x48e6d1 ; leave ; ret
0x000000000048e728 : jge 0x48e722 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000490d11 : jge 0x490d23 ; add rdi, rbx ; call rbp
0x0000000000495cc9 : jge 0x495cc5 ; call qword ptr [rax]
0x00000000004a79ea : jge 0x4a79c5 ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a9334 : jge 0x4a939e ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004b64e1 : jge 0x4b64e0 ; call qword ptr [rdx + 1]
0x000000000040127f : jl 0x4012a5 ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404b96 : jl 0x404bbc ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d588 : jl 0x40d5ae ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000417d62 : jl 0x417d79 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041f7ab : jl 0x41f7a3 ; ret 0x7508
0x0000000000439294 : jl 0x4392de ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004392d0 : jl 0x43931a ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004394ce : jl 0x439518 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000439635 : jl 0x43967f ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000439797 : jl 0x4397e1 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000447a5c : jl 0x447aa6 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447a7d : jl 0x447ac7 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447a90 : jl 0x447ada ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447b65 : jl 0x447baf ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447bbd : jl 0x447c07 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000447c5a : jl 0x447ca4 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000448610 : jl 0x448629 ; cld ; vzeroupper ; ret
0x000000000044b692 : jl 0x44b6b8 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451c61 : jl 0x451c87 ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000452086 : jl 0x4520ac ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000453fc8 : jl 0x453fee ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004545ab : jl 0x4545d1 ; call r15
0x0000000000454ffa : jl 0x455020 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045691c : jl 0x456942 ; call r15
0x0000000000456d57 : jl 0x456d7d ; call rbx
0x0000000000456e0d : jl 0x456e33 ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000045753d : jl 0x457563 ; or al, 0xe9 ; ret
0x0000000000457b5c : jl 0x457b82 ; call r15
0x0000000000457f97 : jl 0x457fbd ; call rbx
0x000000000045804d : jl 0x458073 ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045c037 : jl 0x45c05d ; and byte ptr [rax + 1], cl ; ret
0x000000000045c4ae : jl 0x45c4d4 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045c7f6 : jl 0x45c81c ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004681bb : jl 0x4681e1 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004698a5 : jl 0x4698cb ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004762cf : jl 0x4762f5 ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047c165 : jl 0x47c18b ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000483155 : jl 0x48317b ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004a9532 : jl 0x4a958e ; leave ; retf
0x0000000000417a1a : jle 0x417a1d ; call qword ptr [rbx + 0x18]
0x00000000004417be : jle 0x4417c0 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000447931 : jle 0x447968 ; movsxd rax, ecx ; ret
0x000000000044e26a : jle 0x44e26e ; add byte ptr [rcx], bh ; ret
0x000000000044e289 : jle 0x44e28d ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000459652 : jle 0x45965c ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004a79e2 : jle 0x4a7978 ; xlatb ; retf 0xa1eb
0x00000000004a95a5 : jle 0x4a95db ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004b424d : jle 0x4b424f ; add byte ptr [rax + 0x28], ah ; cld ; call qword ptr [rax + 5]
0x0000000000400595 : jne 0x400599 ; ret
0x0000000000401168 : jne 0x401380 ; call qword ptr [rbx + 0x10]
0x0000000000405f0c : jne 0x405f18 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dc38 : jne 0x40dc13 ; ret
0x000000000040dd2b : jne 0x40dd4c ; add rsp, 0x118 ; ret
0x00000000004100c1 : jne 0x4100cb ; add rsp, 0xd8 ; ret
0x0000000000410172 : jne 0x41017c ; add rsp, 0xd8 ; ret
0x00000000004155c5 : jne 0x4155d0 ; ret
0x00000000004171e8 : jne 0x417234 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000417261 : jne 0x417250 ; ret
0x000000000041817e : jne 0x418170 ; ret
0x00000000004187b1 : jne 0x41876f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004187fc : jne 0x4187f0 ; lea eax, [rdx + rdi] ; ret
0x0000000000419116 : jne 0x419108 ; ret
0x0000000000419c30 : jne 0x419c38 ; call qword ptr [rbx + 0xe8]
0x000000000041ad70 : jne 0x41ad78 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042044c : jne 0x420410 ; ret
0x00000000004238fa : jne 0x42387f ; ret
0x0000000000423c07 : jne 0x423bf0 ; sub rax, 0x10 ; ret
0x0000000000426cec : jne 0x426cd0 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042c187 : jne 0x42c1e0 ; xor eax, eax ; ret
0x000000000042c157 : jne 0x42c200 ; xor eax, eax ; ret
0x000000000042c603 : jne 0x42c620 ; xor eax, eax ; vzeroupper ; ret
0x000000000042ce34 : jne 0x42cd40 ; ret
0x000000000042cd3a : jne 0x42cd40 ; vzeroupper ; ret
0x000000000042dbe1 : jne 0x42e613 ; xor eax, eax ; ret
0x000000000042dc09 : jne 0x42e61f ; xor eax, eax ; ret
0x00000000004459c5 : jne 0x445950 ; lea rax, [rdi + 3] ; ret
0x0000000000445997 : jne 0x445950 ; lea rax, [rdi + 7] ; ret
0x0000000000447124 : jne 0x447330 ; xor eax, eax ; ret
0x0000000000447341 : jne 0x447345 ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004471d1 : jne 0x447345 ; xor eax, eax ; ret
0x0000000000447451 : jne 0x447440 ; ret
0x0000000000447501 : jne 0x4474f0 ; ret
0x0000000000447671 : jne 0x447660 ; lea rax, [rcx - 1] ; ret
0x00000000004477c1 : jne 0x4477b0 ; sub rax, 1 ; ret
0x0000000000448acd : jne 0x448ab3 ; ret
0x0000000000448c34 : jne 0x448c17 ; vzeroupper ; ret
0x0000000000448df7 : jne 0x448dd2 ; vzeroupper ; ret
0x00000000004495cf : jne 0x4495f4 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449e5c : jne 0x449e88 ; mov eax, 0x77 ; syscall
0x0000000000449e7b : jne 0x449ec3 ; add rsp, 0x38 ; ret
0x000000000044a427 : jne 0x44a439 ; add rsp, 0x28 ; ret
0x000000000044a657 : jne 0x44a69b ; add rsp, 0x58 ; ret
0x000000000044a6a8 : jne 0x44a6c0 ; xor eax, eax ; syscall
0x000000000044a778 : jne 0x44a790 ; mov eax, 1 ; syscall
0x000000000044a8b5 : jne 0x44a918 ; mov eax, 0x48 ; syscall
0x000000000044a9e7 : jne 0x44aa33 ; add rsp, 0x68 ; ret
0x000000000044aa48 : jne 0x44aa60 ; mov eax, 3 ; syscall
0x000000000044b356 : jne 0x44b367 ; add rsp, 0x28 ; ret
0x000000000044b58b : jne 0x44b5a0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b5b1 : jne 0x44b5f0 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b5d9 : jne 0x44b610 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c0f6 : jne 0x44c118 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c129 : jne 0x44c170 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c155 : jne 0x44c1d0 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c1e1 : jne 0x44c241 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c211 : jne 0x44c272 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044cc22 : jne 0x44cc14 ; pop rdx ; pop r10 ; ret
0x000000000044cc12 : jne 0x44cc1c ; nop ; mov eax, 0xca ; syscall
0x000000000044ff3f : jne 0x44fed1 ; call rsi
0x000000000045bb5f : jne 0x45bb66 ; add rsp, 0x18 ; ret
0x000000000045bda7 : jne 0x45bdf3 ; add rsp, 0x148 ; ret
0x000000000045db8b : jne 0x45db92 ; add rsp, 0x18 ; ret
0x00000000004697a2 : jne 0x4697ac ; add rsp, 0xd8 ; ret
0x00000000004715b1 : jne 0x4715a0 ; ret
0x00000000004724da : jne 0x472548 ; mov rax, qword ptr [rax + 0x130] ; call qword ptr [rax + 0x68]
0x00000000004727fc : jne 0x4727f0 ; lea eax, [rdx + rdi] ; ret
0x00000000004742b3 : jne 0x4742b9 ; xor rax, rax ; ret
0x00000000004746b3 : jne 0x4746e0 ; mov rax, r8 ; vzeroupper ; ret
0x0000000000474f6c : jne 0x474f60 ; ret
0x0000000000474f73 : jne 0x474f79 ; xor rax, rax ; ret
0x000000000047520b : jne 0x4751c0 ; mov rax, rdx ; ret
0x0000000000476247 : jne 0x4762a6 ; mov eax, 0x101 ; syscall
0x000000000047637c : jne 0x4763c3 ; add rsp, 0x58 ; ret
0x00000000004763ff : jne 0x476409 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004764ae : jne 0x4764cb ; add rsp, 0x38 ; ret
0x000000000047f28a : jne 0x47f22b ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047f278 : jne 0x47f250 ; ret
0x000000000047ff17 : jne 0x47ff28 ; mov rax, qword ptr [rip + 0x23d550] ; ret
0x000000000047ff6c : jne 0x47ff40 ; ret
0x0000000000481a29 : jne 0x4819fa ; movsx eax, cl ; neg eax ; ret
0x00000000004827fa : jne 0x482802 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004828f5 : jne 0x482923 ; add rsp, 0x38 ; ret
0x00000000004829b5 : jne 0x4829de ; add rsp, 0x68 ; ret
0x0000000000482b16 : jne 0x482b4e ; add rsp, 0x78 ; ret
0x0000000000482de5 : jne 0x482e0e ; add rsp, 0x68 ; ret
0x0000000000484e21 : jne 0x484e5e ; leave ; ret
0x00000000004852c1 : jne 0x4852a8 ; mov rax, rsi ; ret
0x0000000000485345 : jne 0x485320 ; mov rax, rsi ; ret
0x0000000000485acd : jne 0x485ad4 ; add rsp, 0x38 ; ret
0x0000000000485bb0 : jne 0x485bc4 ; add rsp, 0x38 ; ret
0x00000000004882c6 : jne 0x4882ed ; ret
0x000000000048837b : jne 0x48837f ; pop rbx ; ret
0x0000000000488f0b : jne 0x488f1c ; add rsp, 0x38 ; ret
0x0000000000489019 : jne 0x48902c ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000489100 : jne 0x489114 ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048bad1 : jne 0x48bb08 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048bae9 : jne 0x48bb08 ; xor eax, eax ; ret
0x000000000048dd00 : jne 0x48dd1c ; mov rax, qword ptr [rax] ; ret
0x000000000048dd6f : jne 0x48dd75 ; mov qword ptr [rax], rdx ; ret
0x000000000048e0ce : jne 0x48e0c0 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e398 : jne 0x48e38a ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e6d3 : jne 0x48e6c5 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048ec24 : jne 0x48ec40 ; ret
0x000000000048ec44 : jne 0x48ec55 ; mov eax, 8 ; ret
0x000000000048ec6f : jne 0x48ec98 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048ec89 : jne 0x48ec9e ; xor eax, eax ; ret
0x000000000048facf : jne 0x48faf8 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048fae9 : jne 0x48fafe ; xor eax, eax ; ret
0x0000000000490089 : jne 0x490090 ; ret
0x00000000004900a4 : jne 0x4900b0 ; ret
0x00000000004902d4 : jne 0x4902e0 ; ret
0x0000000000490559 : jne 0x490578 ; xor eax, eax ; ret
0x0000000000490b25 : jne 0x490b10 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490b70 : jne 0x490b48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490cb5 : jne 0x490c98 ; pop rbx ; ret
0x0000000000490dc3 : jne 0x490da8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049197d : jne 0x491960 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491b01 : jne 0x491b10 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a7a57 : jne 0x4a7a1a ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a99eb : jne 0x4a9a10 ; retf 0x32dd
0x00000000004b39ad : jne 0x4b39af ; add byte ptr [rax - 8], ah ; sti ; call qword ptr [rsi + 1]
0x0000000000410936 : jno 0x410980 ; mov edi, ebx ; call qword ptr [rbp + 0x60]
0x0000000000414f8e : jno 0x414fba ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000042de9e : jno 0x42dea7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000439290 : jno 0x439290 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004394ca : jno 0x4394ca ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000439631 : jno 0x439639 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000439796 : jno 0x439814 ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000004838e4 : jno 0x48392f ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000049726d : jno 0x49726a ; dec dword ptr [rcx] ; jb 0x49726e ; call qword ptr [rbp + 0x73]
0x0000000000422492 : jnp 0x422493 ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004255a1 : jnp 0x4255cd ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000479609 : jnp 0x479679 ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000495cc5 : jnp 0x495cc1 ; call qword ptr [rax + 0x10fffa7d]
0x00000000004a8405 : jnp 0x4a83c0 ; ret
0x00000000004a9402 : jnp 0x4a945e ; retf
0x00000000004a9809 : jnp 0x4a9854 ; retf 0x99e0
0x00000000004aa469 : jnp 0x4aa4a8 ; retf
0x000000000042523f : jns 0x425241 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000439297 : jns 0x439298 ; ret
0x00000000004394d1 : jns 0x4394d2 ; ret
0x0000000000439638 : jns 0x439641 ; ret
0x000000000043fac7 : jns 0x43faa0 ; retf 0xead3
0x000000000043fc17 : jns 0x43fbf0 ; retf 0xead3
0x000000000043fd67 : jns 0x43fd40 ; retf 0xead3
0x000000000043feb7 : jns 0x43fe90 ; retf 0xead3
0x0000000000440007 : jns 0x43ffe0 ; retf 0xead3
0x0000000000440157 : jns 0x440130 ; retf 0xead3
0x00000000004402a7 : jns 0x440280 ; retf 0xead3
0x00000000004403f7 : jns 0x4403d0 ; retf 0xead3
0x0000000000440547 : jns 0x440520 ; retf 0xead3
0x0000000000440697 : jns 0x440670 ; retf 0xead3
0x00000000004407e7 : jns 0x4407c0 ; retf 0xead3
0x0000000000440937 : jns 0x440910 ; retf 0xead3
0x0000000000440a87 : jns 0x440a60 ; retf 0xead3
0x0000000000440bd7 : jns 0x440bb0 ; retf 0xead3
0x0000000000440d27 : jns 0x440d00 ; retf 0xead3
0x000000000044c156 : jns 0x44c1a0 ; mov edi, dword ptr [rbp] ; call r12
0x000000000045dc80 : jns 0x45dc44 ; xor eax, eax ; ret
0x000000000048b9be : jns 0x48b9c3 ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048dc6e : jns 0x48dca8 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048e9de : jns 0x48e9e3 ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004905de : jns 0x4905e3 ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a750e : jns 0x4a74a2 ; ret 0xf869
0x00000000004b06fd : jns 0x4b06f8 ; call rsp
0x00000000004153e4 : jo 0x41542e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415414 : jo 0x41545e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044ceb2 : jo 0x44ced4 ; ret
0x0000000000453ea0 : jo 0x453ea2 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000047162a : jo 0x47163c ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000474926 : jo 0x474983 ; pop rbp ; pop r12 ; ret
0x0000000000474b3d : jo 0x474b9a ; pop rbp ; pop r12 ; ret
0x0000000000482cd4 : jo 0x482d31 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000494c74 : jo 0x494c9d ; stc ; call qword ptr [rax - 0x4f0006d8]
0x0000000000494c94 : jo 0x494cc6 ; stc ; call qword ptr [rax + 0x30fff931]
0x0000000000494cdc : jo 0x494d11 ; stc ; call qword ptr [rax + 0x4c]
0x0000000000494f2c : jo 0x494ee5 ; stc ; call qword ptr [rax - 0x47]
0x0000000000494fec : jo 0x494f8c ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x0000000000495020 : jo 0x494fbb ; stc ; inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x0000000000495040 : jo 0x494fe7 ; stc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000495080 : jo 0x49505c ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000495108 : jo 0x4950e7 ; stc ; call qword ptr [rax - 0x21]
0x00000000004951b8 : jo 0x495184 ; stc ; inc eax ; retf
0x000000000049520c : jo 0x4951df ; stc ; inc eax ; sar cl, cl ; call qword ptr [rax]
0x0000000000495240 : jo 0x495253 ; cli ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000495738 : jo 0x495772 ; cli ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000495b60 : jo 0x495b8b ; cli ; call qword ptr [rax]
0x0000000000495cdc : jo 0x495c65 ; cli ; call qword ptr [rax]
0x0000000000495cfc : jo 0x495c92 ; cli ; call qword ptr [rax]
0x0000000000495d20 : jo 0x495cbf ; cli ; inc eax ; sahf ; cli ; call qword ptr [rax]
0x0000000000495c88 : jo 0x495ce6 ; cli ; call qword ptr [rax]
0x0000000000495e0c : jo 0x495e06 ; cli ; call qword ptr [rax - 0x4f000508]
0x0000000000495e30 : jo 0x495e2b ; cli ; call qword ptr [rax - 0x4f000507]
0x0000000000495e50 : jo 0x495e4c ; cli ; call qword ptr [rax - 0x4f000506]
0x00000000004a46a0 : jo 0x4a4654 ; cld ; call rax
0x00000000004a8584 : jo 0x4a85f7 ; mov ebp, 0xfb67d10d ; ret
0x00000000004af84c : jo 0x4af851 ; ret 0xa01
0x00000000004b042c : jo 0x4b046e ; add byte ptr [rax], al ; push rax ; hlt ; clc ; call qword ptr [rax]
0x00000000004b4b35 : jo 0x4b4b3a ; retf
0x00000000004b6050 : jo 0x4b60a8 ; std ; call qword ptr [rdx]
0x00000000004145d8 : jp 0x414604 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000044e252 : jp 0x44e24b ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x0000000000458052 : jp 0x45804a ; ret
0x00000000004a8245 : jp 0x4a82a0 ; cmp byte ptr [rbx + rdi*2], bh ; push -0x42 ; outsb dx, byte ptr [rsi] ; call qword ptr [rcx - 0x66]
0x00000000004a8713 : jp 0x4a86c4 ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043598a : jrcxz 0x43597f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004384aa : jrcxz 0x43849f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044cc73 : jrcxz 0x44cc30 ; cmp r11d, 0xa ; je 0x44cc7c ; ret
0x00000000004690ef : jrcxz 0x4690f0 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048060e : jrcxz 0x480658 ; mov esi, ebx ; syscall
0x0000000000490dc4 : jrcxz 0x490e21 ; pop rbp ; pop r12 ; ret
0x00000000004a7365 : jrcxz 0x4a73bd ; ret
0x00000000004a952d : jrcxz 0x4a94e8 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004aa089 : jrcxz 0x4aa068 ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x0000000000403b2c : js 0x403b2f ; mov rdi, r15 ; call 0x4205f0
0x000000000040eb05 : js 0x40eb27 ; call rdx
0x0000000000422fe7 : js 0x423012 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000004595dc : js 0x4595da ; call qword ptr [rax + 0x2e66c3f3]
0x00000000004724c9 : js 0x4724fb ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000047c7f2 : js 0x47c802 ; pop rbx ; ret
0x000000000047e354 : js 0x47e358 ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000485914 : js 0x485939 ; add cl, ch ; retf
0x000000000048df26 : js 0x48df2a ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048df33 : js 0x48df37 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490bf3 : js 0x490c6c ; ret 0x8b48
0x0000000000497234 : js 0x4972ac ; sti ; call qword ptr [rax + 0x76]
0x00000000004a9468 : js 0x4a9436 ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004a9401 : js 0x4a947e ; pop rdx ; retf
0x00000000004ac778 : js 0x4ac7ec ; cmc ; call qword ptr [rbp + 2]
0x00000000004b1568 : js 0x4b1537 ; stc ; call qword ptr [rbp + 0xb]
0x00000000004b52b8 : js 0x4b5299 ; cld ; call qword ptr [rdx]
0x000000000046c0f3 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004572a5 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000046c16b : lahf ; loopne 0x46c16d ; call qword ptr [rax - 0x176a76b8]
0x00000000004a9a43 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047f28b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004405cd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045f9bf : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a9332 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a9b34 : lahf ; push -0x57d3205 ; call 0xffffffffab58662e
0x00000000004a7b40 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044b86b : lahf ; ret
0x0000000000419abf : lahf ; ret 0x3949
0x0000000000419b72 : lahf ; ret 0x48e9
0x000000000044b721 : lahf ; ret 0x8545
0x00000000004a729d : lahf ; ret 0x871e
0x0000000000448e89 : lahf ; ret 0xea81
0x000000000048d2e1 : lahf ; ret 0xf45
0x000000000041017d : lahf ; retf
0x0000000000494ff1 : lahf ; stc ; call qword ptr [rax]
0x0000000000449f1d : lahf ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000440c5d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004980ef : lcall [rax] ; sub eax, 0x2be8fffc ; cld ; call qword ptr [rax + 0x2d]
0x000000000041b962 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000041a1c0 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412d25 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000412aab : lcall [rbx + 0x5d] ; ret
0x00000000004808b6 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004113de : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000049726b : lcall [rcx + rsi*2 - 5] ; dec dword ptr [rcx] ; jb 0x49726e ; call qword ptr [rbp + 0x73]
0x00000000004932ff : lcall [rcx + rsi*8 - 0xa] ; call qword ptr [rcx - 0xf]
0x0000000000495917 : lcall [rdx + 0x2afffa34] ; xor al, 0xfa ; call rax
0x0000000000496363 : lcall [rsi + 0x3f] ; sti ; call qword ptr [rsi + 0x40]
0x00000000004a4877 : lcall [rsp + rsi*4 - 0x4b7b0004] ; cld ; call rsp
0x0000000000436016 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000041880b : lea eax, [r8 - 1] ; ret
0x000000000048b9dc : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042c1b4 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042c1c4 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042c194 : lea eax, [rax + rdi - 0x10] ; ret
0x000000000041880c : lea eax, [rax - 1] ; ret
0x00000000004b51b1 : lea eax, [rax] ; add byte ptr [rsp + rbx*8 - 4], ch ; call qword ptr [rdi + 1]
0x0000000000473fdd : lea eax, [rcx + rsi] ; ret
0x0000000000447674 : lea eax, [rcx - 1] ; ret
0x00000000004456ec : lea eax, [rdi + 0x10] ; ret
0x0000000000445701 : lea eax, [rdi + 0x11] ; ret
0x000000000044571f : lea eax, [rdi + 0x12] ; ret
0x000000000044573f : lea eax, [rdi + 0x13] ; ret
0x0000000000445762 : lea eax, [rdi + 0x14] ; ret
0x0000000000445781 : lea eax, [rdi + 0x15] ; ret
0x00000000004457a1 : lea eax, [rdi + 0x16] ; ret
0x00000000004457c1 : lea eax, [rdi + 0x17] ; ret
0x00000000004457e4 : lea eax, [rdi + 0x18] ; ret
0x0000000000445809 : lea eax, [rdi + 0x19] ; ret
0x0000000000445827 : lea eax, [rdi + 0x1a] ; ret
0x0000000000445847 : lea eax, [rdi + 0x1b] ; ret
0x0000000000445863 : lea eax, [rdi + 0x1c] ; ret
0x0000000000445883 : lea eax, [rdi + 0x1d] ; ret
0x00000000004458a3 : lea eax, [rdi + 0x1e] ; ret
0x00000000004458c3 : lea eax, [rdi + 0x1f] ; ret
0x000000000044563d : lea eax, [rdi + 0xa] ; ret
0x000000000044565d : lea eax, [rdi + 0xb] ; ret
0x000000000044567f : lea eax, [rdi + 0xc] ; ret
0x000000000044569f : lea eax, [rdi + 0xd] ; ret
0x00000000004456bf : lea eax, [rdi + 0xe] ; ret
0x00000000004456d9 : lea eax, [rdi + 0xf] ; ret
0x0000000000445587 : lea eax, [rdi + 1] ; ret
0x000000000044559a : lea eax, [rdi + 2] ; ret
0x00000000004455a5 : lea eax, [rdi + 3] ; ret
0x00000000004455b8 : lea eax, [rdi + 4] ; ret
0x00000000004455cd : lea eax, [rdi + 5] ; ret
0x00000000004455eb : lea eax, [rdi + 6] ; ret
0x00000000004455f7 : lea eax, [rdi + 7] ; ret
0x000000000044560a : lea eax, [rdi + 8] ; ret
0x000000000044561f : lea eax, [rdi + 9] ; ret
0x000000000042c1e9 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042c1f9 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042c0f3 : lea eax, [rdi + rax + 0x30] ; ret
0x0000000000474225 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000441157 : lea eax, [rdi + rax] ; ret
0x00000000004479ca : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473ed9 : lea eax, [rdi + rsi] ; ret
0x0000000000445573 : lea eax, [rdi] ; ret
0x0000000000444b5d : lea eax, [rdx + 0xa] ; ret
0x0000000000444b7d : lea eax, [rdx + 0xb] ; ret
0x0000000000444b9f : lea eax, [rdx + 0xc] ; ret
0x0000000000444bbf : lea eax, [rdx + 0xd] ; ret
0x0000000000444bdf : lea eax, [rdx + 0xe] ; ret
0x0000000000444a6f : lea eax, [rdx + 0xf] ; ret
0x0000000000444a97 : lea eax, [rdx + 1] ; ret
0x0000000000444aad : lea eax, [rdx + 2] ; ret
0x0000000000444ac5 : lea eax, [rdx + 3] ; ret
0x0000000000444adb : lea eax, [rdx + 4] ; ret
0x0000000000444aed : lea eax, [rdx + 5] ; ret
0x0000000000444b0b : lea eax, [rdx + 6] ; ret
0x0000000000444a17 : lea eax, [rdx + 7] ; ret
0x0000000000444b1d : lea eax, [rdx + 8] ; ret
0x0000000000444b3d : lea eax, [rdx + 9] ; ret
0x00000000004187fe : lea eax, [rdx + rdi] ; ret
0x0000000000448fa3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000423b86 : lea eax, [rdx - 0x10] ; ret
0x0000000000444a85 : lea eax, [rdx] ; ret
0x000000000042536a : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000044e241 : lea eax, [rip + 0x26d0b9] ; ret
0x000000000042523c : lea eax, [rip + 0x79ee] ; je 0x42520a ; ret
0x000000000041265c : lea eax, [rsp + 0x10] ; call qword ptr [rbp + 0x18]
0x00000000004124f1 : lea eax, [rsp + 0x38] ; call qword ptr [r13 + 8]
0x0000000000460641 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e191 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a7b51 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004749db : lea ecx, [rax + 1] ; call rbx
0x0000000000474b76 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000472e14 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000423b96 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004765f7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000472c20 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000472b3b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000474afe : lea ecx, [rsp + 0x20] ; call rbx
0x0000000000474cec : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000004749d6 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x0000000000403b2b : lea edi, [rax + 1] ; mov rdi, r15 ; call 0x4205f0
0x0000000000417a19 : lea edi, [rsi + 1] ; call qword ptr [rbx + 0x18]
0x0000000000463d80 : lea edi, [rsp + 0x10] ; xor esi, esi ; call 0
0x0000000000401231 : lea edi, [rsp + 0x60] ; call 0x40dc40
0x0000000000419121 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000472997 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004252b3 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x00000000004245ff : lea edx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x000000000042548f : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000425224 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000424598 : lea edx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x00000000004245cf : lea edx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x0000000000474f3a : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x00000000004246d9 : lea edx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000425553 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000425413 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048e851 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x00000000004127f2 : lea esi, [rdi + 0x58] ; mov rdi, rax ; call qword ptr [rax + 8]
0x000000000045bf55 : lea esi, [rdi + rax] ; mov rbx, rax ; mov rdi, r14 ; call rbp
0x0000000000447cef : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000415193 : lea esi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [r13 + 0x90]
0x0000000000413eee : lea esi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax + 0x90]
0x0000000000414568 : lea esi, [rsp + 0x20] ; mov rdi, rbx ; call qword ptr [rax + 0x90]
0x0000000000411dc3 : lea esi, [rsp + 0x30] ; mov rdi, r15 ; call qword ptr [rdx + 0x90]
0x000000000047eda6 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x000000000048e850 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000417a18 : lea r15, [r14 + 1] ; call qword ptr [rbx + 0x18]
0x0000000000403b2a : lea r15, [rax + 1] ; mov rdi, r15 ; call 0x4205f0
0x000000000041265b : lea r8, [rsp + 0x10] ; call qword ptr [rbp + 0x18]
0x00000000004124f0 : lea r8, [rsp + 0x38] ; call qword ptr [r13 + 8]
0x0000000000472e13 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000472c1f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000472b3a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000474afd : lea r9, [rsp + 0x20] ; call rbx
0x0000000000474ceb : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000004749d5 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000048b9db : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042c1b3 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042c1c3 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042c193 : lea rax, [rax + rdi - 0x10] ; ret
0x0000000000473fdc : lea rax, [rcx + rsi] ; ret
0x0000000000447673 : lea rax, [rcx - 1] ; ret
0x00000000004456eb : lea rax, [rdi + 0x10] ; ret
0x0000000000445700 : lea rax, [rdi + 0x11] ; ret
0x000000000044571e : lea rax, [rdi + 0x12] ; ret
0x000000000044573e : lea rax, [rdi + 0x13] ; ret
0x0000000000445761 : lea rax, [rdi + 0x14] ; ret
0x0000000000445780 : lea rax, [rdi + 0x15] ; ret
0x00000000004457a0 : lea rax, [rdi + 0x16] ; ret
0x00000000004457c0 : lea rax, [rdi + 0x17] ; ret
0x00000000004457e3 : lea rax, [rdi + 0x18] ; ret
0x0000000000445808 : lea rax, [rdi + 0x19] ; ret
0x0000000000445826 : lea rax, [rdi + 0x1a] ; ret
0x0000000000445846 : lea rax, [rdi + 0x1b] ; ret
0x0000000000445862 : lea rax, [rdi + 0x1c] ; ret
0x0000000000445882 : lea rax, [rdi + 0x1d] ; ret
0x00000000004458a2 : lea rax, [rdi + 0x1e] ; ret
0x00000000004458c2 : lea rax, [rdi + 0x1f] ; ret
0x000000000044563c : lea rax, [rdi + 0xa] ; ret
0x000000000044565c : lea rax, [rdi + 0xb] ; ret
0x000000000044567e : lea rax, [rdi + 0xc] ; ret
0x000000000044569e : lea rax, [rdi + 0xd] ; ret
0x00000000004456be : lea rax, [rdi + 0xe] ; ret
0x00000000004456d8 : lea rax, [rdi + 0xf] ; ret
0x0000000000445586 : lea rax, [rdi + 1] ; ret
0x0000000000445599 : lea rax, [rdi + 2] ; ret
0x00000000004455a4 : lea rax, [rdi + 3] ; ret
0x00000000004455b7 : lea rax, [rdi + 4] ; ret
0x00000000004455cc : lea rax, [rdi + 5] ; ret
0x00000000004455ea : lea rax, [rdi + 6] ; ret
0x00000000004455f6 : lea rax, [rdi + 7] ; ret
0x0000000000445609 : lea rax, [rdi + 8] ; ret
0x000000000044561e : lea rax, [rdi + 9] ; ret
0x000000000042c1e8 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c1f8 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c0f2 : lea rax, [rdi + rax + 0x30] ; ret
0x0000000000474224 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000441156 : lea rax, [rdi + rax] ; ret
0x00000000004479c9 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473ed8 : lea rax, [rdi + rsi] ; ret
0x0000000000445572 : lea rax, [rdi] ; ret
0x0000000000444b5c : lea rax, [rdx + 0xa] ; ret
0x0000000000444b7c : lea rax, [rdx + 0xb] ; ret
0x0000000000444b9e : lea rax, [rdx + 0xc] ; ret
0x0000000000444bbe : lea rax, [rdx + 0xd] ; ret
0x0000000000444bde : lea rax, [rdx + 0xe] ; ret
0x0000000000444a6e : lea rax, [rdx + 0xf] ; ret
0x0000000000444a96 : lea rax, [rdx + 1] ; ret
0x0000000000444aac : lea rax, [rdx + 2] ; ret
0x0000000000444ac4 : lea rax, [rdx + 3] ; ret
0x0000000000444ada : lea rax, [rdx + 4] ; ret
0x0000000000444aec : lea rax, [rdx + 5] ; ret
0x0000000000444b0a : lea rax, [rdx + 6] ; ret
0x0000000000444a16 : lea rax, [rdx + 7] ; ret
0x0000000000444b1c : lea rax, [rdx + 8] ; ret
0x0000000000444b3c : lea rax, [rdx + 9] ; ret
0x0000000000423b85 : lea rax, [rdx - 0x10] ; ret
0x0000000000444a84 : lea rax, [rdx] ; ret
0x000000000044e240 : lea rax, [rip + 0x26d0b9] ; ret
0x000000000040e190 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004749da : lea rcx, [rax + 1] ; call rbx
0x0000000000474b75 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000423b95 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004765f6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000463d7f : lea rdi, [rsp + 0x10] ; xor esi, esi ; call 0
0x0000000000401230 : lea rdi, [rsp + 0x60] ; call 0x40dc40
0x00000000004127f1 : lea rsi, [rdi + 0x58] ; mov rdi, rax ; call qword ptr [rax + 8]
0x0000000000447cee : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000415192 : lea rsi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [r13 + 0x90]
0x0000000000413eed : lea rsi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax + 0x90]
0x0000000000414567 : lea rsi, [rsp + 0x20] ; mov rdi, rbx ; call qword ptr [rax + 0x90]
0x0000000000411dc2 : lea rsi, [rsp + 0x30] ; mov rdi, r15 ; call qword ptr [rdx + 0x90]
0x000000000042ac27 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000450536 : leave ; add al, ch ; ret 0xbafa
0x000000000042bb07 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004587ea : leave ; call r15
0x0000000000447450 : leave ; jne 0x447440 ; ret
0x0000000000447500 : leave ; jne 0x4474f0 ; ret
0x00000000004477c0 : leave ; jne 0x4477b0 ; sub rax, 1 ; ret
0x000000000047520a : leave ; jne 0x4751c0 ; mov rax, rdx ; ret
0x00000000004479c8 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000400c3e : leave ; ret
0x00000000004a9534 : leave ; retf
0x00000000004a7d01 : leave ; retf 0x6ee8
0x00000000004a6e29 : leave ; retf 0xcccb
0x00000000004679ef : leave ; retf 3
0x00000000004951b5 : leave ; stc ; push qword ptr [rax - 0x36] ; stc ; inc eax ; retf
0x0000000000495f1c : leave ; xor bl, bh ; call qword ptr [rsi]
0x0000000000474afa : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000042d3ee : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047fd77 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042248c : lock sbb byte ptr [rdi], al ; add al, ch ; wait ; jnp 0x422493 ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000410c30 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446dd0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000403290 : lodsb al, byte ptr [rsi] ; add byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000044a0a0 : lodsb al, byte ptr [rsi] ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004a9426 : lodsb al, byte ptr [rsi] ; loop 0x4a93f0 ; retf
0x000000000042b224 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000401130 : lodsb al, byte ptr [rsi] ; ret
0x0000000000495055 : lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax - 0x53]
0x00000000004959e0 : lodsb al, byte ptr [rsi] ; sub edx, edi ; call qword ptr [rdx + 0x31]
0x00000000004b0864 : lodsb al, byte ptr [rsi] ; test cl, bh ; call qword ptr [rcx + 1]
0x00000000004a7a5b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004620b7 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a9805 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000483a52 : lodsd eax, dword ptr [rsi] ; ret
0x000000000041142a : loop 0x411474 ; mov esi, ebp ; mov rdi, rbx ; call qword ptr [r13 + 0x58]
0x0000000000411e00 : loop 0x411e4a ; mov esi, ebx ; mov rdi, r15 ; call qword ptr [r14 + 0x80]
0x0000000000415666 : loop 0x4156b4 ; mov esi, ebp ; mov rdi, rbx ; call qword ptr [r15 + 0x78]
0x000000000042282e : loop 0x422878 ; mov esi, ebx ; mov rdi, r13 ; call 0x41ea70
0x0000000000426ced : loop 0x426d20 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000004358fa : loop 0x4358ef ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043841a : loop 0x43840f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044b50a : loop 0x44b4ca ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbp
0x000000000044cec3 : loop 0x44cf0d ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044ffe0 : loop 0x44ffe1 ; dec dword ptr [rcx + rcx*4 - 9] ; call r13
0x000000000045bf6a : loop 0x45bfb8 ; mov esi, esi ; mov rdi, qword ptr [rsp + 0x18] ; call rbp
0x000000000045bf92 : loop 0x45bfe0 ; mov esi, esi ; mov rdi, r13 ; call rbp
0x000000000045bfad : loop 0x45bff7 ; mov esi, ebx ; mov rdi, r14 ; call rbp
0x000000000045c3b5 : loop 0x45c403 ; mov esi, ebp ; mov rdi, rbx ; call rbp
0x000000000045cb5d : loop 0x45cba7 ; mov esi, dword ptr [rsp + 0x10] ; mov rdi, r14 ; call rbp
0x000000000046bf2c : loop 0x46bf2d ; call qword ptr [rax + 0x30bd8b48]
0x000000000046bf4c : loop 0x46bf4d ; call qword ptr [rax - 0x8bf4a75]
0x00000000004709f4 : loop 0x470a3e ; mov esi, ebp ; mov rdi, rbx ; call qword ptr [r13 + 0x38]
0x00000000004733ca : loop 0x4733da ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047399c : loop 0x4739e6 ; mov edi, ebx ; call 0x400478
0x000000000047642e : loop 0x4763ee ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x000000000048dc89 : loop 0x48dcd3 ; add esp, 0x18 ; ret
0x00000000004909aa : loop 0x49096a ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbp
0x00000000004952e0 : loop 0x4952ef ; cli ; call qword ptr [rdx + 0x14]
0x00000000004a6e42 : loop 0x4a6e27 ; in al, 0xe5 ; out 0xe7, al ; call 0xffffffffed365936
0x00000000004a9427 : loop 0x4a93f0 ; retf
0x00000000004aa57a : loop 0x4aa5c8 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000043586a : loope 0x43585f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043838a : loope 0x43837f ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000445afb : loope 0x445afd ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x00000000004494ee : loope 0x4494e3 ; ret
0x000000000044ef1e : loope 0x44ef23 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047093b : loope 0x470900 ; std ; call qword ptr [rax + 0x54415541]
0x000000000047540e : loope 0x47541f ; je 0x475430 ; ret
0x000000000047d58b : loope 0x47d58c ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004838e7 : loope 0x483935 ; mov dword ptr [rdi], ecx ; ret
0x0000000000483918 : loope 0x483966 ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000048398d : loope 0x4839db ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000490cb6 : loope 0x490d13 ; ret
0x000000000049197e : loope 0x4919db ; pop rbp ; pop r12 ; ret
0x00000000004a9531 : loope 0x4a95af ; pop rdx ; leave ; retf
0x0000000000410257 : loopne 0x4102b4 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041c80f : loopne 0x41c83a ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041d77c : loopne 0x41d78d ; xchg eax, esp ; ret 0x3de9
0x00000000004230ff : loopne 0x42315c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044ccd8 : loopne 0x44cce6 ; cmp eax, 4 ; je 0x44cce0 ; ret
0x000000000044ef22 : loopne 0x44ef81 ; pop r12 ; ret
0x0000000000455d3d : loopne 0x455db4 ; jae 0x455cca ; retf 0xb941
0x000000000046450f : loopne 0x46449a ; ret
0x000000000046c16c : loopne 0x46c16d ; call qword ptr [rax - 0x176a76b8]
0x000000000046e661 : loopne 0x46e662 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046fb89 : loopne 0x46fbe6 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470365 : loopne 0x4703c2 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004832bd : loopne 0x4832c1 ; sub eax, 1 ; ret
0x0000000000494d40 : loopne 0x494dac ; stc ; call rax
0x0000000000494fdc : loopne 0x494f9b ; stc ; call qword ptr [rax - 0x2f000669]
0x0000000000495468 : loopne 0x495474 ; cli ; call qword ptr [rax + 0xa]
0x0000000000495654 : loopne 0x49565a ; cli ; call qword ptr [rax + 4]
0x0000000000495b5c : loopne 0x495b87 ; cli ; push qword ptr [rax + 0x29] ; cli ; call qword ptr [rax]
0x0000000000495df4 : loopne 0x495ded ; cli ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x00000000004a7b54 : loopne 0x4a7b2e ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004953c4 : mov ah, 0x10 ; cli ; inc dword ptr [rax + rdx - 6] ; call rsp
0x00000000004a756a : mov ah, 0x13 ; ret
0x0000000000492bfa : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049235a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004958bc : mov ah, 0x37 ; cli ; inc dword ptr [rdi + rsi - 6] ; call rsp
0x00000000004b0770 : mov ah, 0x43 ; add byte ptr [rax], al ; cmp al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004055e0 : mov ah, 0x84 ; sub eax, dword ptr [rax] ; call 0x4220b0
0x00000000004a7a10 : mov ah, 0xa5 ; ret
0x00000000004aeb21 : mov ah, 0xf6 ; call qword ptr [rsi]
0x0000000000494ea5 : mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004a487d : mov ah, 0xfc ; call rsp
0x00000000004a7364 : mov ah, bl ; push rsi ; ret
0x0000000000414fbc : mov al, 0 ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [r13 + 0x20]
0x000000000048bad6 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004587e4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000495428 : mov al, 0x13 ; cli ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x0000000000494c7c : mov al, 0x29 ; stc ; call rax
0x0000000000410cb6 : mov al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000495748 : mov al, 0x36 ; cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000495c58 : mov al, 0x43 ; cli ; inc eax ; cli ; call rax
0x000000000044b0fc : mov al, 0x6f ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000495ce4 : mov al, 0x8a ; cli ; call qword ptr [rax - 0x74]
0x00000000004b25c0 : mov al, 0x94 ; cli ; call qword ptr [rcx]
0x0000000000495d04 : mov al, 0x97 ; cli ; call qword ptr [rax - 0x67]
0x0000000000495d30 : mov al, 0xa2 ; cli ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax - 0x5b]
0x0000000000494ffc : mov al, 0xa3 ; stc ; inc dword ptr [rax] ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rax - 0x5a]
0x0000000000495050 : mov al, 0xaa ; stc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax - 0x53]
0x00000000004a466c : mov al, 0xb2 ; cld ; call rax
0x0000000000494f24 : mov al, 0xb3 ; stc ; call qword ptr [rax + 0x70fff9b5]
0x0000000000490a6c : mov al, 0xc2 ; sti ; call qword ptr [rbp + 0x53]
0x000000000044151f : mov al, 0xc5 ; std ; xlatb ; ret
0x00000000004951c8 : mov al, 0xcf ; stc ; inc dword ptr [rax] ; sar ecx, 1 ; call qword ptr [rax - 0x2e]
0x00000000004950cc : mov al, 0xdf ; stc ; call qword ptr [rax + 0x70fff9e1]
0x0000000000459085 : mov al, 0xe8 ; and eax, 0x4cffff52 ; mov edi, ebp ; call r12
0x000000000048e37f : mov al, 0xe8 ; retf
0x0000000000450c40 : mov al, 0xe8 ; retf 0xffad
0x00000000004a9816 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000495250 : mov al, 0xf ; cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x00000000004047bf : mov al, 0xf ; retf
0x0000000000495d90 : mov al, 0xf2 ; cli ; inc eax ; cli ; call rax
0x0000000000495de8 : mov al, 0xf7 ; cli ; inc eax ; idiv edx ; call rax
0x0000000000495e14 : mov al, 0xf8 ; cli ; call rax
0x0000000000495e38 : mov al, 0xf9 ; cli ; call rax
0x00000000004b28c1 : mov al, 0xfa ; call qword ptr [rbx]
0x0000000000495e58 : mov al, 0xfa ; cli ; call rax
0x0000000000405e28 : mov al, 1 ; add cl, ch ; retf
0x000000000049569c : mov al, 3 ; cli ; call qword ptr [rax - 0x1a]
0x000000000046451b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x000000000046bb95 : mov al, byte ptr [rbx] ; add byte ptr [rcx - 0x77], al ; retf
0x00000000004432f6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443314 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000444a80 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004432d0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004432e0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000045a404 : mov bh, 0x15 ; retf 0x3db
0x0000000000436631 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000491931 : mov bh, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a98a0 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000458e44 : mov bh, 0x43 ; add al, 0x89 ; retf
0x00000000004589bf : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000445998 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004a9b78 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a8844 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a6e26 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000414169 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x0000000000425415 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b03e1 : mov bh, 0xf8 ; call qword ptr [rax]
0x0000000000494f2d : mov bh, 0xf9 ; call qword ptr [rax - 0x47]
0x0000000000494ead : mov bh, 0xf9 ; call rax
0x000000000041e873 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x00000000004888fc : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a9f53 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000048314a : mov bh, ch ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000495ce5 : mov bh, dl ; call qword ptr [rax - 0x74]
0x0000000000411bb3 : mov bl, 0 ; add byte ptr [rax], al ; mov esi, 0xffffffff ; call qword ptr [r13 + 0x18]
0x000000000044728e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a9bdb : mov bl, 0x29 ; retf 0xbf4b
0x000000000047520c : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000004a9923 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000416903 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x00000000004a9bc0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004aea81 : mov bl, 0xf6 ; call qword ptr [rdx]
0x0000000000494f25 : mov bl, 0xf9 ; call qword ptr [rax + 0x70fff9b5]
0x00000000004a7541 : mov bx, 0xf32d ; retf
0x000000000044f1ea : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000044ce9a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a368c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000044f1eb : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000044ca3f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400ed4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b6944 : mov byte ptr [rbp - 0x68e80000], ah ; std ; call qword ptr [rdx]
0x0000000000465747 : mov byte ptr [rbp - 0xd0], cl ; call 0x471960
0x0000000000416924 : mov byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, ebp ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x000000000046fa77 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x00000000004b0068 : mov byte ptr [rcx - 9], dl ; call qword ptr [rsi]
0x0000000000405eef : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045f8d3 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004456e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000445058 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044575e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000004450ae : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004457e0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000445130 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000445596 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444f76 : mov byte ptr [rdi + 2], dh ; ret
0x00000000004455b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444f92 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444fd3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a9bd5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000043024b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000413750 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000439372 : mov byte ptr [rdi], cl ; ret
0x0000000000448c55 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000445570 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444f50 : mov byte ptr [rdi], dh ; ret
0x00000000004366a3 : mov byte ptr [rdi], dl ; ret
0x0000000000444aa9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000004432f9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000444ad7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000443317 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000444a82 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004432d2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048c500 : mov byte ptr [rip + 0x230d69], 8 ; ret
0x0000000000400b16 : mov byte ptr [rip + 0x2bb883], 1 ; pop rbp ; ret
0x000000000041ea29 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004852bf : mov byte ptr [rsi], al ; jne 0x4852a8 ; mov rax, rsi ; ret
0x0000000000485343 : mov byte ptr [rsi], al ; jne 0x485320 ; mov rax, rsi ; ret
0x00000000004b0244 : mov byte ptr [rsi], bh ; add byte ptr [rax], al ; call 0xffffffffd54afa16
0x00000000004a7362 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a86a3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a9336 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a9a3f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004aa3ea : mov ch, 0xab ; ret
0x0000000000471fa7 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x0000000000494f29 : mov ch, 0xf9 ; push qword ptr [rax - 0x49] ; stc ; call qword ptr [rax - 0x47]
0x00000000004566c4 : mov ch, 0xfa ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000042df66 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004ac8c9 : mov ch, dh ; call qword ptr [rdx]
0x00000000004ac8dd : mov ch, dh ; call rsp
0x00000000004203db : mov cl, 0x35 ; pop rdi ; retf 0x29
0x0000000000450820 : mov cl, 0x35 ; retf 0x26d1
0x00000000004a9e41 : mov cl, 0x3f ; retf
0x000000000045215b : mov cl, 0xf ; retf 0xd285
0x000000000045d8db : mov cl, 0xf ; sti ; call qword ptr [rax + 0x66c3c031]
0x0000000000494fa1 : mov cl, 0xf9 ; inc eax ; mov dl, 0xf9 ; call qword ptr [rax + 0x70fff9b4]
0x00000000004a4689 : mov cl, 0xfc ; call qword ptr [rax - 0x2f00034e]
0x00000000004a4665 : mov cl, 0xfc ; call rax
0x00000000004a469d : mov cl, 0xfc ; push qword ptr [rax - 0x4e] ; cld ; call rax
0x000000000045b957 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043bb55 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004a9812 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042cdb4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000439370 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047540b : mov cl, dl ; and cl, 0xf ; je 0x475430 ; ret
0x00000000004a9acc : mov cs, edi ; ret 0x8b36
0x0000000000468fa2 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x00000000004400de : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000444f70 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004853ea : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ebbf : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417512 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004139ff : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004195a0 : mov dh, 0 ; ret
0x00000000004366a1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042c904 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dc34 : mov dh, 0x17 ; test dl, dl ; jne 0x40dc13 ; ret
0x000000000046757e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000495790 : mov dh, 0x35 ; cli ; inc dword ptr [rsi + 0x35] ; cli ; call rsi
0x0000000000417a13 : mov dh, 0x36 ; mov rdi, r12 ; lea r15, [r14 + 1] ; call qword ptr [rbx + 0x18]
0x0000000000457758 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046fa8c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045776e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040db59 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000457782 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046a3cb : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000446e61 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446e51 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446e21 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000446e41 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446e31 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045efc9 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000488ba7 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x000000000045518d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000004551ce : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a8802 : mov dh, 0x4e ; ret 0x474c
0x0000000000446e65 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000446e55 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000446e25 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000446e35 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000464238 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x000000000040608a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040f044 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000456296 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048c8f1 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000456281 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000004562ab : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004565d4 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000047984f : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000476402 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000488f5d : mov dh, 0xc0 ; neg eax ; ret
0x000000000048582a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044f6c1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000448f41 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000416312 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a9a44 : mov dh, 0xc7 ; ret 0xe71f
0x000000000042c92a : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000447d69 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000426a41 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042cdc4 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000474907 : mov dh, 0xf3 ; mov rdi, qword ptr [r12] ; call rbp
0x0000000000494fcd : mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494ea9 : mov dh, 0xf9 ; push rax ; mov bh, 0xf9 ; call rax
0x0000000000424e31 : mov dh, 0xfd ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000490257 : mov dh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417521 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413a11 : mov dh, 2 ; ret
0x000000000042cdc1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c901 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426a44 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004494ec : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004952fc : mov dl, 0x11 ; cli ; inc dword ptr [rdx + 0x11] ; cli ; call rdx
0x00000000004957f4 : mov dl, 0x38 ; cli ; inc dword ptr [rdx + 0x38] ; cli ; call rdx
0x00000000004ae9a9 : mov dl, 0xf6 ; call qword ptr [rsi]
0x0000000000494fa5 : mov dl, 0xf9 ; call qword ptr [rax + 0x70fff9b4]
0x0000000000494ea1 : mov dl, 0xf9 ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004a4661 : mov dl, 0xfc ; call rax
0x00000000004302d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000463415 : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004a9e5e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000045e0b3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000439366 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000439351 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044ce31 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004715e9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471629 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472628 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044ce97 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044ceb1 : mov dword ptr [rax + 0x20], esi ; ret
0x00000000004715ed : mov dword ptr [rax + 0x40], ecx ; ret
0x00000000004726aa : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000045196f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000451972 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000418235 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044ce35 : mov dword ptr [rax + 8], edx ; ret
0x0000000000466e4d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f462 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041ea5a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x00000000004859ed : mov dword ptr [rax], edi ; pop rbx ; ret
0x000000000048593d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000045e0b4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x000000000041b562 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000004859e1 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048dd72 : mov dword ptr [rax], edx ; ret
0x000000000047299b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047d261 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x000000000046ca34 : mov dword ptr [rbp - 0x4e8], eax ; call 0x449510
0x000000000046cad2 : mov dword ptr [rbp - 0x500], eax ; mov rdi, r15 ; call qword ptr [rcx + 0x38]
0x0000000000461300 : mov dword ptr [rbp - 0x508], eax ; mov rdi, r14 ; call qword ptr [r15 + 0x38]
0x0000000000481baf : mov dword ptr [rbp - 0x70], eax ; mov eax, 0x15 ; syscall
0x000000000047dc01 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000459642 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000413827 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000048283e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000413c0f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000048054e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000482773 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488f85 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000489059 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045bbed : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004178cd : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004173b1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000047285a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041904d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004153e2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000471674 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000472521 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000459657 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004861b3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041785c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048afb9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004178d0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413725 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047262b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000410bf1 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400e8e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000451cc5 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000439367 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000439352 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000439341 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044a3da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000419f94 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x00000000004456fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000044573b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000004457bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000004450ab : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044512d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044506d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445170 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000445190 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000445151 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000445823 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000445173 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000417293 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000445805 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000445843 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000445155 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000419f91 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047c205 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047c1d7 : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004172c3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048ddb1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000044577d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000004450cd : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000044571b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000044579d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000044508b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004364e5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436328 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004365c8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000436475 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004362b8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004455e7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000436405 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436248 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444fb7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004455c9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000004361d8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444fa9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044567b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000436168 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044501b : mov dword ptr [rdi + 5], edx ; ret
0x000000000044569b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000004360f8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044502b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000445639 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000004456bb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000436088 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444ff9 : mov dword ptr [rdi + 7], edx ; ret
0x000000000048520e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000417297 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000483a24 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000045e094 : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000045e07c : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; ret
0x0000000000445659 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000044561b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000484ec4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000444feb : mov dword ptr [rdi + 8], edx ; ret
0x0000000000448afb : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000447d95 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000448af3 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000448c75 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000447d85 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000448aeb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447d77 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048dd5c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042ff95 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffd3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000048398f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000043031c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435b38 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004304fc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435ab8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004306ec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435a38 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004308bd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004359a9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430abd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435919 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430cbd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435889 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043069d : mov dword ptr [rdi - 2], ecx ; ret
0x00000000004304b5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000430699 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430a79 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043014f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000430a76 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430c76 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430e76 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff99 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042ffd7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043014c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430248 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430194 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435bb8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045e079 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x000000000045e09a : mov dword ptr [rdi], eax ; ret
0x0000000000483914 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000483a1e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004695ca : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004455b5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000445607 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x0000000000445594 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444f74 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004455e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000444fb5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000445637 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000444ff7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445657 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000445007 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000447ac7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000445018 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000445028 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000445038 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444fa6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444fe8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000447ad3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043608c : mov dword ptr [rdi], ecx ; ret
0x0000000000448c6f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000445584 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000004455a2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004455f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x0000000000436394 : mov dword ptr [rdi], edx ; ret
0x000000000043934f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000485096 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043933e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000439363 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000447d7c : mov dword ptr [rdi], esi ; ret
0x000000000042ebb2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004138a5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000444b07 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000443337 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000444ae9 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000443329 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000444b9b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000444b19 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000443349 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000444bbb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000444b39 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000443359 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000444b59 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000444bdb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000443369 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000444b79 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000444a6b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000004432bb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004191c0 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000444a94 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000444ac2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000444a14 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000044a46a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000485098 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004851f5 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044a71a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000443264 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000004859cd : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000419128 : mov dword ptr [rdx], eax ; ret
0x0000000000490caf : mov dword ptr [rip + 0x22c0fb], ebx ; jne 0x490c98 ; pop rbx ; ret
0x00000000004854f8 : mov dword ptr [rip + 0x237c2a], eax ; ret
0x000000000047fe25 : mov dword ptr [rip + 0x23d645], eax ; ret
0x000000000045ba18 : mov dword ptr [rip + 0x26009a], edx ; je 0x45ba28 ; ret
0x000000000044e276 : mov dword ptr [rip + 0x26b83c], edx ; pop rbx ; ret
0x00000000004205d6 : mov dword ptr [rip + 0x29a284], eax ; ret
0x000000000041a4fc : mov dword ptr [rip + 0x2a035e], eax ; ret
0x0000000000419ff7 : mov dword ptr [rip + 0x2a07f3], eax ; ret
0x000000000041a00e : mov dword ptr [rip + 0x2a07f8], eax ; ret
0x0000000000419fcf : mov dword ptr [rip + 0x2a0813], eax ; ret
0x0000000000419faf : mov dword ptr [rip + 0x2a082b], eax ; ret
0x0000000000419ea5 : mov dword ptr [rip + 0x2a099d], eax ; ret
0x0000000000419e95 : mov dword ptr [rip + 0x2a09a5], eax ; ret
0x0000000000419e83 : mov dword ptr [rip + 0x2a09a7], edx ; ret
0x0000000000419e45 : mov dword ptr [rip + 0x2a09ad], eax ; ret
0x0000000000419e35 : mov dword ptr [rip + 0x2a09c5], eax ; ret
0x000000000041a024 : mov dword ptr [rip + 0x2a2e2a], eax ; ret
0x000000000045dffd : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000401903 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000045e001 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x000000000045dc7d : mov dword ptr [rsi + 8], edx ; jns 0x45dc44 ; xor eax, eax ; ret
0x0000000000447ad6 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000447ac9 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000045de86 : mov dword ptr [rsi], 0 ; xor eax, eax ; ret
0x00000000004793f1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x0000000000411ef3 : mov dword ptr [rsi], eax ; call qword ptr [rbp + 0x30]
0x000000000048dd9e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047ff92 : mov dword ptr [rsi], eax ; ret
0x000000000047f2d9 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045de3b : mov dword ptr [rsi], edx ; pop rbp ; ret
0x000000000045e0b6 : mov dword ptr [rsi], edx ; ret
0x000000000045de3a : mov dword ptr [rsi], r10d ; pop rbp ; ret
0x00000000004197b9 : mov dword ptr [rsp + 0x10], eax ; mov rdi, rax ; call qword ptr [r13 + 0xe0]
0x000000000041d79a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d857 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041214c : mov dword ptr [rsp + 0x30], eax ; call qword ptr [r13 + 0x30]
0x000000000045205c : mov dword ptr [rsp + 0x50], eax ; call 0x44e2b0
0x000000000041d79f : mov dword ptr [rsp + 8], eax ; call rcx
0x00000000004115af : mov dword ptr [rsp + 8], eax ; xor eax, eax ; mov rdi, rbp ; call qword ptr [rbp + 0x20]
0x000000000040968b : mov dword ptr [rsp + 8], ecx ; call 0x406190
0x0000000000411fd6 : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call qword ptr [r8 + 0x80]
0x000000000041202e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041ddb4 : mov dword ptr [rsp + 8], edx ; call 0x41a050
0x000000000041ddb3 : mov dword ptr [rsp + 8], r10d ; call 0x41a050
0x000000000048a763 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000414dd3 : mov dword ptr [rsp], eax ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [rax + 0x78]
0x0000000000414102 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000417415 : mov dword ptr [rsp], edi ; call 0x4136a0
0x0000000000466e4c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f461 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000047650c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x000000000044a3d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000044a469 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000447d84 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004304b0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000444f60 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000448fbb : mov eax, 0x10 ; pop rbx ; ret
0x0000000000476249 : mov eax, 0x101 ; syscall
0x00000000004761c2 : mov eax, 0x106 ; syscall
0x000000000044b217 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047eaa9 : mov eax, 0x14 ; syscall
0x000000000044cf04 : mov eax, 0x15 ; syscall
0x00000000004242b0 : mov eax, 0x16 ; ret
0x000000000044a3c0 : mov eax, 0x18 ; syscall
0x000000000044cb63 : mov eax, 0x19 ; syscall
0x000000000044b4b0 : mov eax, 0x1c ; syscall
0x0000000000448fc9 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000489120 : mov eax, 0x26 ; syscall
0x0000000000485e90 : mov eax, 0x27 ; syscall
0x0000000000448fc2 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000476100 : mov eax, 0x3f ; syscall
0x0000000000448fd7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a795b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000044a8b7 : mov eax, 0x48 ; syscall
0x000000000044ab9b : mov eax, 0x4f ; syscall
0x0000000000458a18 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000400b19 : mov eax, 0x5d01002b ; ret
0x0000000000448fd0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044cb90 : mov eax, 0x63 ; syscall
0x0000000000476130 : mov eax, 0x66 ; syscall
0x0000000000476150 : mov eax, 0x68 ; syscall
0x0000000000476140 : mov eax, 0x6b ; syscall
0x0000000000449e30 : mov eax, 0x6c ; syscall
0x0000000000449e5e : mov eax, 0x77 ; syscall
0x00000000004ac774 : mov eax, 0x78000003 ; jb 0x4ac770 ; call qword ptr [rbp + 2]
0x0000000000448fad : mov eax, 0x80 ; pop rbx ; ret
0x000000000048a56f : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000046d671 : mov eax, 0x8900001d ; ret 0x349
0x0000000000487784 : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004018fd : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044b480 : mov eax, 0xa ; syscall
0x000000000044b450 : mov eax, 0xb ; syscall
0x000000000040dce2 : mov eax, 0xba ; syscall
0x00000000004759d0 : mov eax, 0xc9 ; syscall
0x000000000044cc15 : mov eax, 0xca ; syscall
0x000000000040dd10 : mov eax, 0xe ; syscall
0x000000000044a135 : mov eax, 0xe5 ; syscall
0x000000000040383c : mov eax, 0xe8000000 ; retf
0x000000000040dcee : mov eax, 0xea ; syscall
0x000000000045bc11 : mov eax, 0xf ; syscall
0x000000000045a67e : mov eax, 0xf883fffa ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004591dc : mov eax, 0xff50cee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000412d21 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412aa7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000413c23 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000412a6b : mov eax, 0xffffffff ; ret
0x0000000000476981 : mov eax, 1 ; leave ; ret
0x0000000000485075 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000417f92 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004873bd : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000004808a0 : mov eax, 1 ; pop rbx ; ret
0x000000000046952f : mov eax, 1 ; ret
0x000000000044a77a : mov eax, 1 ; syscall
0x0000000000475223 : mov eax, 2 ; ret
0x0000000000475481 : mov eax, 3 ; ret
0x000000000044aa4a : mov eax, 3 ; syscall
0x000000000048ec1f : mov eax, 4 ; jne 0x48ec40 ; ret
0x0000000000475491 : mov eax, 4 ; ret
0x000000000044a44e : mov eax, 4 ; syscall
0x00000000004754a1 : mov eax, 5 ; ret
0x000000000044a49c : mov eax, 5 ; syscall
0x00000000004754b1 : mov eax, 6 ; ret
0x000000000047616e : mov eax, 6 ; syscall
0x00000000004754c1 : mov eax, 7 ; ret
0x0000000000448fb4 : mov eax, 8 ; pop rbx ; ret
0x000000000044f710 : mov eax, 8 ; ret
0x000000000044a840 : mov eax, 8 ; syscall
0x000000000044b3ac : mov eax, 9 ; syscall
0x00000000004724dd : mov eax, dword ptr [rax + 0x130] ; call qword ptr [rax + 0x68]
0x0000000000472ab4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418178 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x418170 ; ret
0x0000000000482631 : mov eax, dword ptr [rax + 8] ; ret
0x000000000045a050 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x45a05a ; call rax
0x000000000045ba5f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004b4f01 : mov eax, dword ptr [rax] ; add ah, bl ; retf
0x00000000004b4ecd : mov eax, dword ptr [rax] ; add al, dh ; retf 0xfffc
0x00000000004b4eed : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; retf
0x000000000048b9d9 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048b9c1 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x00000000004808b9 : mov eax, dword ptr [rax] ; ret
0x000000000047d1a0 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000400c3b : mov eax, dword ptr [rbp - 4] ; leave ; ret
0x0000000000400b66 : mov eax, dword ptr [rbp - 8] ; add rax, 1 ; pop rbp ; ret
0x000000000047cfc1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004859e9 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000452059 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44e2b0
0x0000000000443334 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443346 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443356 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443366 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000443376 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043df4a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043f822 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000444ac0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000443300 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000444a11 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000443261 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000444a91 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000004432e1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047d7a6 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047290e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000419130 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000419158 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004918ed : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4918fc ; call rax
0x0000000000472ab1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000419481 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048dd31 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048dd81 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048ddc1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048de21 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048de11 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048ddd1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x00000000004888a1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4888b0 ; ret
0x0000000000419125 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041a021 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2e2a], eax ; ret
0x0000000000490085 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x490090 ; ret
0x00000000004900a0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4900b0 ; ret
0x00000000004902d0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4902e0 ; ret
0x000000000047f28c : mov eax, dword ptr [rdx + 4] ; ret
0x00000000004494e7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4494d0 ; ret
0x000000000043bb56 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000419111 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x419108 ; ret
0x0000000000486090 : mov eax, dword ptr [rip + 0x2378ea] ; ret
0x000000000047ff8b : mov eax, dword ptr [rip + 0x23d4d7] ; mov qword ptr [rsi], rax ; ret
0x000000000047ff1a : mov eax, dword ptr [rip + 0x23d550] ; ret
0x00000000004588c1 : mov eax, dword ptr [rip + 0x264671] ; ret
0x0000000000450361 : mov eax, dword ptr [rip + 0x26d681] ; ret
0x0000000000419461 : mov eax, dword ptr [rip + 0x2a0cb9] ; ret
0x000000000048ec72 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048bb01 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048bad4 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048baf1 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048ec91 : mov eax, dword ptr [rsi + 8] ; ret
0x0000000000471b1f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048ddf6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044b696 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401283 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000453fcc : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044aa8a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040e06d : mov eax, dword ptr [rsp + 8] ; call rax
0x000000000048782f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048b56a : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000004808b8 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041b6d0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044a6d9 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004234af : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000448ff2 : mov eax, eax ; ret
0x0000000000475844 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000449e02 : mov eax, eax ; syscall
0x0000000000474681 : mov eax, eax ; vzeroupper ; ret
0x0000000000410c9b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410db3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004106be : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412a12 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041353d : mov eax, ebp ; syscall
0x0000000000485003 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000489017 : mov eax, ebx ; jne 0x48902c ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004890fe : mov eax, ebx ; jne 0x489114 ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000411278 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004154b5 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b2b0 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041382b : mov eax, ebx ; pop rbx ; ret
0x0000000000484ec7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000400b94 : mov eax, ecx ; cdqe ; pop rbp ; ret
0x0000000000466d35 : mov eax, ecx ; ret
0x000000000040dcdb : mov eax, ecx ; syscall
0x0000000000413723 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b965 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000413754 : mov eax, edi ; ret
0x000000000041b565 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004113e0 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466dfe : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000411489 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410991 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000448ff6 : mov eax, edx ; pop rbx ; ret
0x000000000041b571 : mov eax, edx ; ret
0x000000000040137a : mov eax, edx ; syscall
0x00000000004149fa : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410b28 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000470a54 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ea2d : mov eax, esi ; pop rbx ; ret
0x0000000000410b63 : mov eax, esi ; ret
0x0000000000449df2 : mov eax, esi ; syscall
0x000000000046fb88 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041353c : mov eax, r13d ; syscall
0x0000000000449e01 : mov eax, r8d ; syscall
0x0000000000466d34 : mov eax, r9d ; ret
0x00000000004132de : mov eax, r9d ; syscall
0x00000000004a9854 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000494fdd : mov ebp, 0x9790fff9 ; stc ; call rax
0x000000000040112c : mov ebp, 0xace8002b ; ret
0x000000000049fe84 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a6e1d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000040110f : mov ebp, 0xc9e8002b ; ret
0x0000000000473e48 : mov ebp, 0xf80148c0 ; ret
0x00000000004740cc : mov ebp, 0xf80148c6 ; ret
0x00000000004a8586 : mov ebp, 0xfb67d10d ; ret
0x000000000046a90b : mov ebp, 0xfffff730 ; call qword ptr [r13 + 0x38]
0x000000000046b0a8 : mov ebp, 0xfffff730 ; call qword ptr [rbx + 0x38]
0x000000000046a07e : mov ebp, 0xfffff730 ; call rax
0x000000000046ad73 : mov ebp, 0xfffff730 ; mov rdx, r13 ; call qword ptr [rbx + 0x38]
0x000000000045edb5 : mov ebp, 0xfffff758 ; call qword ptr [rbx + 0x38]
0x000000000045f35f : mov ebp, 0xfffff758 ; call qword ptr [rcx + 0x38]
0x000000000045eb6c : mov ebp, 0xfffff758 ; call rax
0x000000000045ec02 : mov ebp, 0xfffff758 ; sub rdx, rsi ; call qword ptr [rbx + 0x38]
0x000000000046d079 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000465f55 : mov ebp, 0xffffff40 ; call rax
0x0000000000413537 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048e253 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000412c5b : mov ebp, dword ptr [rbx + 0x98] ; mov rdi, rbp ; call qword ptr [rbp + 0x20]
0x0000000000412106 : mov ebp, dword ptr [rdi + 0x98] ; mov rdi, r13 ; call qword ptr [r13 + 0x20]
0x0000000000411eb9 : mov ebp, dword ptr [rdi + 0x98] ; mov rdi, rbp ; call qword ptr [rbp + 0x20]
0x000000000044ba37 : mov ebp, ebx ; call rbp
0x000000000047fee3 : mov ebp, edx ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000435d77 : mov ebx, 0x46f00ff2 ; retf
0x00000000004308d4 : mov ebx, 0x4e6f0ff3 ; retf
0x00000000004308f2 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000004249b9 : mov ebx, 0x85fffdba ; ror byte ptr [rdi], 0x84 ; retf
0x000000000046cd23 : mov ebx, 0x89000025 ; ret 0x349
0x00000000004048ff : mov ebx, 0x8949ffff ; ret 0x149
0x000000000044cc74 : mov ebx, 0xafb8341 ; je 0x44cc7c ; ret
0x0000000000494eb5 : mov ebx, 0xbdd0fff9 ; stc ; call rax
0x0000000000494fd9 : mov ebx, 0xbde0fff9 ; stc ; call qword ptr [rax - 0x2f000669]
0x00000000004a6e1b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000000004255fb : mov ebx, 0xf480001 ; ret 0x66c3
0x00000000004a9bc4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000045bf59 : mov ebx, eax ; mov rdi, r14 ; call rbp
0x000000000045b456 : mov ebx, edi ; test rax, rax ; je 0x45b45f ; call rax
0x000000000044c03e : mov ebx, edi ; xor edx, edx ; xor esi, esi ; call rbp
0x000000000044b4f2 : mov ebx, edi ; xor esi, esi ; mov r12d, edx ; call rbp
0x0000000000475fc0 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000048060d : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000040dcd6 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047626c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a7a59 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a952e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000404adc : mov ecx, 0x8949ffff ; ret 0x149
0x0000000000494ef1 : mov ecx, 0xbb90fff9 ; stc ; call qword ptr [rax - 0x6f000643]
0x0000000000494eb1 : mov ecx, 0xbbd0fff9 ; stc ; call rax
0x00000000004764d0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000411641 : mov ecx, dword ptr [rax + 0x10] ; call qword ptr [rbp + 0x18]
0x0000000000412658 : mov ecx, dword ptr [rbx + 0x10] ; lea r8, [rsp + 0x10] ; call qword ptr [rbp + 0x18]
0x000000000041163d : mov ecx, dword ptr [rbx + 8] ; mov r9, qword ptr [rax + 0x10] ; call qword ptr [rbp + 0x18]
0x000000000043934c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000472a8b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043bb53 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a99e4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a9a10 ; retf 0x32dd
0x0000000000430a73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430c73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430e73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000444f90 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444fd1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004364e3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436473 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436403 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436325 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004362b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436245 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004361d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436165 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004360f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436085 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004365c5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444f71 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004124ec : mov ecx, dword ptr [rsp + 0x20] ; lea r8, [rsp + 0x38] ; call qword ptr [r13 + 8]
0x000000000044f64b : mov ecx, ebp ; call rbx
0x0000000000449b5d : mov ecx, ebx ; mov rdx, r14 ; mov rsi, r13 ; call rbp
0x00000000004b094d : mov ecx, edi ; call qword ptr [rbp + 1]
0x0000000000449ce2 : mov ecx, edi ; mov rsi, r13 ; mov rdi, r12 ; call rbp
0x0000000000447d52 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000474e45 : mov ecx, esi ; call rbx
0x000000000048d0fc : mov edi, 0x148015b ; retf
0x00000000004603ba : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000449ead : mov edi, 0xc7489066 ; ret 0xffc0
0x0000000000403a2e : mov edi, 0xdf8948ff ; call 0x4004c0
0x000000000044a524 : mov edi, 0xffffff9c ; syscall
0x000000000048da86 : mov edi, 1 ; call r14
0x000000000048d9dc : mov edi, 1 ; call rax
0x000000000040eb04 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x0000000000490d10 : mov edi, dword ptr [rbp + 0x10] ; add rdi, rbx ; call rbp
0x000000000044bacc : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000413536 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045edb4 : mov edi, dword ptr [rbp - 0x8a8] ; call qword ptr [rbx + 0x38]
0x000000000045f35e : mov edi, dword ptr [rbp - 0x8a8] ; call qword ptr [rcx + 0x38]
0x000000000045eb6b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000045ec01 : mov edi, dword ptr [rbp - 0x8a8] ; sub rdx, rsi ; call qword ptr [rbx + 0x38]
0x000000000046a90a : mov edi, dword ptr [rbp - 0x8d0] ; call qword ptr [r13 + 0x38]
0x000000000046b0a7 : mov edi, dword ptr [rbp - 0x8d0] ; call qword ptr [rbx + 0x38]
0x000000000046a07d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x000000000046ad72 : mov edi, dword ptr [rbp - 0x8d0] ; mov rdx, r13 ; call qword ptr [rbx + 0x38]
0x0000000000465f54 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048e0d1 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044b5b4 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e069 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044b58e : mov edi, dword ptr [rbx] ; call r12
0x000000000047d38f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047ff66 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47ff40 ; ret
0x00000000004220a1 : mov edi, dword ptr [rdi - 1] ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004a8846 : mov edi, dword ptr [rdx] ; ret
0x00000000004055de : mov edi, dword ptr [rip + 0x2b84b4] ; call 0x4220b0
0x0000000000488eef : mov edi, dword ptr [rsp + 0x10] ; call 0x485920
0x000000000048f9ae : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000045bf6f : mov edi, dword ptr [rsp + 0x18] ; call rbp
0x00000000004762ce : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x0000000000483154 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000451d95 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000451c60 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000452671 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000452849 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000452b33 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x0000000000453611 : mov edi, dword ptr [rsp + 0x38] ; call r13
0x000000000045316b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000045612f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000452379 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000452085 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004545aa : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000456d56 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000453fc7 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000401221 : mov edi, dword ptr [rsp + 0xc] ; call rbp
0x000000000044a931 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040127e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000044b691 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000047490a : mov edi, dword ptr [rsp] ; call rbp
0x000000000048e89c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004197be : mov edi, eax ; call qword ptr [r13 + 0xe0]
0x00000000004127f6 : mov edi, eax ; call qword ptr [rax + 8]
0x0000000000424314 : mov edi, eax ; call rcx
0x000000000040dce0 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000422833 : mov edi, ebp ; call 0x41ea70
0x000000000041210d : mov edi, ebp ; call qword ptr [r13 + 0x20]
0x0000000000471fcc : mov edi, ebp ; call qword ptr [r14 + 0x18]
0x000000000048a60e : mov edi, ebp ; call qword ptr [r14]
0x0000000000471111 : mov edi, ebp ; call qword ptr [rax + 0x38]
0x000000000048a6e2 : mov edi, ebp ; call qword ptr [rax]
0x00000000004115b6 : mov edi, ebp ; call qword ptr [rbp + 0x20]
0x0000000000470847 : mov edi, ebp ; call qword ptr [rbx + 0x90]
0x000000000048a7be : mov edi, ebp ; call qword ptr [rcx]
0x000000000045908c : mov edi, ebp ; call r12
0x000000000048f78c : mov edi, ebp ; call r14
0x0000000000423696 : mov edi, ebp ; call rax
0x000000000045bf97 : mov edi, ebp ; call rbp
0x0000000000474cf1 : mov edi, ebp ; call rbx
0x000000000044b3aa : mov edi, ebp ; mov eax, 9 ; syscall
0x00000000004132dc : mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000474e42 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040e0f9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000464142 : mov edi, ebx ; call 0x400438
0x000000000047399e : mov edi, ebx ; call 0x400478
0x0000000000403a31 : mov edi, ebx ; call 0x4004c0
0x0000000000418f57 : mov edi, ebx ; call qword ptr [r13 + 0x18]
0x0000000000414fc1 : mov edi, ebx ; call qword ptr [r13 + 0x20]
0x00000000004709f9 : mov edi, ebx ; call qword ptr [r13 + 0x38]
0x000000000041142f : mov edi, ebx ; call qword ptr [r13 + 0x58]
0x0000000000414f5e : mov edi, ebx ; call qword ptr [r13 + 0x90]
0x000000000041692b : mov edi, ebx ; call qword ptr [r14 + 0x18]
0x0000000000417c2e : mov edi, ebx ; call qword ptr [r14 + 0x20]
0x0000000000463d22 : mov edi, ebx ; call qword ptr [r14 + 0x38]
0x0000000000414196 : mov edi, ebx ; call qword ptr [r14 + 0x80]
0x000000000041891e : mov edi, ebx ; call qword ptr [r15 + 0x18]
0x0000000000413cf1 : mov edi, ebx ; call qword ptr [r15 + 0x40]
0x0000000000416b1b : mov edi, ebx ; call qword ptr [r15 + 0x58]
0x000000000041566b : mov edi, ebx ; call qword ptr [r15 + 0x78]
0x0000000000413f28 : mov edi, ebx ; call qword ptr [r15 + 0x80]
0x0000000000413c88 : mov edi, ebx ; call qword ptr [r15 + 0x90]
0x0000000000414c98 : mov edi, ebx ; call qword ptr [rax + 0x18]
0x0000000000414614 : mov edi, ebx ; call qword ptr [rax + 0x40]
0x0000000000414dda : mov edi, ebx ; call qword ptr [rax + 0x78]
0x00000000004140b7 : mov edi, ebx ; call qword ptr [rax + 0x80]
0x0000000000413ef3 : mov edi, ebx ; call qword ptr [rax + 0x90]
0x000000000041730c : mov edi, ebx ; call qword ptr [rbp + 0x18]
0x000000000041797d : mov edi, ebx ; call qword ptr [rbp + 0x20]
0x000000000041870d : mov edi, ebx ; call qword ptr [rbp + 0x30]
0x0000000000410938 : mov edi, ebx ; call qword ptr [rbp + 0x60]
0x00000000004114d6 : mov edi, ebx ; call qword ptr [rbp + 0x68]
0x000000000041490f : mov edi, ebx ; call qword ptr [rbp + 0x70]
0x0000000000412cd5 : mov edi, ebx ; call qword ptr [rbp + 0x80]
0x00000000004157a0 : mov edi, ebx ; call qword ptr [rbp + 0x88]
0x00000000004502a5 : mov edi, ebx ; call r13
0x000000000044f94e : mov edi, ebx ; call r14
0x0000000000414106 : mov edi, ebx ; call rax
0x00000000004503b6 : mov edi, ebx ; call rbp
0x000000000044a7ae : mov edi, ebx ; mov eax, 1 ; syscall
0x000000000041562b : mov edi, ebx ; mov edx, 1 ; call qword ptr [r15 + 0x80]
0x000000000044aa6c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000044c053 : mov edi, ebx ; mov esi, 1 ; call rbp
0x00000000004139cf : mov edi, ebx ; sub rdx, rsi ; call qword ptr [r13 + 0x70]
0x00000000004118fb : mov edi, ebx ; sub rdx, rsi ; call qword ptr [r15 + 0x70]
0x000000000044a6de : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000403b2f : mov edi, edi ; call 0x4205f0
0x0000000000411e05 : mov edi, edi ; call qword ptr [r14 + 0x80]
0x0000000000411fdb : mov edi, edi ; call qword ptr [r8 + 0x80]
0x000000000046daa4 : mov edi, edi ; call qword ptr [rax + 0x38]
0x0000000000412337 : mov edi, edi ; call qword ptr [rbp + 0x80]
0x00000000004120c9 : mov edi, edi ; call qword ptr [rbx + 0x80]
0x000000000046cad9 : mov edi, edi ; call qword ptr [rcx + 0x38]
0x0000000000411dc8 : mov edi, edi ; call qword ptr [rdx + 0x90]
0x0000000000472e18 : mov edi, edi ; call r12
0x0000000000412033 : mov edi, edi ; call rax
0x000000000044ff3b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000046c8cb : mov edi, edi ; sar r14, 2 ; mov rdx, r14 ; call qword ptr [rax + 0x38]
0x0000000000485341 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x485320 ; mov rax, rsi ; ret
0x0000000000449df0 : mov edi, edx ; mov eax, esi ; syscall
0x0000000000449dff : mov edi, edx ; mov eax, r8d ; syscall
0x00000000004197ec : mov edi, esi ; call qword ptr [r13 + 0xe8]
0x0000000000461307 : mov edi, esi ; call qword ptr [r15 + 0x38]
0x0000000000461007 : mov edi, esi ; call qword ptr [rax + 0x38]
0x00000000004641dc : mov edi, esi ; call qword ptr [rax - 0xc76b6ab]
0x000000000041964f : mov edi, esi ; call qword ptr [rbx + 0xe0]
0x000000000044ffe4 : mov edi, esi ; call r13
0x000000000045bf5c : mov edi, esi ; call rbp
0x00000000004591e3 : mov edi, esi ; call rbx
0x00000000004594c1 : mov edi, esi ; call rdx
0x000000000041ddb1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x41a050
0x000000000046222a : mov edi, esi ; mov rdx, qword ptr [rbp - 0x518] ; call qword ptr [r15 + 0x38]
0x000000000045c064 : mov edi, esi ; mov rdx, r12 ; call rbp
0x00000000004610e3 : mov edi, esi ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000460b9e : mov edi, esi ; sub r15, r12 ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000470c21 : mov edi, esp ; call qword ptr [r15 + 0x38]
0x0000000000419677 : mov edi, esp ; call qword ptr [rbx + 0xe8]
0x000000000048e7a4 : mov edi, esp ; call r15
0x0000000000449ce8 : mov edi, esp ; call rbp
0x0000000000472b40 : mov edi, esp ; call rbx
0x0000000000417a16 : mov edi, esp ; lea r15, [r14 + 1] ; call qword ptr [rbx + 0x18]
0x000000000044ab99 : mov edi, esp ; mov eax, 0x4f ; syscall
0x000000000044ba34 : mov edi, esp ; mov r13, rbx ; call rbp
0x00000000004132db : mov edi, r13d ; mov eax, r9d ; syscall
0x00000000004641db : mov edi, r14d ; call qword ptr [rax - 0xc76b6ab]
0x0000000000448ef6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x00000000004138a6 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000435cf7 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000430ad4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000430af2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000455bbe : mov edx, 0x89fffff3 ; retf 0xe283
0x000000000048c911 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000451a37 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000041562d : mov edx, 1 ; call qword ptr [r15 + 0x80]
0x000000000047f20c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000412331 : mov edx, 1 ; mov rdi, r15 ; call qword ptr [rbp + 0x80]
0x0000000000414d96 : mov edx, 1 ; mov rdi, rbx ; call qword ptr [rax + 0x80]
0x0000000000412ccf : mov edx, 1 ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x00000000004120c3 : mov edx, 2 ; mov rdi, r15 ; call qword ptr [rbx + 0x80]
0x0000000000414190 : mov edx, 2 ; mov rdi, rbx ; call qword ptr [r14 + 0x80]
0x0000000000415498 : mov edx, 2 ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x000000000045bcd4 : mov edx, 8 ; mov eax, ecx ; syscall
0x000000000046222d : mov edx, dword ptr [rbp - 0x518] ; call qword ptr [r15 + 0x38]
0x00000000004594ba : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048e8a0 : mov edx, dword ptr [rbp] ; call r12
0x00000000004859c9 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004139cb : mov edx, dword ptr [rbx + 0x40] ; mov rdi, rbx ; sub rdx, rsi ; call qword ptr [r13 + 0x70]
0x00000000004118f7 : mov edx, dword ptr [rbx + 0x40] ; mov rdi, rbx ; sub rdx, rsi ; call qword ptr [r15 + 0x70]
0x000000000043f81f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043df4d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004859dd : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048f789 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000444fb2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444fa3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444ff3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445003 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004304b1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000430870 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430101 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004455a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000436550 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004455f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000436391 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000445581 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000444f61 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000483159 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048d9d9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x000000000040dcec : mov edx, eax ; mov eax, 0xea ; syscall
0x000000000044aa6e : mov edx, eax ; mov eax, 3 ; syscall
0x000000000045e4f0 : mov edx, ebp ; call qword ptr [r13 + 0x38]
0x000000000046ad79 : mov edx, ebp ; call qword ptr [rbx + 0x38]
0x000000000048a609 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a6dd : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a7b9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a5c3 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000470c1b : mov edx, ebp ; mov rsi, r14 ; mov rdi, r12 ; call qword ptr [r15 + 0x38]
0x0000000000413f22 : mov edx, ebp ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r15 + 0x80]
0x00000000004699ae : mov edx, ebx ; call qword ptr [r13 + 0x38]
0x00000000004111e6 : mov edx, ebx ; mov rsi, r12 ; call qword ptr [r13 + 0x38]
0x00000000004761c0 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044cb61 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000460ba4 : mov edx, edi ; call qword ptr [rax + 0x38]
0x000000000041460e : mov edx, edi ; mov rsi, r14 ; mov rdi, rbx ; call qword ptr [rax + 0x40]
0x0000000000448a18 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000046c415 : mov edx, esi ; call qword ptr [rax + 0x38]
0x0000000000449b60 : mov edx, esi ; mov rsi, r13 ; call rbp
0x0000000000413ceb : mov edx, esi ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [r15 + 0x40]
0x000000000046dc17 : mov edx, esi ; mov rsi, r8 ; mov rdi, r15 ; call qword ptr [rcx + 0x38]
0x000000000045c067 : mov edx, esp ; call rbp
0x000000000047642d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000044b509 : mov edx, esp ; mov esi, 1 ; call rbp
0x000000000047399b : mov edx, esp ; mov rdi, rbx ; call 0x400478
0x0000000000415665 : mov edx, esp ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [r15 + 0x78]
0x000000000045c3b4 : mov edx, esp ; mov rsi, r13 ; mov rdi, rbx ; call rbp
0x000000000045bf91 : mov edx, esp ; mov rsi, r14 ; mov rdi, r13 ; call rbp
0x00000000004709f3 : mov edx, esp ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r13 + 0x38]
0x0000000000411429 : mov edx, esp ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r13 + 0x58]
0x000000000045bfac : mov edx, esp ; mov rsi, rbx ; mov rdi, r14 ; call rbp
0x0000000000411dff : mov edx, esp ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [r14 + 0x80]
0x000000000044b508 : mov edx, r12d ; mov esi, 1 ; call rbp
0x0000000000411dfe : mov edx, r12d ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [r14 + 0x80]
0x0000000000413f21 : mov edx, r13d ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r15 + 0x80]
0x000000000040dceb : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000456b59 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x00000000004540a2 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x00000000004b52b5 : mov es, word ptr [rax] ; add byte ptr [rax - 0x21], bh ; cld ; call qword ptr [rdx]
0x00000000004765f9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000004909ab : mov esi, 0x40 ; mov rdi, r13 ; call rbp
0x000000000045196c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a9806 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000047642f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a98a3 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004a798a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044ccf8 : mov esi, 0x80 ; syscall
0x0000000000450ac2 : mov esi, 0x83480147 ; ret
0x0000000000462ed1 : mov esi, 0x8900000b ; ret 0x349
0x000000000046c7d5 : mov esi, 0x8900002b ; ret 0x349
0x0000000000455d6e : mov esi, 0x89fffabe ; ret 0xe283
0x000000000047f319 : mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000046558e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004a6e1e : mov esi, 0xc2c1c0bf ; ret
0x0000000000457136 : mov esi, 0xe8000001 ; int1 ; stosb byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x56415741]
0x0000000000448e84 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000411bb7 : mov esi, 0xffffffff ; call qword ptr [r13 + 0x18]
0x0000000000413939 : mov esi, 0xffffffff ; call qword ptr [r14 + 0x18]
0x00000000004725ec : mov esi, 0xffffffff ; call qword ptr [rax + 0x18]
0x0000000000418f51 : mov esi, 0xffffffff ; mov rdi, rbx ; call qword ptr [r13 + 0x18]
0x0000000000418be0 : mov esi, 0xffffffff ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000418918 : mov esi, 0xffffffff ; mov rdi, rbx ; call qword ptr [r15 + 0x18]
0x0000000000414c92 : mov esi, 0xffffffff ; mov rdi, rbx ; call qword ptr [rax + 0x18]
0x0000000000417306 : mov esi, 0xffffffff ; mov rdi, rbx ; call qword ptr [rbp + 0x18]
0x00000000004187a3 : mov esi, 0xffffffff ; mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x000000000044b50b : mov esi, 1 ; call rbp
0x000000000046fdec : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000459f54 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x459f5e ; call rsi
0x000000000044bac9 : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000048e0cd : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000461000 : mov esi, dword ptr [rbp - 0x500] ; mov rdi, r14 ; call qword ptr [rax + 0x38]
0x000000000046d1d9 : mov esi, dword ptr [rbp - 0x520] ; call qword ptr [r14 + 0x38]
0x000000000046da9d : mov esi, dword ptr [rbp - 0x520] ; mov rdi, r15 ; call qword ptr [rax + 0x38]
0x00000000004616a0 : mov esi, dword ptr [rbp - 0x530] ; call qword ptr [rax + 0x38]
0x000000000044ff3e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048f785 : mov esi, dword ptr [rbx + 8] ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000401166 : mov esi, dword ptr [rbx] ; jne 0x401380 ; call qword ptr [rbx + 0x10]
0x000000000044ba31 : mov esi, dword ptr [rbx] ; mov rdi, r12 ; mov r13, rbx ; call rbp
0x000000000048f9ab : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048e855 : mov esi, dword ptr [rsi] ; call r12
0x0000000000447d83 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000040121d : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call rbp
0x000000000045cb5f : mov esi, dword ptr [rsp + 0x10] ; mov rdi, r14 ; call rbp
0x000000000044f646 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000451d90 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000423691 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000045266c : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000452844 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000452b2e : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045360c : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r13
0x0000000000453166 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045612a : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452374 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004545a5 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456d51 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004210a9 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x000000000046263f : mov esi, eax ; mov rdi, r14 ; call qword ptr [r15 + 0x38]
0x000000000046dc1a : mov esi, eax ; mov rdi, r15 ; call qword ptr [rcx + 0x38]
0x0000000000449b63 : mov esi, ebp ; call rbp
0x000000000044a7ac : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a6dc : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000045f52c : mov esi, ebp ; mov rdi, qword ptr [rbp - 0x8a8] ; call qword ptr [rcx + 0x38]
0x0000000000449ce5 : mov esi, ebp ; mov rdi, r12 ; call rbp
0x000000000045c061 : mov esi, ebp ; mov rdi, r14 ; mov rdx, r12 ; call rbp
0x0000000000424311 : mov esi, ebp ; mov rdi, rax ; call rcx
0x00000000004709f6 : mov esi, ebp ; mov rdi, rbx ; call qword ptr [r13 + 0x38]
0x000000000041142c : mov esi, ebp ; mov rdi, rbx ; call qword ptr [r13 + 0x58]
0x0000000000416928 : mov esi, ebp ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000413cee : mov esi, ebp ; mov rdi, rbx ; call qword ptr [r15 + 0x40]
0x0000000000415668 : mov esi, ebp ; mov rdi, rbx ; call qword ptr [r15 + 0x78]
0x0000000000413f25 : mov esi, ebp ; mov rdi, rbx ; call qword ptr [r15 + 0x80]
0x0000000000414dd7 : mov esi, ebp ; mov rdi, rbx ; call qword ptr [rax + 0x78]
0x000000000041490c : mov esi, ebp ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x000000000045c3b7 : mov esi, ebp ; mov rdi, rbx ; call rbp
0x00000000004132d9 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000422830 : mov esi, ebx ; mov rdi, r13 ; call 0x41ea70
0x000000000045bfaf : mov esi, ebx ; mov rdi, r14 ; call rbp
0x00000000004610e0 : mov esi, ebx ; mov rdi, r14 ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000411e02 : mov esi, ebx ; mov rdi, r15 ; call qword ptr [r14 + 0x80]
0x0000000000480610 : mov esi, ebx ; syscall
0x000000000045edb1 : mov esi, ecx ; mov rdi, qword ptr [rbp - 0x8a8] ; call qword ptr [rbx + 0x38]
0x000000000044b215 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000044a522 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000045eb68 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000471fc9 : mov esi, edi ; mov rdi, r13 ; call qword ptr [r14 + 0x18]
0x000000000047f273 : mov esi, edx ; cmp rcx, rsi ; jne 0x47f250 ; ret
0x000000000044a44c : mov esi, edx ; mov eax, 4 ; syscall
0x000000000044a49a : mov esi, edx ; mov eax, 5 ; syscall
0x000000000047616c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000465f51 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000045bf6c : mov esi, esi ; mov rdi, qword ptr [rsp + 0x18] ; call rbp
0x0000000000470c1e : mov esi, esi ; mov rdi, r12 ; call qword ptr [r15 + 0x38]
0x000000000048e7a1 : mov esi, esi ; mov rdi, r12 ; call r15
0x000000000045bf94 : mov esi, esi ; mov rdi, r13 ; call rbp
0x000000000047110e : mov esi, esi ; mov rdi, rbp ; call qword ptr [rax + 0x38]
0x0000000000414611 : mov esi, esi ; mov rdi, rbx ; call qword ptr [rax + 0x40]
0x00000000004111e9 : mov esi, esp ; call qword ptr [r13 + 0x38]
0x000000000048a60c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a6e0 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a7bc : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a5c6 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000046a907 : mov esi, esp ; mov rdi, qword ptr [rbp - 0x8d0] ; call qword ptr [r13 + 0x38]
0x000000000046b0a4 : mov esi, esp ; mov rdi, qword ptr [rbp - 0x8d0] ; call qword ptr [rbx + 0x38]
0x0000000000470844 : mov esi, esp ; mov rdi, rbp ; call qword ptr [rbx + 0x90]
0x0000000000414f5b : mov esi, esp ; mov rdi, rbx ; call qword ptr [r13 + 0x90]
0x0000000000413c85 : mov esi, esp ; mov rdi, rbx ; call qword ptr [r15 + 0x90]
0x0000000000417ca1 : mov esi, r13d ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000471fc8 : mov esi, r15d ; mov rdi, r13 ; call qword ptr [r14 + 0x18]
0x000000000040d42b : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041ec90 : mov esp, 0x3100075e ; call qword ptr [rax + 0x31]
0x000000000042c191 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042c1c1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042c1b1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000460b76 : mov esp, 0x8948006b ; ret 0x8148
0x00000000004187b2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000467f76 : mov esp, 0x9024 ; add al, ch ; call rdx
0x000000000045258d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000452a0f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000466069 : mov esp, 0xc748006b ; ret 0xc388
0x00000000004418d3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000470bf4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x0000000000400ae0 : mov esp, 0xe0ff006b ; nop dword ptr [rax] ; pop rbp ; ret
0x000000000042c27b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042c1a1 : mov esp, 0xf80148c0 ; ret
0x000000000042c692 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004655b9 : mov esp, 0xfffbdfe9 ; call qword ptr [rax + 0x8be0f41]
0x000000000048e257 : mov esp, ecx ; ret
0x000000000044b4f7 : mov esp, edx ; call rbp
0x000000000044bad0 : mov esp, esi ; call r15
0x000000000045381d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000457d9d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048b9c3 : mov qword ptr [r10], r8 ; ret
0x0000000000439340 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044ce30 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004715e8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471628 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472627 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044ce96 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044ceb0 : mov qword ptr [rax + 0x20], rsi ; ret
0x00000000004715ec : mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004726a9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000418234 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044ce34 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004859ec : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000048593c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004859e0 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048dd71 : mov qword ptr [rax], rdx ; ret
0x000000000047299a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047d260 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000046ca33 : mov qword ptr [rbp - 0x4e8], r8 ; call 0x449510
0x0000000000481bae : mov qword ptr [rbp - 0x70], rax ; mov eax, 0x15 ; syscall
0x000000000047dc00 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000459641 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000413826 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000048283d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000413c0e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000048054d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000482772 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488f84 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000489058 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004173b0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000041904c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004861b2 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048afb8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000410bf0 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000483a9e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000004457bc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000044512c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044510c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044516f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044518f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000445150 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000417292 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047c204 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047c1d6 : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004172c2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048ddb0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044577c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000004450cc : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044579c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000004450ec : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000436327 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004362b7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436247 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004361d7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044567a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000436167 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044501a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044569a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000004360f7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044502a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000004456ba : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000436087 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044503a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000484ec3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000483a23 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000048520d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000417296 : mov qword ptr [rdi + 8], rax ; ret
0x000000000045e093 : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000045e07b : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x0000000000448aea : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447d76 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048dd5b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042ff94 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffd2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000048398e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000043031b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435b37 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004304fb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435ab7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004306eb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435a37 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004308bc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004359a8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430abc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435918 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430cbc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435888 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000483919 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042ff98 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffd6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043014b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430247 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430193 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435bb7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004695c9 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045e078 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x000000000045e099 : mov qword ptr [rdi], r8 ; ret
0x00000000004838e8 : mov qword ptr [rdi], r9 ; ret
0x0000000000445606 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000444ff6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445006 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000445017 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000445027 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000445037 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444fe7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043608b : mov qword ptr [rdi], rcx ; ret
0x0000000000448c6e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004455f3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000436393 : mov qword ptr [rdi], rdx ; ret
0x000000000043933d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000447d7b : mov qword ptr [rdi], rsi ; ret
0x00000000004138a4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000444b9a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000044338a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000444bba : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x00000000004433aa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000444bda : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x00000000004433ca : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000444a6a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x00000000004432ba : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000004191bf : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000444a13 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000443263 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004859cc : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000419127 : mov qword ptr [rdx], rax ; ret
0x00000000004854f7 : mov qword ptr [rip + 0x237c2a], rax ; ret
0x000000000047fe24 : mov qword ptr [rip + 0x23d645], rax ; ret
0x00000000004205d5 : mov qword ptr [rip + 0x29a284], rax ; ret
0x000000000041a4fb : mov qword ptr [rip + 0x2a035e], rax ; ret
0x0000000000419ff6 : mov qword ptr [rip + 0x2a07f3], rax ; ret
0x0000000000419fce : mov qword ptr [rip + 0x2a0813], rax ; ret
0x0000000000419fae : mov qword ptr [rip + 0x2a082b], rax ; ret
0x0000000000419ea4 : mov qword ptr [rip + 0x2a099d], rax ; ret
0x0000000000419e94 : mov qword ptr [rip + 0x2a09a5], rax ; ret
0x0000000000419e82 : mov qword ptr [rip + 0x2a09a7], rdx ; ret
0x0000000000419e44 : mov qword ptr [rip + 0x2a09ad], rax ; ret
0x0000000000419e34 : mov qword ptr [rip + 0x2a09c5], rax ; ret
0x0000000000401902 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000045e000 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000045dc7c : mov qword ptr [rsi + 8], rdx ; jns 0x45dc44 ; xor eax, eax ; ret
0x00000000004793f0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000411ef2 : mov qword ptr [rsi], rax ; call qword ptr [rbp + 0x30]
0x000000000047ff91 : mov qword ptr [rsi], rax ; ret
0x000000000047f2d8 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x00000000004197b8 : mov qword ptr [rsp + 0x10], rax ; mov rdi, rax ; call qword ptr [r13 + 0xe0]
0x000000000041214b : mov qword ptr [rsp + 0x30], rax ; call qword ptr [r13 + 0x30]
0x000000000045205b : mov qword ptr [rsp + 0x50], rax ; call 0x44e2b0
0x000000000041d79e : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040968a : mov qword ptr [rsp + 8], rcx ; call 0x406190
0x0000000000411fd5 : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call qword ptr [r8 + 0x80]
0x000000000041202d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000048a762 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000414101 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000417414 : mov qword ptr [rsp], rdi ; call 0x4136a0
0x000000000045dc7b : mov qword ptr ds:[rsi + 8], rdx ; jns 0x45dc44 ; xor eax, eax ; ret
0x000000000045ba45 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000447d75 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044cb60 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000435cf6 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000430af1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x000000000045bcd3 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000435d76 : mov r11d, 0x46f00ff2 ; retf
0x00000000004308f1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000044b4f6 : mov r12d, edx ; call rbp
0x000000000044bacf : mov r12d, r14d ; call r15
0x000000000044ba36 : mov r13, rbx ; call rbp
0x000000000048e0cc : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000401165 : mov r14, qword ptr [rbx] ; jne 0x401380 ; call qword ptr [rbx + 0x10]
0x000000000048e0d0 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048b9c0 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048e37e : mov r8b, 0xe8 ; retf
0x0000000000450c3f : mov r8b, 0xe8 ; retf 0xffad
0x00000000004b4f00 : mov r8d, dword ptr [rax] ; add ah, bl ; retf
0x0000000000411640 : mov r9, qword ptr [rax + 0x10] ; call qword ptr [rbp + 0x18]
0x000000000044f64a : mov r9, r13 ; call rbx
0x0000000000474e44 : mov r9, r14 ; call rbx
0x0000000000449ce1 : mov r9, r15 ; mov rsi, r13 ; mov rdi, r12 ; call rbp
0x00000000004186c0 : mov rax, -1 ; ret
0x000000000045bc10 : mov rax, 0xf ; syscall
0x0000000000475460 : mov rax, 1 ; ret
0x0000000000475470 : mov rax, 2 ; ret
0x0000000000475480 : mov rax, 3 ; ret
0x0000000000475490 : mov rax, 4 ; ret
0x00000000004754a0 : mov rax, 5 ; ret
0x00000000004754b0 : mov rax, 6 ; ret
0x00000000004754c0 : mov rax, 7 ; ret
0x000000000048782e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047d7a5 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004724dc : mov rax, qword ptr [rax + 0x130] ; call qword ptr [rax + 0x68]
0x0000000000472ab3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000482630 : mov rax, qword ptr [rax + 8] ; ret
0x000000000045a04f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x45a05a ; call rax
0x000000000045ba5e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000048dd02 : mov rax, qword ptr [rax] ; ret
0x0000000000400b65 : mov rax, qword ptr [rbp - 8] ; add rax, 1 ; pop rbp ; ret
0x000000000047cfc0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004859e8 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000443260 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004918ec : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4918fc ; call rax
0x0000000000472ab0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000419480 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048dd30 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048dd80 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048ddc0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048de20 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048de10 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048ddd0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004888a0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4888b0 ; ret
0x0000000000419124 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000419110 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x419108 ; ret
0x000000000047ff19 : mov rax, qword ptr [rip + 0x23d550] ; ret
0x00000000004588c0 : mov rax, qword ptr [rip + 0x264671] ; ret
0x0000000000450360 : mov rax, qword ptr [rip + 0x26d681] ; ret
0x0000000000419460 : mov rax, qword ptr [rip + 0x2a0cb9] ; ret
0x000000000048ec71 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048bb00 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048bad3 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048baf0 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048ec90 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000048ddf5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044b695 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401282 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000453fcb : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040e06c : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048b569 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046fb87 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044ba5d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b6cf : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004234ae : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474680 : mov rax, r8 ; vzeroupper ; ret
0x0000000000410db2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414b36 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048df2a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000415581 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004154b4 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b2af : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041382a : mov rax, rbx ; pop rbx ; ret
0x000000000047f2db : mov rax, rcx ; ret
0x0000000000413722 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b964 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000413753 : mov rax, rdi ; ret
0x000000000041b564 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000475f0a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041af1c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000448ff5 : mov rax, rdx ; pop rbx ; ret
0x000000000041b570 : mov rax, rdx ; ret
0x0000000000410b27 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000041ea2c : mov rax, rsi ; pop rbx ; ret
0x0000000000410b62 : mov rax, rsi ; ret
0x000000000048e252 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000045bf58 : mov rbx, rax ; mov rdi, r14 ; call rbp
0x000000000045b455 : mov rbx, rdi ; test rax, rax ; je 0x45b45f ; call rax
0x000000000044c03d : mov rbx, rdi ; xor edx, edx ; xor esi, esi ; call rbp
0x000000000044b4f1 : mov rbx, rdi ; xor esi, esi ; mov r12d, edx ; call rbp
0x0000000000475fbf : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000048060c : mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000412657 : mov rcx, qword ptr [rbx + 0x10] ; lea r8, [rsp + 0x10] ; call qword ptr [rbp + 0x18]
0x000000000041163c : mov rcx, qword ptr [rbx + 8] ; mov r9, qword ptr [rax + 0x10] ; call qword ptr [rbp + 0x18]
0x0000000000444fd0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000449b5c : mov rcx, rbx ; mov rdx, r14 ; mov rsi, r13 ; call rbp
0x0000000000447d51 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000474909 : mov rdi, qword ptr [r12] ; call rbp
0x0000000000490d0f : mov rdi, qword ptr [r13 + 0x10] ; add rdi, rbx ; call rbp
0x000000000044c18b : mov rdi, qword ptr [r13] ; call r12
0x000000000040e068 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040eb03 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044bacb : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045edb3 : mov rdi, qword ptr [rbp - 0x8a8] ; call qword ptr [rbx + 0x38]
0x000000000045f35d : mov rdi, qword ptr [rbp - 0x8a8] ; call qword ptr [rcx + 0x38]
0x000000000045eb6a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046a909 : mov rdi, qword ptr [rbp - 0x8d0] ; call qword ptr [r13 + 0x38]
0x000000000046b0a6 : mov rdi, qword ptr [rbp - 0x8d0] ; call qword ptr [rbx + 0x38]
0x000000000046a07c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000465f53 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044b5b3 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044b58d : mov rdi, qword ptr [rbx] ; call r12
0x00000000004055dd : mov rdi, qword ptr [rip + 0x2b84b4] ; call 0x4220b0
0x0000000000488eee : mov rdi, qword ptr [rsp + 0x10] ; call 0x485920
0x000000000048f9ad : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000045bf6e : mov rdi, qword ptr [rsp + 0x18] ; call rbp
0x0000000000451d94 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000452670 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000452848 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000452b32 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453610 : mov rdi, qword ptr [rsp + 0x38] ; call r13
0x000000000045316a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045612e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452378 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004545a9 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456d55 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048e89b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000470c20 : mov rdi, r12 ; call qword ptr [r15 + 0x38]
0x0000000000419676 : mov rdi, r12 ; call qword ptr [rbx + 0xe8]
0x000000000048e7a3 : mov rdi, r12 ; call r15
0x0000000000449ce7 : mov rdi, r12 ; call rbp
0x0000000000472b3f : mov rdi, r12 ; call rbx
0x0000000000417a15 : mov rdi, r12 ; lea r15, [r14 + 1] ; call qword ptr [rbx + 0x18]
0x000000000044ab98 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x000000000044ba33 : mov rdi, r12 ; mov r13, rbx ; call rbp
0x0000000000422832 : mov rdi, r13 ; call 0x41ea70
0x000000000041210c : mov rdi, r13 ; call qword ptr [r13 + 0x20]
0x0000000000471fcb : mov rdi, r13 ; call qword ptr [r14 + 0x18]
0x000000000045908b : mov rdi, r13 ; call r12
0x000000000048f78b : mov rdi, r13 ; call r14
0x0000000000492c00 : mov rdi, r13 ; call rax
0x000000000045bf96 : mov rdi, r13 ; call rbp
0x000000000040e0f8 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004197eb : mov rdi, r14 ; call qword ptr [r13 + 0xe8]
0x0000000000461306 : mov rdi, r14 ; call qword ptr [r15 + 0x38]
0x0000000000461006 : mov rdi, r14 ; call qword ptr [rax + 0x38]
0x000000000041964e : mov rdi, r14 ; call qword ptr [rbx + 0xe0]
0x000000000044ffe3 : mov rdi, r14 ; call r13
0x000000000045bf5b : mov rdi, r14 ; call rbp
0x00000000004591e2 : mov rdi, r14 ; call rbx
0x00000000004594c0 : mov rdi, r14 ; call rdx
0x000000000045c063 : mov rdi, r14 ; mov rdx, r12 ; call rbp
0x00000000004610e2 : mov rdi, r14 ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000460b9d : mov rdi, r14 ; sub r15, r12 ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000403b2e : mov rdi, r15 ; call 0x4205f0
0x0000000000411e04 : mov rdi, r15 ; call qword ptr [r14 + 0x80]
0x0000000000411fda : mov rdi, r15 ; call qword ptr [r8 + 0x80]
0x000000000046daa3 : mov rdi, r15 ; call qword ptr [rax + 0x38]
0x0000000000412336 : mov rdi, r15 ; call qword ptr [rbp + 0x80]
0x00000000004120c8 : mov rdi, r15 ; call qword ptr [rbx + 0x80]
0x000000000046cad8 : mov rdi, r15 ; call qword ptr [rcx + 0x38]
0x0000000000411dc7 : mov rdi, r15 ; call qword ptr [rdx + 0x90]
0x0000000000472e17 : mov rdi, r15 ; call r12
0x0000000000412032 : mov rdi, r15 ; call rax
0x000000000044ff3a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004197bd : mov rdi, rax ; call qword ptr [r13 + 0xe0]
0x00000000004127f5 : mov rdi, rax ; call qword ptr [rax + 8]
0x0000000000424313 : mov rdi, rax ; call rcx
0x000000000040dcdf : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000471110 : mov rdi, rbp ; call qword ptr [rax + 0x38]
0x00000000004115b5 : mov rdi, rbp ; call qword ptr [rbp + 0x20]
0x0000000000470846 : mov rdi, rbp ; call qword ptr [rbx + 0x90]
0x0000000000423695 : mov rdi, rbp ; call rax
0x0000000000474cf0 : mov rdi, rbp ; call rbx
0x000000000044b3a9 : mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000474e41 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000464141 : mov rdi, rbx ; call 0x400438
0x000000000047399d : mov rdi, rbx ; call 0x400478
0x0000000000403a30 : mov rdi, rbx ; call 0x4004c0
0x0000000000418f56 : mov rdi, rbx ; call qword ptr [r13 + 0x18]
0x0000000000414fc0 : mov rdi, rbx ; call qword ptr [r13 + 0x20]
0x00000000004709f8 : mov rdi, rbx ; call qword ptr [r13 + 0x38]
0x000000000041142e : mov rdi, rbx ; call qword ptr [r13 + 0x58]
0x0000000000414f5d : mov rdi, rbx ; call qword ptr [r13 + 0x90]
0x000000000041692a : mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000417c2d : mov rdi, rbx ; call qword ptr [r14 + 0x20]
0x0000000000463d21 : mov rdi, rbx ; call qword ptr [r14 + 0x38]
0x0000000000414195 : mov rdi, rbx ; call qword ptr [r14 + 0x80]
0x000000000041891d : mov rdi, rbx ; call qword ptr [r15 + 0x18]
0x0000000000413cf0 : mov rdi, rbx ; call qword ptr [r15 + 0x40]
0x0000000000416b1a : mov rdi, rbx ; call qword ptr [r15 + 0x58]
0x000000000041566a : mov rdi, rbx ; call qword ptr [r15 + 0x78]
0x0000000000413f27 : mov rdi, rbx ; call qword ptr [r15 + 0x80]
0x0000000000413c87 : mov rdi, rbx ; call qword ptr [r15 + 0x90]
0x0000000000414c97 : mov rdi, rbx ; call qword ptr [rax + 0x18]
0x0000000000414613 : mov rdi, rbx ; call qword ptr [rax + 0x40]
0x0000000000414dd9 : mov rdi, rbx ; call qword ptr [rax + 0x78]
0x00000000004140b6 : mov rdi, rbx ; call qword ptr [rax + 0x80]
0x0000000000413ef2 : mov rdi, rbx ; call qword ptr [rax + 0x90]
0x000000000041730b : mov rdi, rbx ; call qword ptr [rbp + 0x18]
0x000000000041797c : mov rdi, rbx ; call qword ptr [rbp + 0x20]
0x000000000041870c : mov rdi, rbx ; call qword ptr [rbp + 0x30]
0x0000000000410937 : mov rdi, rbx ; call qword ptr [rbp + 0x60]
0x00000000004114d5 : mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x000000000041490e : mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x0000000000412cd4 : mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x000000000041579f : mov rdi, rbx ; call qword ptr [rbp + 0x88]
0x00000000004502a4 : mov rdi, rbx ; call r13
0x000000000044f94d : mov rdi, rbx ; call r14
0x0000000000414105 : mov rdi, rbx ; call rax
0x00000000004503b5 : mov rdi, rbx ; call rbp
0x000000000041562a : mov rdi, rbx ; mov edx, 1 ; call qword ptr [r15 + 0x80]
0x000000000044c052 : mov rdi, rbx ; mov esi, 1 ; call rbp
0x00000000004139ce : mov rdi, rbx ; sub rdx, rsi ; call qword ptr [r13 + 0x70]
0x00000000004118fa : mov rdi, rbx ; sub rdx, rsi ; call qword ptr [r15 + 0x70]
0x000000000048d9d8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048f788 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000046222c : mov rdx, qword ptr [rbp - 0x518] ; call qword ptr [r15 + 0x38]
0x000000000048e89f : mov rdx, qword ptr [rbp] ; call r12
0x00000000004859c8 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004859dc : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000430100 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000436390 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000483158 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000045c066 : mov rdx, r12 ; call rbp
0x000000000047399a : mov rdx, r12 ; mov rdi, rbx ; call 0x400478
0x0000000000415664 : mov rdx, r12 ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [r15 + 0x78]
0x000000000045c3b3 : mov rdx, r12 ; mov rsi, r13 ; mov rdi, rbx ; call rbp
0x000000000045bf90 : mov rdx, r12 ; mov rsi, r14 ; mov rdi, r13 ; call rbp
0x00000000004709f2 : mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r13 + 0x38]
0x0000000000411428 : mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r13 + 0x58]
0x000000000045bfab : mov rdx, r12 ; mov rsi, rbx ; mov rdi, r14 ; call rbp
0x000000000046ad78 : mov rdx, r13 ; call qword ptr [rbx + 0x38]
0x000000000048a608 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a6dc : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a7b8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a5c2 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000046c414 : mov rdx, r14 ; call qword ptr [rax + 0x38]
0x0000000000449b5f : mov rdx, r14 ; mov rsi, r13 ; call rbp
0x0000000000413cea : mov rdx, r14 ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [r15 + 0x40]
0x000000000046dc16 : mov rdx, r14 ; mov rsi, r8 ; mov rdi, r15 ; call qword ptr [rcx + 0x38]
0x0000000000460ba3 : mov rdx, r15 ; call qword ptr [rax + 0x38]
0x000000000041460d : mov rdx, r15 ; mov rsi, r14 ; mov rdi, rbx ; call qword ptr [rax + 0x40]
0x000000000045e4ef : mov rdx, rbp ; call qword ptr [r13 + 0x38]
0x0000000000470c1a : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r12 ; call qword ptr [r15 + 0x38]
0x00000000004699ad : mov rdx, rbx ; call qword ptr [r13 + 0x38]
0x00000000004111e5 : mov rdx, rbx ; mov rsi, r12 ; call qword ptr [r13 + 0x38]
0x00000000004761bf : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000448a17 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048e854 : mov rsi, qword ptr [r14] ; call r12
0x000000000048f9aa : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000459f53 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x459f5e ; call rsi
0x000000000046d1d8 : mov rsi, qword ptr [rbp - 0x520] ; call qword ptr [r14 + 0x38]
0x000000000046169f : mov rsi, qword ptr [rbp - 0x530] ; call qword ptr [rax + 0x38]
0x000000000044ff3d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044ba30 : mov rsi, qword ptr [rbx] ; mov rdi, r12 ; mov r13, rbx ; call rbp
0x000000000040121c : mov rsi, qword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call rbp
0x000000000045cb5e : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r14 ; call rbp
0x000000000044f645 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000423690 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004210a8 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004610df : mov rsi, r11 ; mov rdi, r14 ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x00000000004111e8 : mov rsi, r12 ; call qword ptr [r13 + 0x38]
0x000000000048a60b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048a6df : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048a7bb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x000000000048a5c5 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000449b62 : mov rsi, r13 ; call rbp
0x0000000000449ce4 : mov rsi, r13 ; mov rdi, r12 ; call rbp
0x000000000045c060 : mov rsi, r13 ; mov rdi, r14 ; mov rdx, r12 ; call rbp
0x0000000000413ced : mov rsi, r13 ; mov rdi, rbx ; call qword ptr [r15 + 0x40]
0x0000000000415667 : mov rsi, r13 ; mov rdi, rbx ; call qword ptr [r15 + 0x78]
0x0000000000414dd6 : mov rsi, r13 ; mov rdi, rbx ; call qword ptr [rax + 0x78]
0x000000000041490b : mov rsi, r13 ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x000000000045c3b6 : mov rsi, r13 ; mov rdi, rbx ; call rbp
0x000000000045bf6b : mov rsi, r14 ; mov rdi, qword ptr [rsp + 0x18] ; call rbp
0x0000000000470c1d : mov rsi, r14 ; mov rdi, r12 ; call qword ptr [r15 + 0x38]
0x000000000048e7a0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000045bf93 : mov rsi, r14 ; mov rdi, r13 ; call rbp
0x000000000047110d : mov rsi, r14 ; mov rdi, rbp ; call qword ptr [rax + 0x38]
0x0000000000414610 : mov rsi, r14 ; mov rdi, rbx ; call qword ptr [rax + 0x40]
0x000000000046263e : mov rsi, r8 ; mov rdi, r14 ; call qword ptr [r15 + 0x38]
0x000000000046dc19 : mov rsi, r8 ; mov rdi, r15 ; call qword ptr [rcx + 0x38]
0x000000000044a6db : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000424310 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004709f5 : mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r13 + 0x38]
0x000000000041142b : mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r13 + 0x58]
0x0000000000413f24 : mov rsi, rbp ; mov rdi, rbx ; call qword ptr [r15 + 0x80]
0x00000000004132d8 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000042282f : mov rsi, rbx ; mov rdi, r13 ; call 0x41ea70
0x000000000045bfae : mov rsi, rbx ; mov rdi, r14 ; call rbp
0x0000000000411e01 : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [r14 + 0x80]
0x000000000048060f : mov rsi, rbx ; syscall
0x000000000044a521 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000047f272 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47f250 ; ret
0x000000000044a44b : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000044a499 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000047616b : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000470843 : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rbx + 0x90]
0x0000000000414f5a : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [r13 + 0x90]
0x0000000000413c84 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [r15 + 0x90]
0x000000000048e256 : mov rsp, rcx ; ret
0x000000000046d6b6 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000439365 : mov word ptr [r9 - 2], cx ; ret
0x00000000004799ab : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x00000000004b0948 : mov word ptr [rbp], es ; add ah, ah ; mov ecx, edi ; call qword ptr [rbp + 1]
0x00000000004456fc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000044506c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445804 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000445154 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004365c7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004455c8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x0000000000444fa8 : mov word ptr [rdi + 4], dx ; ret
0x000000000044561a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x0000000000444fea : mov word ptr [rdi + 8], dx ; ret
0x0000000000448afa : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000447d94 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000043069c : mov word ptr [rdi - 2], cx ; ret
0x00000000004304b4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000430698 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000444f73 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000447ad2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004365cb : mov word ptr [rdi], cx ; ret
0x0000000000448c84 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000445583 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000436633 : mov word ptr [rdi], dx ; ret
0x0000000000439362 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000447d99 : mov word ptr [rdi], si ; ret
0x0000000000444ae8 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000443328 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000444a93 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000004432e3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000447ad5 : mov word ptr [rsi - 2], cx ; ret
0x000000000040492b : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000447d93 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000448267 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000046e15a : movabs al, byte ptr [0x840fc08548000000] ; ret
0x000000000045fd7a : movabs al, byte ptr [0x88c0c748000000d8] ; ret
0x000000000042408c : movabs al, byte ptr [0xffff61870f000000] ; call qword ptr [rax + 0x10b8db85]
0x00000000004a9943 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004a95a1 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004b6ba8 : movabs dword ptr [0xc01ffff00000503], eax ; retf
0x00000000004a79e7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004a829a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000040dccc : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000445040 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004458bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044520d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043629f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043622f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004361bf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043614f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044585d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004451ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004360df : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044587d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004451cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043606f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044589d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000004451ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043668f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043661f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004365af : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043653f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004364cf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043645f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004363ef : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043637f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043630f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000448a6d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000004357fb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043586b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004456d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000445054 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000445097 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445087 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000445108 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004450c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004450e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000445068 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445209 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004451a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004451c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004451e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043601a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000436074 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000445041 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004458be : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044520e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004362a0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436230 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004361c0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436150 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044585e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004451ae : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000004360e0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044587e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004451ce : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000436070 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044589e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000004451ee : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000436690 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436620 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004365b0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436540 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004364d0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436460 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004363f0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436380 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436310 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004489f5 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000448a6e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004357fc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043586c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435fa7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435f27 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435e97 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435e17 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435d97 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435d17 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435c97 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435c17 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435b97 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435b17 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435a97 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435a17 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435987 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004358f7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435867 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004456d5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000445055 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004450a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000445098 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445088 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000445109 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004450c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004450e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000445069 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044520a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004451aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004451ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004451ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043601b : movq qword ptr [rdi], mm0 ; ret
0x0000000000436075 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b0860 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], r8b ; lodsb al, byte ptr [rsi] ; test cl, bh ; call qword ptr [rcx + 1]
0x000000000045870c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000447cf5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000495d35 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax - 0x5b]
0x00000000004a86c2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000447ce7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004679df : movsb byte ptr [rdi], byte ptr [rsi] ; retf 3
0x00000000004a75a5 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004804fc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004a9bbd : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a9f55 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a9811 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000483942 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000495001 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rax - 0x5a]
0x0000000000495041 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x00000000004ab461 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rsp
0x00000000004a82a1 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048b964 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000481a2b : movsx eax, cl ; neg eax ; ret
0x0000000000481ad0 : movsx eax, dl ; sub eax, ecx ; ret
0x00000000004178ce : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044cb91 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004b2795 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], bl ; std ; call rdx
0x00000000004a8640 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x0000000000462185 : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x0000000000447d4d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000485e1d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000447987 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000447934 : movsxd rax, ecx ; ret
0x000000000045e4ed : movsxd rbp, ebp ; mov rdx, rbp ; call qword ptr [r13 + 0x38]
0x00000000004a946a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004699ab : movsxd rbx, ebx ; mov rdx, rbx ; call qword ptr [r13 + 0x38]
0x0000000000447979 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000424b86 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x00000000004479c7 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000476a93 : movsxd rdi, ebp ; call qword ptr [rax + 0x31f1894c]
0x0000000000494d21 : movsxd rdi, ecx ; call qword ptr [rax + 0x64]
0x0000000000495c95 : movsxd rdi, edx ; call qword ptr [rax - 0x6f00059b]
0x0000000000463d1f : movsxd rdx, ebp ; mov rdi, rbx ; call qword ptr [r14 + 0x38]
0x0000000000446dec : movsxd rsi, esi ; ret 0x7520
0x0000000000447eaf : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447f36 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447f37 : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000447eb0 : movups xmmword ptr [rbx], xmm4 ; ret
0x0000000000447eab : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447eaa : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447f32 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447c92 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447e19 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000447df6 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000447c8f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048b965 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000476401 : movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000488f5c : movzx eax, al ; neg eax ; ret
0x0000000000485829 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044f6c0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000416310 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048ebbe : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417511 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004139fe : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041959f : movzx eax, byte ptr [rax] ; ret
0x0000000000426a28 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042cdc0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c900 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426a43 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000417520 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413a10 : movzx eax, byte ptr [rdx] ; ret
0x0000000000416311 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000448f40 : movzx eax, cl ; pop rbx ; ret
0x000000000044744a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x447440 ; ret
0x00000000004474fa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4474f0 ; ret
0x000000000042dee4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000447d68 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000426a40 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042cdc3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dc33 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dc13 ; ret
0x0000000000426c01 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042b078 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042cd48 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000426a93 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000446e14 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000446e74 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000446e64 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446e54 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446e44 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446e34 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000446e24 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435fc0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042dc97 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000446dfb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004366a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042c903 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042c929 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435f40 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000436630 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000474906 : movzx esi, bl ; mov rdi, qword ptr [r12] ; call rbp
0x000000000047bb36 : mul byte ptr [rbx] ; add al, ch ; ret 0xb844
0x0000000000473f17 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044e253 : mul dword ptr [rsi] ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000044a3d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004195df : neg eax ; ret
0x0000000000467f78 : nop ; add byte ptr [rax], al ; add al, ch ; call rdx
0x00000000004356f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004aeee8 : nop ; add byte ptr [rax], al ; add byte ptr [rax], dh ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; retf
0x000000000044c1b7 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c1bf ; call r12
0x000000000042d34c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047663c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f7ff : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004888ff : nop ; add rsp, 8 ; ret
0x000000000048620f : nop ; call rax
0x000000000044ff40 : nop ; call rsi
0x0000000000495c9c : nop ; cli ; call qword ptr [rax - 0x6f000597]
0x0000000000495b38 : nop ; cli ; call qword ptr [rax]
0x000000000044ce9f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44ce90 ; ret
0x0000000000495120 : nop ; fyl2xp1 ; call qword ptr [rax - 0x25]
0x0000000000495ca0 : nop ; imul edi, edx, 0xfa6b90ff ; call qword ptr [rax - 0x6f000593]
0x000000000047c7ec : nop ; in al, dx ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000495cbc : nop ; ja 0x495cb9 ; call qword ptr [rax - 0x6f000587]
0x0000000000495cb4 : nop ; jae 0x495cb1 ; call qword ptr [rax - 0x6f00058b]
0x0000000000495cc8 : nop ; jge 0x495cc5 ; call qword ptr [rax]
0x00000000004b424c : nop ; jle 0x4b424f ; add byte ptr [rax + 0x28], ah ; cld ; call qword ptr [rax + 5]
0x0000000000495cc4 : nop ; jnp 0x495cc1 ; call qword ptr [rax + 0x10fffa7d]
0x0000000000400c89 : nop ; leave ; ret
0x00000000004aea80 : nop ; mov bl, 0xf6 ; call qword ptr [rdx]
0x0000000000494f28 : nop ; mov ch, 0xf9 ; push qword ptr [rax - 0x49] ; stc ; call qword ptr [rax - 0x47]
0x00000000004a468c : nop ; mov dl, 0xfc ; call rax
0x00000000004302cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000041a023 : nop ; mov dword ptr [rip + 0x2a2e2a], eax ; ret
0x00000000004304af : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000481bb1 : nop ; mov eax, 0x15 ; syscall
0x0000000000485e8f : nop ; mov eax, 0x27 ; syscall
0x00000000004760ff : nop ; mov eax, 0x3f ; syscall
0x000000000044cb8f : nop ; mov eax, 0x63 ; syscall
0x00000000004759cf : nop ; mov eax, 0xc9 ; syscall
0x000000000044cc14 : nop ; mov eax, 0xca ; syscall
0x000000000041793f : nop ; mov eax, 0xffffffff ; ret
0x000000000048089f : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000043086f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044559f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000472999 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000419ea3 : nop ; mov qword ptr [rip + 0x2a099d], rax ; ret
0x0000000000419e93 : nop ; mov qword ptr [rip + 0x2a09a5], rax ; ret
0x0000000000419e43 : nop ; mov qword ptr [rip + 0x2a09ad], rax ; ret
0x0000000000419e33 : nop ; mov qword ptr [rip + 0x2a09c5], rax ; ret
0x000000000048dd7f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048baef : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048ec8f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000044503f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000495c94 : nop ; movsxd rdi, edx ; call qword ptr [rax - 0x6f00059b]
0x0000000000494e6c : nop ; nop ; stc ; call qword ptr [rax + 0x10fff991]
0x0000000000495be0 : nop ; or al, 0xfa ; call rax
0x0000000000495cac : nop ; outsd dx, dword ptr [rsi] ; cli ; call qword ptr [rax - 0x6f00058f]
0x00000000004b604c : nop ; pushfq ; add byte ptr [rax], al ; jo 0x4b60a8 ; std ; call qword ptr [rdx]
0x00000000004004cf : nop ; ret
0x0000000000494e6d : nop ; stc ; call qword ptr [rax + 0x10fff991]
0x0000000000494d8d : nop ; stc ; call qword ptr [rax + 0x40fff98e]
0x0000000000494d79 : nop ; stc ; call qword ptr [rax - 0x6f]
0x0000000000495b48 : nop ; sub al, 0xfa ; call qword ptr [rax]
0x0000000000495b40 : nop ; sub eax, 0x2d10fffa ; cli ; call qword ptr [rax + 0x10fffa2c]
0x000000000041915f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000494e80 : nop ; xchg eax, ebx ; stc ; call qword ptr [rax]
0x0000000000494e70 : nop ; xchg eax, ecx ; stc ; call qword ptr [rax]
0x0000000000494fe0 : nop ; xchg eax, edi ; stc ; call rax
0x0000000000494e78 : nop ; xchg eax, edx ; stc ; call qword ptr [rax]
0x00000000004155af : nop ; xor eax, eax ; ret
0x000000000040ebc8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041aaf8 : nop dword ptr [rax + rax] ; call rax
0x0000000000486428 : nop dword ptr [rax + rax] ; call rbx
0x0000000000444f7b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400aa3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004125c8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a6b : nop dword ptr [rax + rax] ; ret
0x000000000044734b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047542c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000004242ad : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000044a3bc : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x0000000000472a95 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000044aabd : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x000000000044a83c : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041b56c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ae5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044956c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000041aaed : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000419271 : nop dword ptr [rax] ; ret
0x0000000000417a75 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000044a739 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000401374 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000486427 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040ebc7 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041aaf7 : nop word ptr [rax + rax] ; call rax
0x000000000048579a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000475212 : nop word ptr [rax + rax] ; ret
0x000000000044914a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042b1f7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044022f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b225 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000476522 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004764d1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041ea5c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000042a218 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000474858 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046cc7c : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000426a26 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041ea2a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000414103 : or al, 0x24 ; mov rdi, rbx ; call rax
0x00000000004804f9 : or al, 0x37 ; jae 0x4804a1 ; xor eax, eax ; ret
0x00000000004253a0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000044aa8d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000417413 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4136a0
0x0000000000401281 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000048e89a : or al, 0x48 ; mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000485be3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000046faa3 : or al, 0x7e ; ret 0x8944
0x0000000000400f10 : or al, 0x81 ; retf 0x440
0x0000000000459603 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x459610 ; ret
0x000000000045efcb : or al, 0x83 ; ret
0x0000000000423d96 : or al, 0x83 ; retf 0x8902
0x000000000046423a : or al, 0x89 ; ret 0xc689
0x0000000000448f6b : or al, 0x89 ; ret 0xe283
0x000000000043bb54 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004765f8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004762e7 : or al, 0xe8 ; ret
0x00000000004121e8 : or al, 0xe8 ; ret 0xec
0x000000000045753f : or al, 0xe9 ; ret
0x000000000047273c : or al, 0xeb ; ret 0x5590
0x000000000040407f : or al, 0xf ; retf 0xd289
0x00000000004361c3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000046799d : or al, 0xf6 ; ret 0xf01
0x0000000000495ba1 : or al, 0xfa ; call qword ptr [rax + 0xd]
0x0000000000495be1 : or al, 0xfa ; call rax
0x000000000041964a : or al, 1 ; add byte ptr [rax], al ; mov rdi, r14 ; call qword ptr [rbx + 0xe0]
0x0000000000423b51 : or al, 9 ; ret 0xbae9
0x000000000047480b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042b3d7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043edc1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b405 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048da82 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048daaa : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044b481 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000428d28 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040775d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040abec : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044d456 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b4d0b : or al, byte ptr [rcx] ; ret
0x000000000048dd1f : or al, ch ; add r8b, dil ; call qword ptr [rax + 0x1f0f2e66]
0x000000000040cf8b : or al, ch ; call qword ptr [rcx - 0x74b70001]
0x000000000040968e : or al, ch ; cld ; retf 0xffff
0x00000000004095ed : or al, ch ; popfq ; retf
0x0000000000409734 : or al, ch ; push rsi ; retf 0xffff
0x000000000040a9e7 : or al, ch ; ret
0x000000000040aec8 : or al, ch ; ret 0xffb2
0x00000000004071df : or al, ch ; retf
0x000000000041ddb7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x0000000000494c5d : or bh, cl ; call rax
0x0000000000425280 : or bh, dh ; ret 0
0x0000000000495469 : or bh, dl ; call qword ptr [rax + 0xa]
0x000000000049546d : or bh, dl ; call rax
0x000000000041b56a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046c221 : or bl, bpl ; retf
0x0000000000405f0d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048f49d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046c222 : or bl, ch ; retf
0x0000000000436383 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044b227 : or bl, dh ; ret
0x0000000000450bb6 : or byte ptr [r15], 0x8e ; ret 1
0x00000000004123c1 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e26d : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000451f63 : or byte ptr [r8 + 0xf], cl ; ret
0x000000000048520f : or byte ptr [r8 + 2], r15b ; ret
0x000000000041248f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000048003a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004432b8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000480525 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004798b2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b9e2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000485254 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x0000000000443377 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000004123c2 : or byte ptr [rax + 0x29], cl ; ret
0x000000000045e013 : or byte ptr [rax + 0x29], cl ; retf 0xc148
0x0000000000413bf5 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e26e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000453818 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000483738 : or byte ptr [rax + 0x39], cl ; retf
0x0000000000419599 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004adf0e : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000451f64 : or byte ptr [rax + 0xf], cl ; ret
0x000000000041a646 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004873bc : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047e321 : or byte ptr [rax + 1], cl ; ret
0x0000000000485210 : or byte ptr [rax + 2], bh ; ret
0x0000000000412490 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000046c21a : or byte ptr [rax - 0x73], cl ; or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x0000000000419ee3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044b694 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044c072 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe1441dd5
0x00000000004432bd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000048003b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044b2ae : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000046c21e : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x00000000004432b9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004803e0 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000411b0b : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004860d3 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046c21d : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x000000000048a02a : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047ff68 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x00000000004798b3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b9e3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000048a27e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x0000000000480526 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048a2d7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041fb70 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045c4b0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044ba42 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047c167 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047e7d2 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044d310 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000412aa6 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004731ae : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041b41d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041b20b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042b6a7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef61 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b5e5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000418237 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000451f0a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045be32 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045bcd5 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000448fb5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044f711 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044a841 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000428ea8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000420446 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x420410 ; ret
0x000000000042141c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000044061e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048dcff : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004865db : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000483691 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000004862f6 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x00000000004b58c4 : or byte ptr [rbp + 0x7d80000], dl ; std ; call qword ptr [rbx + 1]
0x000000000048dd6e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000483313 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041dbe2 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000492d13 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044b0ac : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044abc3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x00000000004ac5c8 : or byte ptr [rbp - 0xb], dl ; call qword ptr [rbx + 1]
0x0000000000487677 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004144c6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401ce5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044befe : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041eb27 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041eb26 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x0000000000463f17 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x0000000000410729 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000044ccf4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047c1d9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000484ffb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000485255 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048217d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000479d02 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479cd4 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000411488 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000411277 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048af55 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000470a53 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000046fa89 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000488e1b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000483ff0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000414a16 : or byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x000000000048a6db : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000411fd9 : or byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [r8 + 0x80]
0x0000000000412031 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000485002 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000045dc7f : or byte ptr [rcx - 0x3e], bh ; xor eax, eax ; ret
0x000000000044bf6b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000443378 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000047a665 : or byte ptr [rcx - 0x77], cl ; add r9b, r13b ; sar esp, 0xff ; call qword ptr [rax + 0x48d28548]
0x00000000004216b8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d58a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044b73a : or byte ptr [rcx - 0x77], cl ; retf
0x000000000044b706 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041dbe6 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041c07a : or byte ptr [rcx], dh ; call qword ptr [rbx + 0x50]
0x000000000041b7bb : or byte ptr [rcx], dh ; call qword ptr [rsi + 0x50]
0x000000000041559a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004115b2 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xef ; call qword ptr [rbp + 0x20]
0x000000000047c750 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047c6a0 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004554ab : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000455837 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000450bb7 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000040f042 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000476400 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000488f5b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000404074 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000041bcb6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000483c53 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000401341 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000472513 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x0000000000494c5c : or byte ptr [rdx], 0xf9 ; call rax
0x00000000004ac5c4 : or byte ptr [rdx], al ; add byte ptr [rax], al ; or byte ptr [rbp - 0xb], dl ; call qword ptr [rbx + 1]
0x00000000004ac8c4 : or byte ptr [rip - 0x77380000], al ; cmc ; call qword ptr [rdx]
0x0000000000495200 : or ch, 0xf9 ; call rax
0x00000000004589c1 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000411924 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000411217 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000424822 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045e3be : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000048782d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000407339 : or cl, ch ; imul edi, edi, -1 ; call qword ptr [rax + 0x18478b49]
0x000000000047c175 : or cl, ch ; ret
0x0000000000414796 : or cl, ch ; retf
0x00000000004802d9 : or cl, ch ; retf 0xfffd
0x00000000004a9bc2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004362a3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004900a5 : or dh, bl ; ret
0x00000000004a99ea : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000044dd0c : or dh, dh ; ret 0x8902
0x000000000041b807 : or dh, dh ; ret 0xf02
0x0000000000495479 : or dl, bh ; call qword ptr [rax + 8]
0x000000000049547d : or dl, bh ; call rax
0x000000000042141a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000040db5b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000429ae7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045b5be : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000441b3e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004733fb : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000489660 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042b5b7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004404cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b4f5 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000412a67 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044b3ad : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000042a4f8 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045f8d5 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004939d7 : or dword ptr [rax], ecx ; retf
0x0000000000483819 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a9333 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042e466 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000413c20 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000045dbdc : or dword ptr [rcx - 0x7d], 0xfffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000481a08 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x0000000000470192 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046d960 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044c472 : or dword ptr [rdi], esp ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a9b8e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000497270 : or dword ptr [rdx - 5], esi ; call qword ptr [rbp + 0x73]
0x0000000000425227 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000419e86 : or dword ptr [rdx], ebp ; add bl, dh ; ret
0x0000000000419f6b : or dword ptr [rdx], ebp ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000480896 : or dword ptr [rip + 0x23a94b], 1 ; pop rbx ; ret
0x00000000004b4d08 : or eax, 0x10a0303 ; ret
0x00000000004b4d60 : or eax, 0x1370303 ; ret
0x0000000000495221 : or eax, 0x1480fffa ; cli ; call qword ptr [rax]
0x0000000000445861 : or eax, 0x1c478d48 ; ret
0x00000000004b4cf8 : or eax, 0x34b0303 ; ret
0x00000000004b4d2c : or eax, 0x35b0303 ; ret
0x000000000046ffb2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046f81a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045b6ca : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441152 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000042b107 : or eax, 0x83480000 ; ret 0x4910
0x000000000043ea81 : or eax, 0x83480000 ; ret 0xe910
0x000000000042b135 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000428a28 : or eax, 0x894d0000 ; retf
0x0000000000491b02 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000475092 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x000000000045045c : or eax, 0xd830000 ; stosb byte ptr [rdi], al ; retf 0x26
0x000000000049fbd9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049fbe5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a9b73 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004550f5 : or eax, 0xea810000 ; ret 0
0x0000000000495ba5 : or eax, 0xed0fffa ; cli ; call qword ptr [rax + 0x10]
0x00000000004a9813 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000495be5 : or eax, 0xf50fffa ; cli ; call rax
0x0000000000436153 : or eax, 0xf7f0ff3 ; ret
0x000000000044a3dd : or eax, 0xffffffff ; ret
0x000000000042cd89 : or eax, 1 ; ret
0x000000000042b2e7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ec21 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b315 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004acee9 : or eax, dword ptr [rax] ; add byte ptr [rax - 0xa], ah ; call qword ptr [rdx]
0x00000000004acf11 : or eax, dword ptr [rax] ; add byte ptr [rax - 0xa], ch ; call qword ptr [rdx]
0x000000000044b451 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000428ba8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004adf10 : or eax, dword ptr [rdx] ; jae 0x4adf1e ; ret
0x00000000004b603a : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000419154 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004203d7 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; pop rdi ; retf 0x29
0x000000000041373d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000436313 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004155c6 : or ebx, esi ; ret
0x000000000042409f : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004144b7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000411438 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000424fdc : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000491b7f : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004834f3 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x00000000004902f2 : or edi, ecx ; call qword ptr [rax + 0x1f0f2e66]
0x000000000044b409 : or edx, 0x40 ; mov eax, ecx ; syscall
0x000000000046bcb1 : or edx, dword ptr [rbp] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000495471 : or edx, edi ; call qword ptr [rax + 9]
0x0000000000495475 : or edx, edi ; call rax
0x0000000000436233 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045be44 : or esi, ebx ; ret
0x0000000000419c2c : or esi, esi ; add eax, dword ptr [rcx] ; jne 0x419c38 ; call qword ptr [rbx + 0xe8]
0x0000000000413c21 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004ad71a : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000045dbdb : or qword ptr [rcx - 0x7d], 0xfffffffffffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x000000000044b408 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000436382 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436312 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004362a2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436232 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b6039 : or r8d, dword ptr [r10] ; ret 0xe0a
0x00000000004802d8 : or r9b, bpl ; retf 0xfffd
0x00000000004589c0 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b4d5f : or rax, 0x1370303 ; ret
0x00000000004b4cf7 : or rax, 0x34b0303 ; ret
0x00000000004b4d2b : or rax, 0x35b0303 ; ret
0x000000000046ffb1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046f819 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044a3dc : or rax, 0xffffffffffffffff ; ret
0x000000000042b387 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004adf0f : or rax, qword ptr [rdx] ; jae 0x4adf1e ; ret
0x00000000004ad719 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000425556 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000425416 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004111ea : out 0x41, al ; call qword ptr [rbp + 0x38]
0x0000000000470c22 : out 0x41, eax ; call qword ptr [rdi + 0x38]
0x000000000048e7a5 : out 0x41, eax ; call rdi
0x0000000000487369 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000046a908 : out 0x48, al ; mov edi, dword ptr [rbp - 0x8d0] ; call qword ptr [r13 + 0x38]
0x000000000046b0a5 : out 0x48, al ; mov edi, dword ptr [rbp - 0x8d0] ; call qword ptr [rbx + 0x38]
0x0000000000470845 : out 0x48, al ; mov edi, ebp ; call qword ptr [rbx + 0x90]
0x0000000000414f5c : out 0x48, al ; mov edi, ebx ; call qword ptr [r13 + 0x90]
0x0000000000413c86 : out 0x48, al ; mov edi, ebx ; call qword ptr [r15 + 0x90]
0x0000000000423c08 : out 0x48, eax ; sub eax, 0x10 ; ret
0x000000000044ba35 : out 0x49, eax ; mov ebp, ebx ; call rbp
0x0000000000460ba2 : out 0x4c, eax ; mov edx, edi ; call qword ptr [rax + 0x38]
0x0000000000417a17 : out 0x4d, eax ; lea edi, [rsi + 1] ; call qword ptr [rbx + 0x18]
0x00000000004a9400 : out 0x78, al ; jnp 0x4a945e ; retf
0x000000000048a60d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x000000000048a6e1 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x000000000048a7bd : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x000000000048a5c7 : out 0x89, al ; out dx, eax ; call rax
0x00000000004a7991 : out 0xb3, al ; retf 0xe80
0x00000000004a86c0 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a6e46 : out 0xe7, al ; call 0xffffffffed365936
0x000000000047342c : out 0xe8, al ; xchg al, dl ; clc ; dec dword ptr [rax + 1] ; ret
0x0000000000419d19 : out 0xe8, eax ; adc dword ptr [rdi - 2], esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000040582a : out 0xeb, eax ; retf 0x8b49
0x0000000000435b1a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435b9a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004aa3e8 : out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000049513d : out 0xf9, al ; call qword ptr [rax - 0x27]
0x000000000049515d : out 0xf9, al ; call qword ptr [rax]
0x000000000049517d : out 0xf9, al ; call rax
0x000000000049511d : out 0xf9, eax ; call qword ptr [rax + 0x50fff9d9]
0x000000000049509d : out 0xf9, eax ; call qword ptr [rax - 0x26]
0x00000000004950fd : out 0xf9, eax ; call rax
0x000000000046241c : out 0xff, eax ; call qword ptr [rax - 0x4ff7a75]
0x0000000000462ad2 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000413935 : out 1, eax ; add byte ptr [rax], al ; mov esi, 0xffffffff ; call qword ptr [r14 + 0x18]
0x0000000000476d3e : out 2, al ; add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000047b582 : out 4, eax ; add r15, rax ; call qword ptr [r15 + 0x60]
0x0000000000457d9e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000449b64 : out dx, al ; call rbp
0x00000000004a9817 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042523e : out dx, al ; jns 0x425241 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000040110e : out dx, al ; mov ebp, 0xc9e8002b ; ret
0x000000000044a7ad : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a6dd : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000043031a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000045f52d : out dx, al ; mov rdi, qword ptr [rbp - 0x8a8] ; call qword ptr [rcx + 0x38]
0x0000000000449ce6 : out dx, al ; mov rdi, r12 ; call rbp
0x000000000045c062 : out dx, al ; mov rdi, r14 ; mov rdx, r12 ; call rbp
0x0000000000424312 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044b3a8 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000004709f7 : out dx, al ; mov rdi, rbx ; call qword ptr [r13 + 0x38]
0x000000000041142d : out dx, al ; mov rdi, rbx ; call qword ptr [r13 + 0x58]
0x0000000000416929 : out dx, al ; mov rdi, rbx ; call qword ptr [r14 + 0x18]
0x0000000000413cef : out dx, al ; mov rdi, rbx ; call qword ptr [r15 + 0x40]
0x0000000000415669 : out dx, al ; mov rdi, rbx ; call qword ptr [r15 + 0x78]
0x0000000000413f26 : out dx, al ; mov rdi, rbx ; call qword ptr [r15 + 0x80]
0x0000000000414dd8 : out dx, al ; mov rdi, rbx ; call qword ptr [rax + 0x78]
0x000000000041490d : out dx, al ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x000000000045c3b8 : out dx, al ; mov rdi, rbx ; call rbp
0x0000000000435f2a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044037e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a9b72 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a93ff : out dx, al ; out 0x78, al ; jnp 0x4a945e ; retf
0x0000000000418719 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418771 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000422834 : out dx, eax ; call 0x41ea70
0x000000000041210e : out dx, eax ; call qword ptr [r13 + 0x20]
0x0000000000471fcd : out dx, eax ; call qword ptr [r14 + 0x18]
0x000000000048a60f : out dx, eax ; call qword ptr [r14]
0x0000000000471112 : out dx, eax ; call qword ptr [rax + 0x38]
0x000000000048a6e3 : out dx, eax ; call qword ptr [rax]
0x00000000004115b7 : out dx, eax ; call qword ptr [rbp + 0x20]
0x0000000000470848 : out dx, eax ; call qword ptr [rbx + 0x90]
0x000000000048a7bf : out dx, eax ; call qword ptr [rcx]
0x000000000045908d : out dx, eax ; call r12
0x000000000048f78d : out dx, eax ; call r14
0x0000000000423697 : out dx, eax ; call rax
0x000000000045bf98 : out dx, eax ; call rbp
0x0000000000474cf2 : out dx, eax ; call rbx
0x00000000004aa465 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044b3ab : out dx, eax ; mov eax, 9 ; syscall
0x00000000004132dd : out dx, eax ; mov eax, r9d ; syscall
0x000000000043014a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430246 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430192 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000474e43 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040e0fa : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000435faa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044047d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042d0b3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d0c8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d0dd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447593 : out dx, eax ; ret 0xf66
0x0000000000464145 : out dx, eax ; ret 0xfff9
0x0000000000447576 : out dx, eax ; retf 0x4466
0x00000000004a9b3b : out dx, eax ; retf 0xab0d
0x000000000042563a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042e5cc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042e5b5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042e59e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d05a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048b707 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043e38e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004459be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a824c : outsb dx, byte ptr [rsi] ; call qword ptr [rcx - 0x66]
0x000000000047960a : outsb dx, byte ptr [rsi] ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004a9fc3 : outsb dx, byte ptr [rsi] ; ja 0x4a9f49 ; ret 0x48f
0x000000000041c80e : outsb dx, byte ptr [rsi] ; loopne 0x41c83a ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047e320 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004a89f2 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a7d04 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a9338 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000419f92 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000495cad : outsd dx, dword ptr [rsi] ; cli ; call qword ptr [rax - 0x6f00058f]
0x00000000004257e8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000439d0e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042582e : outsd dx, dword ptr [rsi] ; fsub st(1), st(0) ; imul edi, edi, -1 ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004308d2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x0000000000430ad2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042e3cd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042e46d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042df92 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042e012 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x0000000000473f1a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042e3d2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004642dd : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041b15a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a86c6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000046705d : outsd dx, dword ptr [rsi] ; ret 0x5ce8
0x000000000041ab92 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000430a87 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000464306 : outsd dx, dword ptr [rsi] ; ret 0xb3e8
0x000000000042e472 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000467039 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x0000000000473f6a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000430952 : outsd dx, dword ptr [rsi] ; retf
0x000000000043dd39 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000430b52 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042d9ba : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042d4aa : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004642a4 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000466fff : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000044b0fd : outsd dx, dword ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a86c5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000475424 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047540f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004a9ac5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a9ac6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000448c56 : pextrw edi, mm0, 0x77 ; ret
0x000000000042c182 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42c1e0 ; xor eax, eax ; ret
0x000000000044cc25 : pop r10 ; ret
0x00000000004a9f4f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004026ee : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040068f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410259 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410c9e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dbe9 : pop r12 ; pop r13 ; ret
0x0000000000405ef4 : pop r12 ; ret
0x00000000004026f0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400691 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041025b : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410ca0 : pop r13 ; pop r14 ; ret
0x000000000040dbeb : pop r13 ; ret
0x00000000004026f2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400693 : pop r14 ; pop r15 ; ret
0x000000000041025d : pop r14 ; pop rbp ; ret
0x0000000000410ca2 : pop r14 ; ret
0x00000000004026f4 : pop r15 ; pop rbp ; ret
0x0000000000400695 : pop r15 ; ret
0x000000000041f494 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000004a9492 : pop rax ; call qword ptr [rdi + 0x4656ee7e]
0x000000000045fc99 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045ebcd : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbce0
0x00000000004ae9a8 : pop rax ; mov dl, 0xf6 ; call qword ptr [rsi]
0x0000000000412c8b : pop rax ; mov qword ptr [rsi], rax ; call qword ptr [rbp + 0x30]
0x00000000004127f4 : pop rax ; mov rdi, rax ; call qword ptr [rax + 8]
0x0000000000492d12 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000482776 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004163f4 : pop rax ; ret
0x00000000004a9ea3 : pop rax ; retf
0x000000000048fbb1 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004a9945 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000476248 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000487783 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004a82a0 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048965f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040068e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410c9d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dbe8 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405ef3 : pop rbp ; pop r12 ; ret
0x00000000004026f1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400692 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041025c : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000410ca1 : pop rbp ; pop r14 ; ret
0x0000000000485008 : pop rbp ; pop rbx ; ret
0x0000000000477d6f : pop rbp ; push rax ; std ; call qword ptr [rax - 0x1107a3a]
0x0000000000400aa8 : pop rbp ; ret
0x000000000047cf47 : pop rbp ; retf
0x0000000000485c71 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048d0fd : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a7298 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000448fa6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a7296 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000452fd1 : pop rbx ; in al, dx ; cli ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004808b7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000448ff1 : pop rbx ; mov eax, eax ; ret
0x00000000004113df : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466dfd : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000041b963 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000410b26 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000044c03c : pop rbx ; mov rbx, rdi ; xor edx, edx ; xor esi, esi ; call rbp
0x0000000000410258 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000458a1c : pop rbx ; pop r12 ; ret
0x000000000048b789 : pop rbx ; pop r14 ; ret
0x0000000000410cd4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dbe7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405ef2 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401ce6 : pop rbx ; pop rbp ; ret
0x0000000000400ed8 : pop rbx ; ret
0x00000000004aa580 : pop rbx ; ret 0x6f9
0x00000000004a7a5d : pop rbx ; retf
0x000000000044ef20 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405f0e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000042ad97 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a8246 : pop rcx ; cmp byte ptr [rbx + rdi*2], bh ; push -0x42 ; outsb dx, byte ptr [rsi] ; call qword ptr [rcx - 0x66]
0x0000000000404adb : pop rcx ; mov ecx, 0x8949ffff ; ret 0x149
0x000000000042b477 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045f623 : pop rcx ; sbb al, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044b59c : pop rcx ; std ; call qword ptr [rax + 0x87d8b48]
0x000000000045ddfb : pop rcx ; sub byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000440b0d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004306e9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004304f9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a983e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004a8801 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000416538 : pop rdi ; mov edx, 1 ; mov rdi, rbx ; call qword ptr [rbp + 0x80]
0x000000000044c212 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b739 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044b705 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000430319 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430149 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430245 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430191 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004026f5 : pop rdi ; pop rbp ; ret
0x0000000000400696 : pop rdi ; ret
0x000000000047099d : pop rdi ; ret 0xfffd
0x00000000004203dd : pop rdi ; retf 0x29
0x000000000042b976 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x000000000047c22d : pop rdx ; clc ; call qword ptr [rbp + 0x53]
0x0000000000495c85 : pop rdx ; cli ; push qword ptr [rax + 0x5c] ; cli ; call qword ptr [rax]
0x00000000004a9421 : pop rdx ; je 0x4a93e8 ; ret 0xacfc
0x0000000000495d1f : pop rdx ; jo 0x495cbf ; cli ; inc eax ; sahf ; cli ; call qword ptr [rax]
0x00000000004a8244 : pop rdx ; jp 0x4a82a0 ; cmp byte ptr [rbx + rdi*2], bh ; push -0x42 ; outsb dx, byte ptr [rsi] ; call qword ptr [rcx - 0x66]
0x00000000004a9533 : pop rdx ; leave ; retf
0x0000000000417305 : pop rdx ; mov esi, 0xffffffff ; mov rdi, rbx ; call qword ptr [rbp + 0x18]
0x00000000004aa3e7 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044cc24 : pop rdx ; pop r10 ; ret
0x0000000000482777 : pop rdx ; pop rbx ; ret
0x0000000000495d1e : pop rdx ; pop rdx ; jo 0x495cbf ; cli ; inc eax ; sahf ; cli ; call qword ptr [rax]
0x000000000044cc49 : pop rdx ; pop rsi ; ret
0x000000000044a6b5 : pop rdx ; ret
0x00000000004a9403 : pop rdx ; retf
0x00000000004a9f50 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000440a0e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b2259 : pop rsi ; add byte ptr [rax], al ; je 0x4b22d1 ; cli ; call qword ptr [rdx]
0x00000000004211a6 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041a4fe : pop rsi ; add ebp, dword ptr [rdx] ; add bl, dh ; ret
0x00000000004591b6 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000044c1e2 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x00000000004026f3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400694 : pop rsi ; pop r15 ; ret
0x000000000041025e : pop rsi ; pop rbp ; ret
0x0000000000410ca3 : pop rsi ; ret
0x000000000043e5a0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bc74 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f2a0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041d79b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000495c89 : pop rsp ; cli ; call qword ptr [rax]
0x000000000049726c : pop rsp ; jno 0x49726a ; dec dword ptr [rcx] ; jb 0x49726e ; call qword ptr [rbp + 0x73]
0x000000000045e4eb : pop rsp ; movsxd rbp, ebp ; mov rdx, rbp ; call qword ptr [r13 + 0x38]
0x00000000004026ef : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400690 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041025a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410c9f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040dbea : pop rsp ; pop r13 ; ret
0x0000000000401e93 : pop rsp ; ret
0x0000000000401f56 : pop rsp ; retf
0x00000000004834da : pop rsp ; retf 0x4df0
0x00000000004a95a7 : pop rsp ; sbb ebp, ebx ; retf
0x0000000000494d0d : pop rsp ; stc ; call qword ptr [rax + 0xfff95d]
0x0000000000470d6c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000410204 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046b96d : popfq ; call 0xffffffffc3cab972
0x0000000000495d21 : popfq ; cli ; inc eax ; sahf ; cli ; call qword ptr [rax]
0x000000000046b6af : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a952c : popfq ; jrcxz 0x4a94e8 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000048d2ce : popfq ; ret 0xf45
0x00000000004095ef : popfq ; retf
0x00000000004aa2e2 : popfq ; retf 0xde4f
0x0000000000436072 : psllq mm1, qword ptr [r15] ; jg 0x436087 ; ret
0x0000000000438b92 : psllq mm1, qword ptr [r15] ; jg 0x438ba7 ; ret
0x0000000000436073 : psllq mm1, qword ptr [rdi] ; jg 0x436087 ; ret
0x0000000000438b93 : psllq mm1, qword ptr [rdi] ; jg 0x438ba7 ; ret
0x0000000000445086 : psllq mm1, qword ptr [rdi] ; jg 0x445092 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004450e7 : psllq mm1, qword ptr [rdi] ; jg 0x4450f3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000495be9 : psubd mm7, mm7 ; rcl byte ptr [rax], 1 ; cli ; call qword ptr [rax + 0x12]
0x000000000045d8dc : psubq mm7, mm7 ; nop ; xor eax, eax ; ret
0x0000000000403734 : push -0x17000001 ; ret
0x00000000004a8304 : push -0x30 ; retf 0xe72e
0x00000000004a824a : push -0x42 ; outsb dx, byte ptr [rsi] ; call qword ptr [rcx - 0x66]
0x00000000004a798e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a9b35 : push -0x57d3205 ; call 0xffffffffab58662e
0x00000000004a7b41 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000045f0c2 : push -0x7c000003 ; ret
0x00000000004459a4 : push -0x9ffffff ; ret 0x7501
0x0000000000494d41 : push -7 ; call rax
0x00000000004b2dfd : push 0 ; add byte ptr [rax + 0x66], ah ; sti ; call rbp
0x0000000000472e11 : push 0 ; lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x00000000004a9335 : push 0x1b6e41b5 ; std ; retf
0x0000000000494ea0 : push 0x30fff9b2 ; mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000412a0d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000489054 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000047a685 : push 0x48b4901 ; and al, 0x83 ; ret
0x00000000004594bc : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004a9fc2 : push 0x6e ; ja 0x4a9f49 ; ret 0x48f
0x0000000000418555 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000416e37 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x000000000041817a : push 0x75c08548 ; ret
0x00000000004a98a2 : push 0xfd4cbe ; retf 0xf64
0x000000000049523f : push qword ptr [rax + 0x11] ; cli ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000494d07 : push qword ptr [rax + 0x20fff95a] ; pop rsp ; stc ; call qword ptr [rax + 0xfff95d]
0x0000000000495497 : push qword ptr [rax + 0x20fffa04] ; add al, 0xfa ; call qword ptr [rsi + 0x3cfffa03]
0x0000000000494c73 : push qword ptr [rax + 0x27] ; stc ; call qword ptr [rax - 0x4f0006d8]
0x0000000000495b5f : push qword ptr [rax + 0x29] ; cli ; call qword ptr [rax]
0x0000000000494c93 : push qword ptr [rax + 0x30] ; stc ; call qword ptr [rax + 0x30fff931]
0x0000000000494cdb : push qword ptr [rax + 0x33] ; stc ; call qword ptr [rax + 0x4c]
0x0000000000495737 : push qword ptr [rax + 0x38] ; cli ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000495427 : push qword ptr [rax + 0x40fffa13] ; adc edi, edx ; call rax
0x0000000000495747 : push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x0000000000495c87 : push qword ptr [rax + 0x5c] ; cli ; call qword ptr [rax]
0x0000000000494ffb : push qword ptr [rax + 0xfff9a3] ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rax - 0x5a]
0x000000000049504f : push qword ptr [rax + 0xfff9aa] ; lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax - 0x53]
0x00000000004951c7 : push qword ptr [rax + 0xfff9cf] ; sar ecx, 1 ; call qword ptr [rax - 0x2e]
0x0000000000495d2f : push qword ptr [rax + 0xfffaa2] ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax - 0x5b]
0x00000000004953c3 : push qword ptr [rax + rdx + 0x1044fffa] ; cli ; call rsp
0x0000000000495107 : push qword ptr [rax - 0x23] ; stc ; call qword ptr [rax - 0x21]
0x000000000049507f : push qword ptr [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x00000000004a466b : push qword ptr [rax - 0x2f00034e] ; mov cl, 0xfc ; call rax
0x000000000049520b : push qword ptr [rax - 0x2f] ; stc ; inc eax ; sar cl, cl ; call qword ptr [rax]
0x00000000004951b7 : push qword ptr [rax - 0x36] ; stc ; inc eax ; retf
0x0000000000495de7 : push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x0000000000495d8f : push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000495c57 : push qword ptr [rax - 0x3f0005bd] ; cli ; call rax
0x0000000000494f2b : push qword ptr [rax - 0x49] ; stc ; call qword ptr [rax - 0x47]
0x00000000004a469f : push qword ptr [rax - 0x4e] ; cld ; call rax
0x000000000049503f : push qword ptr [rax - 0x5b] ; stc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000494feb : push qword ptr [rax - 0x62] ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000049501f : push qword ptr [rax - 0x67] ; stc ; inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x0000000000495cfb : push qword ptr [rax - 0x6c] ; cli ; call qword ptr [rax]
0x0000000000495cdb : push qword ptr [rax - 0x79] ; cli ; call qword ptr [rax]
0x0000000000494b77 : push qword ptr [rax - 0x7f00070b] ; hlt ; clc ; call rax
0x0000000000495e4f : push qword ptr [rax - 6] ; cli ; call qword ptr [rax - 0x4f000506]
0x0000000000495e2f : push qword ptr [rax - 7] ; cli ; call qword ptr [rax - 0x4f000507]
0x0000000000495e0b : push qword ptr [rax - 8] ; cli ; call qword ptr [rax - 0x4f000508]
0x000000000049522f : push qword ptr [rax] ; adc edi, edx ; inc eax ; adc bh, dl ; call qword ptr [rax + 0x12]
0x0000000000495e03 : push qword ptr [rax] ; clc ; cli ; call qword ptr [rax - 8]
0x0000000000495e47 : push qword ptr [rax] ; cli ; cli ; call qword ptr [rax - 6]
0x0000000000495d6f : push qword ptr [rax] ; cli ; inc dword ptr [rax - 0xe] ; cli ; call qword ptr [rax - 0xe]
0x0000000000495727 : push qword ptr [rax] ; cmp bh, dl ; inc eax ; cmp edx, edi ; call qword ptr [rax + 0x39]
0x0000000000495083 : push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000048ec6d : push qword ptr [rax] ; jne 0x48ec98 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048facd : push qword ptr [rax] ; jne 0x48faf8 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494ea3 : push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000495b9f : push qword ptr [rax] ; or al, 0xfa ; call qword ptr [rax + 0xd]
0x0000000000495c77 : push qword ptr [rax] ; push rsp ; cli ; inc dword ptr [rax + 0x56] ; cli ; call qword ptr [rax + 0x58]
0x0000000000494c8b : push qword ptr [rax] ; stc ; call qword ptr [rax + 0x2f]
0x0000000000495e27 : push qword ptr [rax] ; stc ; cli ; call qword ptr [rax - 7]
0x0000000000495cd3 : push qword ptr [rax] ; test dl, bh ; call rax
0x0000000000494e8b : push qword ptr [rax] ; xchg eax, ebp ; stc ; inc eax ; xchg eax, ebp ; stc ; call qword ptr [rax - 0x6a]
0x0000000000495cf3 : push qword ptr [rax] ; xchg eax, ecx ; cli ; call rax
0x0000000000447328 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044b5d8 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b5b0 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c1e0 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c210 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042cd39 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x00000000004724e8 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000417f7d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047250e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004183e6 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047ff6b : push qword ptr [rbp - 0x2e] ; ret
0x00000000004187b0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004622e3 : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45e580
0x000000000044a3cc : push qword ptr [rbx + 1] ; ret
0x0000000000419c2a : push qword ptr [rbx + rcx - 0xa] ; add eax, dword ptr [rcx] ; jne 0x419c38 ; call qword ptr [rbx + 0xe8]
0x000000000047ad6f : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041655f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000455e73 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a2cd : push qword ptr [rcx] ; shr cl, cl ; retf
0x0000000000449dfb : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044aa56 : push qword ptr [rdi + 0x3f] ; ret
0x000000000044a786 : push qword ptr [rdi + 0x57] ; ret
0x000000000044a6b3 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045be42 : push qword ptr [rdi + 0xb] ; ret
0x000000000044a45a : push qword ptr [rdi + 3] ; ret
0x000000000044a749 : push qword ptr [rdi + 4] ; ret
0x000000000044a4a8 : push qword ptr [rdi + 5] ; ret
0x00000000004761ce : push qword ptr [rdi + 7] ; ret
0x000000000044b225 : push qword ptr [rdi + 8] ; ret
0x000000000044a81c : push qword ptr [rdi + 9] ; ret
0x0000000000476094 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004958bb : push qword ptr [rdi + rsi + 0x3744fffa] ; cli ; call rsp
0x00000000004952eb : push qword ptr [rdx + 0x13] ; cli ; inc dword ptr [rdx] ; adc edi, edx ; call qword ptr [rdx + 0x22fffa12]
0x00000000004957e3 : push qword ptr [rdx + 0x3a] ; cli ; inc dword ptr [rdx] ; cmp bh, dl ; call qword ptr [rdx + 0x22fffa39]
0x00000000004952fb : push qword ptr [rdx + 0x42fffa11] ; adc edx, edi ; call rdx
0x00000000004957f3 : push qword ptr [rdx + 0x42fffa38] ; cmp dl, bh ; call rdx
0x0000000000495813 : push qword ptr [rdx] ; xor eax, 0x34c2fffa ; cli ; call qword ptr [rdx + 0x34]
0x0000000000495287 : push qword ptr [rsi + 0x10] ; cli ; inc dword ptr [rsi] ; adc dl, bh ; call qword ptr [rsi + 0x26fffa0f]
0x0000000000478f9a : push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000495277 : push qword ptr [rsi] ; adc bh, dl ; inc esi ; adc edx, edi ; call qword ptr [rsi + 0x11]
0x000000000049576f : push qword ptr [rsi] ; cmp edx, edi ; inc esi ; cmp dl, bh ; call qword ptr [rsi + 0x38]
0x00000000004121e6 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x000000000044f7a9 : push qword ptr [rsp + rcx*8 - 0x18] ; call qword ptr [rsi]
0x00000000004173b2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a79ec : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000495bf0 : push rax ; adc bh, dl ; call rax
0x00000000004715ea : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000419161 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041d1ed : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000495bac : push rax ; adc dl, bh ; call rax
0x0000000000495bf8 : push rax ; adc eax, 0x16d0fffa ; cli ; call qword ptr [rax + 0x18]
0x0000000000495bb4 : push rax ; adc edi, edx ; call rax
0x0000000000455d2f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000495658 : push rax ; add al, 0xfa ; inc eax ; add edi, edx ; call qword ptr [rax + 3]
0x00000000004173b3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004246dc : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000494c63 : push rax ; and bh, cl ; call qword ptr [rax]
0x0000000000495bdc : push rax ; and bh, dl ; call qword ptr [rax - 0x2f0005f4]
0x0000000000401020 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000495c18 : push rax ; and edx, edi ; call rax
0x000000000045e36c : push rax ; and edx, edi ; dec dword ptr [rax + 0x29] ; ret
0x000000000045205f : push rax ; call 0x44e2b0
0x00000000004622e9 : push rax ; call 0x45e580
0x000000000044f6c8 : push rax ; call rbx
0x0000000000495e1b : push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; call qword ptr [rax]
0x0000000000495e08 : push rax ; clc ; cli ; push qword ptr [rax - 8] ; cli ; call qword ptr [rax - 0x4f000508]
0x0000000000495e4c : push rax ; cli ; cli ; push qword ptr [rax - 6] ; cli ; call qword ptr [rax - 0x4f000506]
0x0000000000495c67 : push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000471114 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000495d3f : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; inc dword ptr [rax - 0x57] ; cli ; call qword ptr [rax - 0x1f000556]
0x0000000000495147 : push rax ; fdiv st(1), st(0) ; call rax
0x0000000000495140 : push rax ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b0430 : push rax ; hlt ; clc ; call qword ptr [rax]
0x0000000000494d3b : push rax ; imul edi, ecx, 0xf96ae0ff ; call rax
0x0000000000495d5f : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000472b39 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a7a5a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000494eab : push rax ; mov bh, 0xf9 ; call rax
0x0000000000451971 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000049546c : push rax ; or bh, dl ; call rax
0x0000000000419ee2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041b20a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044befd : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041dbe5 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044dd0b : push rax ; or dh, dh ; ret 0x8902
0x000000000041e922 : push rax ; or dh, dh ; ret 0xf02
0x000000000049547c : push rax ; or dl, bh ; call rax
0x0000000000495ba4 : push rax ; or eax, 0xed0fffa ; cli ; call qword ptr [rax + 0x10]
0x0000000000495474 : push rax ; or edx, edi ; call rax
0x0000000000482f2e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000489105 : push rax ; pop rbx ; ret
0x0000000000495be8 : push rax ; psubd mm7, mm7 ; rcl byte ptr [rax], 1 ; cli ; call qword ptr [rax + 0x12]
0x0000000000478f99 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000451973 : push rax ; push rsp ; ret
0x00000000004aa300 : push rax ; retf
0x0000000000495bcc : push rax ; sbb al, 0xfa ; call rax
0x000000000041c544 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000419156 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000472629 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000495c00 : push rax ; sbb dl, bh ; call rax
0x0000000000495c08 : push rax ; sbb edi, edx ; call rax
0x0000000000495bc4 : push rax ; sbb edx, edi ; call rax
0x00000000004acd40 : push rax ; sbb esi, esi ; call rsp
0x0000000000494ced : push rax ; stc ; call qword ptr [rax]
0x0000000000495e3f : push rax ; stc ; cli ; call qword ptr [rax]
0x0000000000495e2c : push rax ; stc ; cli ; push qword ptr [rax - 7] ; cli ; call qword ptr [rax - 0x4f000507]
0x0000000000494c70 : push rax ; stc ; push qword ptr [rax + 0x27] ; stc ; call qword ptr [rax - 0x4f0006d8]
0x0000000000477d70 : push rax ; std ; call qword ptr [rax - 0x1107a3a]
0x0000000000494c83 : push rax ; sub edi, ecx ; call qword ptr [rax]
0x000000000049500b : push rax ; test al, 0xf9 ; inc dword ptr [rax - 0x56] ; stc ; call qword ptr [rax - 0x1f000655]
0x0000000000494e97 : push rax ; xchg eax, esi ; stc ; call qword ptr [rax + 0x68fff997]
0x0000000000494e94 : push rax ; xchg eax, esi ; stc ; push rax ; xchg eax, esi ; stc ; call qword ptr [rax + 0x68fff997]
0x00000000004a79ed : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000048ab8a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048d632 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004806d8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004ac5c9 : push rbp ; cmc ; call qword ptr [rbx + 1]
0x00000000004111ed : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004796df : push rbp ; insd dword ptr [rdi], dx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004114d4 : push rbp ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x00000000004a95a0 : push rbp ; movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x000000000048217c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000475fbd : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004b697e : push rbp ; ret
0x0000000000411796 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040116f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048054f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000485827 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413bf8 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000448515 : push rbx ; jb 0x44851d ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000472522 : push rbx ; je 0x472580 ; pop rbp ; pop r12 ; ret
0x00000000004725ae : push rbx ; je 0x47260c ; pop rbp ; pop r12 ; ret
0x0000000000475fbe : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004139cc : push rbx ; mov rdi, rbx ; sub rdx, rsi ; call qword ptr [r13 + 0x70]
0x00000000004118f8 : push rbx ; mov rdi, rbx ; sub rdx, rsi ; call qword ptr [r15 + 0x70]
0x0000000000413bf4 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044c10f : push rbx ; ret
0x00000000004a941c : push rbx ; xchg eax, edx ; jae 0x4a93f3 ; push rsi ; pop rdx ; je 0x4a93e8 ; ret 0xacfc
0x000000000041f802 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041bb3b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041beb7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004b1565 : push rcx ; add byte ptr [rax], al ; js 0x4b1537 ; stc ; call qword ptr [rbp + 0xb]
0x000000000044c5ab : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a86a5 : push rcx ; call qword ptr [rsi]
0x0000000000487be9 : push rcx ; cld ; call qword ptr [rax - 0x7a53b275]
0x000000000045f536 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004394cd : push rcx ; jl 0x439518 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000439634 : push rcx ; jl 0x43967f ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000479d01 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479cd3 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004164fb : push rcx ; ret 0xffff
0x000000000041a64d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000040409e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044b998 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040408e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004455ca : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000004361d9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b1af5 : push rdi ; add byte ptr [rax], al ; cmp bh, bh ; stc ; call qword ptr [rax]
0x0000000000478c44 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044567c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045ec0f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042ffd8 : push rdi ; clc ; ret
0x0000000000430150 : push rdi ; cld ; ret
0x0000000000430c77 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435ab9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000470c25 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000435a39 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043588a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004172c4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043591a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040407e : push rdi ; or al, 0xf ; retf 0xd289
0x0000000000484ffa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488e1a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000485001 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000404073 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041b806 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000445860 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042e3ce : push rdi ; ret
0x000000000042e46e : push rdi ; ret 0xff3
0x0000000000420d70 : push rdi ; retf
0x000000000042e013 : push rdi ; retf 0xcab2
0x0000000000419f70 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045ec13 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004040b2 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000430e77 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043069a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044c43c : push rdi ; sti ; call qword ptr [rax + 0x48ff3155]
0x0000000000430a77 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000444e05 : push rdi ; syscall
0x0000000000473f1b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042c188 : push rdi ; xor eax, eax ; ret
0x00000000004255ca : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000494d8b : push rdx ; nop ; stc ; call qword ptr [rax + 0x40fff98e]
0x00000000004882c1 : push rdx ; push rsi ; and eax, dword ptr [rax] ; jne 0x4882ed ; ret
0x000000000045196d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004959e4 : push rdx ; xor edx, edi ; call rdx
0x000000000042d0b4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447bb9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x447c07 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000436471 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004364e1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000445015 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000436401 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000444fb3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042d0c9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004882c2 : push rsi ; and eax, dword ptr [rax] ; jne 0x4882ed ; ret
0x0000000000430102 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430871 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004304a5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430685 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430865 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004302c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000495c7d : push rsi ; cli ; call qword ptr [rax + 0x58]
0x00000000004a9fc0 : push rsi ; cli ; push 0x6e ; ja 0x4a9f49 ; ret 0x48f
0x0000000000446e66 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000045948e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000446e56 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000446e26 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000045e012 : push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000045dc7e : push rsi ; or byte ptr [rcx - 0x3e], bh ; xor eax, eax ; ret
0x00000000004a9420 : push rsi ; pop rdx ; je 0x4a93e8 ; ret 0xacfc
0x00000000004a7366 : push rsi ; ret
0x00000000004203e6 : push rsi ; retf 0x29
0x0000000000409736 : push rsi ; retf 0xffff
0x000000000046a131 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000494cfd : push rsi ; stc ; call rax
0x00000000004b6051 : push rsi ; std ; call qword ptr [rdx]
0x00000000004591ba : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045f023 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000446e36 : push rsi ; sub eax, edx ; ret
0x00000000004a79e8 : push rsi ; xchg eax, ebp ; jge 0x4a79c5 ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042d0de : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000476431 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000048315a : push rsp ; and al, 0x10 ; call rdx
0x000000000041d858 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041ddb5 : push rsp ; and al, 8 ; call 0x41a050
0x0000000000414a14 : push rsp ; and al, 8 ; mov rsi, r13 ; mov rdi, rbx ; call qword ptr [rbp + 0x70]
0x00000000004ae710 : push rsp ; and eax, dword ptr [rax] ; add byte ptr [rdx + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x0000000000495c79 : push rsp ; cli ; inc dword ptr [rax + 0x56] ; cli ; call qword ptr [rax + 0x58]
0x00000000004acf10 : push rsp ; or eax, dword ptr [rax] ; add byte ptr [rax - 0xa], ch ; call qword ptr [rdx]
0x0000000000451974 : push rsp ; ret
0x0000000000489bfc : push rsp ; ret 0x4808
0x0000000000482081 : push rsp ; ret 0xeb30
0x00000000004835d5 : push rsp ; retf 0x48f8
0x0000000000403fc7 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004a9bea : push rsp ; syscall
0x000000000043e260 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000463416 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044c187 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c18f ; call r12
0x00000000004b6025 : pushfq ; add byte ptr [rax], al ; enter -0x2ac, -1 ; ret
0x00000000004b604d : pushfq ; add byte ptr [rax], al ; jo 0x4b60a8 ; std ; call qword ptr [rdx]
0x000000000045301a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000047a87f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004179eb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbce0
0x000000000043ef60 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b134 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000004b2258 : pushfq ; pop rsi ; add byte ptr [rax], al ; je 0x4b22d1 ; cli ; call qword ptr [rdx]
0x000000000048d307 : pushfq ; ret 0xf45
0x000000000041dce0 : pushfq ; retf
0x0000000000495025 : pushfq ; stc ; call qword ptr [rax - 0x1f000663]
0x00000000004b0e21 : pushfq ; stc ; call qword ptr [rbx]
0x000000000040ebab : rcl byte ptr [rax + 0x48006bc3], 0x39 ; ret
0x000000000046122a : rcl byte ptr [rax + rax], 1 ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx + 0xf]
0x0000000000495bec : rcl byte ptr [rax], 1 ; cli ; call qword ptr [rax + 0x12]
0x0000000000495bf4 : rcl byte ptr [rbx], 1 ; cli ; call qword ptr [rax + 0x15]
0x0000000000495bb0 : rcl byte ptr [rcx], 1 ; cli ; call qword ptr [rax + 0x13]
0x0000000000495bc0 : rcl byte ptr [rdi], 1 ; cli ; call qword ptr [rax + 0x19]
0x00000000004a9d31 : rcl byte ptr [rdi], cl ; retf
0x0000000000495bb8 : rcl byte ptr [rdx + rdi*8], 1 ; call qword ptr [rax + 0x16]
0x0000000000495cf8 : rcl byte ptr [rdx - 0x6b8f0006], 1 ; cli ; call qword ptr [rax]
0x0000000000495234 : rcl byte ptr [rdx], 0xfa ; call qword ptr [rax + 0x12]
0x0000000000495bfc : rcl byte ptr [rsi], 1 ; cli ; call qword ptr [rax + 0x18]
0x0000000000495210 : rcl dl, 0xf9 ; call qword ptr [rax]
0x00000000004246db : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004a985a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a941f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a93e8 ; ret 0xacfc
0x00000000004a9859 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a941b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a93e8 ; ret 0xacfc
0x0000000000485652 : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x0000000000473d03 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405f10 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004113e1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000466dff : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000485007 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000450902 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041559c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ede6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048df38 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000041148a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000410992 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000495c04 : rcr byte ptr [rcx], 1 ; cli ; call qword ptr [rax + 0x1b]
0x00000000004a983d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000495c14 : rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rax + 0x21]
0x0000000000495c0c : rcr byte ptr [rdx + rdi*8], 1 ; call qword ptr [rax + 0x1e]
0x0000000000495bc8 : rcr byte ptr [rdx], 1 ; cli ; call qword ptr [rax + 0x1c]
0x0000000000495bd0 : rcr byte ptr [rip + 0x1f50fffa], 1 ; cli ; call rax
0x0000000000495100 : rcr cl, 1 ; stc ; call qword ptr [rax + 0x70fff9db]
0x00000000004832b9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a9b91 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000447cf4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000447ce6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000448a1a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041fae1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000400416 : ret
0x00000000004006c7 : ret 0
0x000000000049ffe0 : ret 0x10
0x000000000047c16a : ret 0x101
0x00000000004102ea : ret 0x10b
0x0000000000484fdc : ret 0x114d
0x00000000004589c4 : ret 0x1176
0x00000000004806dc : ret 0x1272
0x000000000047d273 : ret 0x13e9
0x000000000048b7a1 : ret 0x145
0x0000000000484486 : ret 0x1474
0x0000000000479d08 : ret 0x1475
0x00000000004764e1 : ret 0x1477
0x0000000000446dc8 : ret 0x148
0x0000000000404904 : ret 0x149
0x000000000043988f : ret 0x14d
0x0000000000424a45 : ret 0x15e8
0x000000000040adea : ret 0x160
0x000000000040aaea : ret 0x163
0x000000000046d081 : ret 0x1674
0x000000000040a4ea : ret 0x169
0x000000000040a3ea : ret 0x16a
0x000000000040a1ea : ret 0x16c
0x000000000044a2ce : ret 0x16e9
0x0000000000427fba : ret 0x17
0x000000000042c666 : ret 0x1776
0x000000000040abf2 : ret 0x18
0x00000000004397cc : ret 0x180f
0x000000000042c1f5 : ret 0x1876
0x0000000000406dea : ret 0x1a0
0x0000000000406cea : ret 0x1a1
0x0000000000406aea : ret 0x1a3
0x00000000004589bb : ret 0x1a72
0x00000000004a9d9a : ret 0x1ad4
0x0000000000407db2 : ret 0x1b
0x00000000004a852d : ret 0x1b49
0x000000000048f86f : ret 0x1be8
0x000000000042548a : ret 0x1c6
0x000000000040f1b9 : ret 0x1ce9
0x00000000004a1cb0 : ret 0x1d4
0x00000000004a2448 : ret 0x1d5
0x0000000000400d31 : ret 0x1d89
0x000000000040eca2 : ret 0x1f0f
0x000000000041f806 : ret 0x1f77
0x000000000045adad : ret 0x1fe9
0x000000000045ba07 : ret 0x200
0x000000000047888b : ret 0x2041
0x000000000044ad8c : ret 0x2044
0x0000000000462ad7 : ret 0x20be
0x000000000048b70b : ret 0x2148
0x000000000041466d : ret 0x214c
0x0000000000413bfc : ret 0x2175
0x000000000047f478 : ret 0x2275
0x0000000000441b38 : ret 0x2288
0x000000000042559a : ret 0x22a
0x0000000000491162 : ret 0x22bd
0x0000000000486c52 : ret 0x236c
0x000000000042e5d2 : ret 0x2373
0x00000000004a0cb8 : ret 0x24
0x00000000004771f2 : ret 0x2428
0x0000000000416dad : ret 0x2501
0x0000000000468184 : ret 0x2504
0x00000000004244b3 : ret 0x2575
0x000000000048d1a1 : ret 0x25e9
0x000000000044d2d8 : ret 0x26
0x000000000044d5c2 : ret 0x26f8
0x00000000004743f6 : ret 0x2774
0x000000000042fda6 : ret 0x280f
0x000000000042c1e5 : ret 0x2876
0x000000000047f4f7 : ret 0x28f5
0x000000000041e63f : ret 0x29
0x00000000004642de : ret 0x290f
0x000000000040f5e9 : ret 0x2948
0x000000000046721a : ret 0x2949
0x000000000040f9b0 : ret 0x294c
0x0000000000413edd : ret 0x294d
0x000000000041de8e : ret 0x29ef
0x000000000041b05a : ret 0x2a1d
0x000000000042286a : ret 0x2a3
0x000000000044ad2a : ret 0x2b0
0x000000000041179a : ret 0x2b48
0x0000000000423bdb : ret 0x2b74
0x000000000041fb22 : ret 0x2b75
0x0000000000448e92 : ret 0x2b77
0x00000000004009b5 : ret 0x2b8
0x000000000048d18f : ret 0x2be9
0x000000000042036e : ret 0x2c75
0x000000000046fff5 : ret 0x2e66
0x000000000044d00e : ret 0x2f75
0x000000000045dc90 : ret 0x3039
0x0000000000468d45 : ret 0x30be
0x00000000004a11a8 : ret 0x33
0x0000000000453824 : ret 0x349
0x000000000048b540 : ret 0x3575
0x000000000047be3a : ret 0x3774
0x000000000042c646 : ret 0x3776
0x00000000004a967a : ret 0x3827
0x0000000000470e7e : ret 0x3873
0x000000000042c1d5 : ret 0x3876
0x000000000041785b : ret 0x389
0x00000000004a7d06 : ret 0x38ae
0x000000000048ee52 : ret 0x38e8
0x000000000048a118 : ret 0x3901
0x0000000000481bfd : ret 0x3934
0x000000000046e63f : ret 0x3941
0x0000000000412041 : ret 0x3948
0x0000000000412dfd : ret 0x3949
0x000000000041fc4c : ret 0x394c
0x0000000000469ced : ret 0x394d
0x000000000046ebe9 : ret 0x39e8
0x0000000000447442 : ret 0x3a01
0x000000000042e5bb : ret 0x3a73
0x0000000000488c63 : ret 0x3a83
0x0000000000447e61 : ret 0x3b48
0x000000000044aa6f : ret 0x3b8
0x0000000000414e59 : ret 0x3c75
0x0000000000481bbd : ret 0x3d
0x000000000047fe68 : ret 0x3d73
0x0000000000421421 : ret 0x3d83
0x000000000041d77f : ret 0x3de9
0x000000000047bc9a : ret 0x3e80
0x000000000046474a : ret 0x3fd
0x000000000045b1bb : ret 0x4002
0x000000000040d37d : ret 0x4074
0x00000000004749e1 : ret 0x408d
0x000000000044d25a : ret 0x4101
0x00000000004613a8 : ret 0x4108
0x0000000000461b5d : ret 0x4110
0x0000000000482096 : ret 0x4118
0x0000000000481c37 : ret 0x4134
0x0000000000453fd7 : ret 0x415f
0x0000000000451a3e : ret 0x41c3
0x0000000000426c3a : ret 0x4266
0x0000000000471673 : ret 0x4389
0x0000000000405ee1 : ret 0x4401
0x000000000045dd44 : ret 0x4404
0x0000000000482416 : ret 0x4418
0x000000000041b15b : ret 0x4466
0x000000000041eaf3 : ret 0x4473
0x0000000000451871 : ret 0x45b
0x00000000004a8804 : ret 0x474c
0x000000000044f447 : ret 0x47f
0x000000000040e1d4 : ret 0x4801
0x0000000000412ff6 : ret 0x4803
0x00000000004234c1 : ret 0x4804
0x0000000000441ac3 : ret 0x4808
0x00000000004030a6 : ret 0x480a
0x000000000041d198 : ret 0x4810
0x000000000045976c : ret 0x4811
0x000000000045eaa7 : ret 0x481e
0x000000000045eac7 : ret 0x4820
0x000000000044f1ee : ret 0x4830
0x0000000000426b46 : ret 0x4840
0x000000000044e517 : ret 0x48b
0x0000000000441778 : ret 0x48c3
0x000000000045df9e : ret 0x48d
0x0000000000419b73 : ret 0x48e9
0x00000000004a9fc6 : ret 0x48f
0x0000000000405e7c : ret 0x4901
0x000000000045647b : ret 0x4902
0x000000000045dc65 : ret 0x4904
0x000000000041a1b2 : ret 0x4908
0x000000000042b10c : ret 0x4910
0x000000000045b609 : ret 0x4c01
0x000000000041f49a : ret 0x4c07
0x000000000045e366 : ret 0x4c40
0x000000000041e156 : ret 0x4d01
0x000000000045ce28 : ret 0x4d10
0x00000000004027af : ret 0x4de8
0x00000000004a9a27 : ret 0x4e27
0x00000000004017de : ret 0x4f76
0x000000000044fd7f : ret 0x5089
0x000000000044ce77 : ret 0x508b
0x000000000042e5a4 : ret 0x5173
0x000000000044acc7 : ret 0x5488
0x00000000004a7c8c : ret 0x5508
0x000000000047273e : ret 0x5590
0x000000000042c626 : ret 0x5776
0x00000000004a9f58 : ret 0x5803
0x00000000004564e1 : ret 0x5841
0x00000000004885d5 : ret 0x5876
0x000000000040e7e3 : ret 0x589
0x00000000004a7960 : ret 0x591c
0x00000000004a86c7 : ret 0x5ae4
0x000000000042517e : ret 0x5ae9
0x00000000004566c9 : ret 0x5be9
0x000000000046705e : ret 0x5ce8
0x000000000040f5ce : ret 0x5d5b
0x00000000004aa3f2 : ret 0x62c1
0x000000000047d0e0 : ret 0x6349
0x0000000000485df4 : ret 0x637f
0x0000000000459743 : ret 0x6411
0x000000000045c321 : ret 0x6601
0x000000000042c161 : ret 0x6620
0x0000000000424628 : ret 0x66c3
0x00000000004806ee : ret 0x674
0x000000000042c616 : ret 0x6776
0x00000000004a797f : ret 0x67b2
0x0000000000417e05 : ret 0x6874
0x000000000044a37a : ret 0x6ae9
0x00000000004aa581 : ret 0x6f9
0x000000000045f91a : ret 0x73
0x0000000000417f81 : ret 0x7401
0x000000000042348a : ret 0x7402
0x000000000047d14a : ret 0x7403
0x000000000044b3f1 : ret 0x7404
0x0000000000472512 : ret 0x7408
0x0000000000410ac7 : ret 0x7420
0x0000000000465234 : ret 0x7450
0x00000000004818fa : ret 0x7472
0x00000000004459a9 : ret 0x7501
0x00000000004459b6 : ret 0x7502
0x00000000004459c3 : ret 0x7504
0x000000000041f7ad : ret 0x7508
0x000000000044597b : ret 0x7510
0x0000000000445988 : ret 0x7520
0x00000000004254ae : ret 0x7540
0x0000000000476440 : ret 0x7577
0x000000000042d492 : ret 0x7677
0x0000000000483572 : ret 0x777
0x0000000000484e36 : ret 0x77f
0x0000000000402f01 : ret 0x7ce9
0x000000000042c101 : ret 0x7e20
0x000000000042c57c : ret 0x7e40
0x00000000004257ec : ret 0x7f10
0x000000000046e848 : ret 0x7f3c
0x0000000000433d6e : ret 0x80
0x00000000004269c9 : ret 0x8000
0x000000000048eb12 : ret 0x8001
0x000000000047788e : ret 0x8116
0x0000000000460b7b : ret 0x8148
0x000000000048f068 : ret 0x8166
0x000000000041de80 : ret 0x820f
0x0000000000455d03 : ret 0x8301
0x000000000047de67 : ret 0x8303
0x000000000042d060 : ret 0x830f
0x000000000045e974 : ret 0x8341
0x0000000000402d2b : ret 0x8348
0x00000000004478c0 : ret 0x8349
0x000000000047fcdf : ret 0x8364
0x0000000000471e56 : ret 0x840
0x0000000000476839 : ret 0x8401
0x0000000000412e05 : ret 0x840f
0x0000000000454a50 : ret 0x841
0x000000000048bdbe : ret 0x8440
0x000000000047a887 : ret 0x848b
0x000000000046fc99 : ret 0x8502
0x0000000000413f92 : ret 0x850f
0x00000000004590a3 : ret 0x8511
0x000000000044b722 : ret 0x8545
0x0000000000402c82 : ret 0x8548
0x00000000004779ac : ret 0x8549
0x00000000004244da : ret 0x854d
0x0000000000405d51 : ret 0x8575
0x0000000000401512 : ret 0x860f
0x000000000041bb3f : ret 0x870f
0x00000000004a729e : ret 0x871e
0x000000000046e84f : ret 0x875
0x000000000042c205 : ret 0x876
0x0000000000402dac : ret 0x8801
0x0000000000452d4d : ret 0x8804
0x000000000045c372 : ret 0x8841
0x000000000047edce : ret 0x8844
0x000000000041d7cf : ret 0x88a
0x000000000040259a : ret 0x8901
0x000000000044dd0e : ret 0x8902
0x000000000041328a : ret 0x8908
0x000000000045e966 : ret 0x8941
0x000000000042040f : ret 0x8944
0x0000000000403f6f : ret 0x8948
0x00000000004144ba : ret 0x8949
0x0000000000411ab1 : ret 0x894c
0x0000000000483feb : ret 0x894e
0x00000000004183ea : ret 0x8a
0x0000000000488800 : ret 0x8b
0x0000000000451619 : ret 0x8b01
0x000000000045ddff : ret 0x8b04
0x00000000004765d3 : ret 0x8b05
0x000000000047019b : ret 0x8b08
0x00000000004a9ace : ret 0x8b36
0x000000000041e361 : ret 0x8b41
0x000000000046e87b : ret 0x8b44
0x00000000004148e3 : ret 0x8b48
0x0000000000412266 : ret 0x8b49
0x0000000000483f6e : ret 0x8b4a
0x000000000040d58d : ret 0x8b4c
0x0000000000465a9d : ret 0x8c0f
0x000000000045e3c1 : ret 0x8d04
0x000000000048cfbf : ret 0x8d0f
0x000000000041da5c : ret 0x8d44
0x000000000041a651 : ret 0x8d48
0x000000000045dfdd : ret 0x8d49
0x0000000000483317 : ret 0x8d4a
0x000000000041eb74 : ret 0x8d4c
0x000000000045e982 : ret 0x8d89
0x000000000045381b : ret 0x8e0f
0x000000000045ec2a : ret 0x8f0f
0x0000000000440f45 : ret 0x90c3
0x0000000000424bf9 : ret 0x90e9
0x000000000047894e : ret 0x9174
0x000000000048bbfb : ret 0x9272
0x000000000041be5d : ret 0x948
0x0000000000473fb8 : ret 0x94c
0x0000000000485822 : ret 0x950f
0x0000000000449c60 : ret 0x9572
0x00000000004a88f3 : ret 0x9576
0x000000000046157f : ret 0x958b
0x000000000042341e : ret 0x976
0x000000000045b89a : ret 0x98e8
0x000000000047dc13 : ret 0x9be9
0x0000000000481905 : ret 0x9de8
0x0000000000487ce5 : ret 0x9eb
0x000000000049f7e0 : ret 0xa
0x00000000004af84e : ret 0xa01
0x000000000044b418 : ret 0xa076
0x000000000044a244 : ret 0xa0e9
0x000000000048d07e : ret 0xa4e9
0x00000000004a85e3 : ret 0xa514
0x000000000048d17d : ret 0xa5e9
0x000000000047d88a : ret 0xa8e8
0x000000000044c3bd : ret 0xabe
0x00000000004a8a67 : ret 0xac65
0x00000000004a9424 : ret 0xacfc
0x00000000004603bf : ret 0xae9
0x000000000042431a : ret 0xaeeb
0x00000000004acc97 : ret 0xb00e
0x00000000004126cd : ret 0xb074
0x000000000041bebb : ret 0xb277
0x00000000004572ab : ret 0xb2eb
0x0000000000464307 : ret 0xb3e8
0x000000000044a230 : ret 0xb4e9
0x000000000045e9a6 : ret 0xb589
0x000000000048aaf5 : ret 0xb5e8
0x0000000000402d65 : ret 0xb60f
0x0000000000401024 : ret 0xb70f
0x000000000046abe5 : ret 0xb8
0x000000000047bb3a : ret 0xb844
0x000000000046c98c : ret 0xb848
0x000000000048eed2 : ret 0xb8e8
0x00000000004a892e : ret 0xb9b9
0x000000000046e1c5 : ret 0xb9e9
0x000000000046fd74 : ret 0xba41
0x0000000000423b53 : ret 0xbae9
0x00000000004573e2 : ret 0xbaeb
0x000000000045053a : ret 0xbafa
0x000000000048d636 : ret 0xbc80
0x0000000000410656 : ret 0xbce0
0x000000000045e992 : ret 0xbd89
0x0000000000481a42 : ret 0xbe0f
0x00000000004a8684 : ret 0xbe57
0x0000000000426889 : ret 0xc000
0x0000000000403296 : ret 0xc031
0x000000000045978e : ret 0xc083
0x000000000042bfc0 : ret 0xc085
0x000000000040e216 : ret 0xc148
0x000000000041bfd9 : ret 0xc183
0x0000000000404a38 : ret 0xc189
0x000000000044b0b2 : ret 0xc221
0x000000000045dfa4 : ret 0xc229
0x000000000045dc00 : ret 0xc269
0x000000000042044b : ret 0xc275
0x00000000004773e6 : ret 0xc283
0x000000000042e474 : ret 0xc2b2
0x0000000000448efe : ret 0xc35b
0x000000000046606e : ret 0xc388
0x0000000000458b7d : ret 0xc389
0x000000000042044d : ret 0xc3f3
0x00000000004a6e22 : ret 0xc4c3
0x00000000004a8238 : ret 0xc4ff
0x000000000042c5e1 : ret 0xc540
0x0000000000458c46 : ret 0xc589
0x000000000046423c : ret 0xc689
0x000000000047fcbd : ret 0xc74
0x0000000000441e80 : ret 0xc748
0x0000000000469e38 : ret 0xc789
0x0000000000481ad2 : ret 0xc829
0x0000000000462c12 : ret 0xc839
0x000000000041784c : ret 0xc883
0x0000000000461657 : ret 0xc985
0x0000000000470283 : ret 0xc9eb
0x0000000000441a91 : ret 0xc9ff
0x00000000004008d1 : ret 0xca21
0x0000000000478e8f : ret 0xcbe9
0x00000000004a7cca : ret 0xcca7
0x00000000004a9dad : ret 0xcd11
0x00000000004659dd : ret 0xcde8
0x0000000000405242 : ret 0xce80
0x000000000049fbe0 : ret 0xd
0x0000000000421cce : ret 0xd020
0x000000000040e026 : ret 0xd021
0x0000000000400b8c : ret 0xd089
0x00000000004650bb : ret 0xd120
0x0000000000401344 : ret 0xd284
0x000000000045873a : ret 0xd285
0x000000000048f5b8 : ret 0xd2e8
0x000000000047a916 : ret 0xd348
0x00000000004506f7 : ret 0xd5e9
0x0000000000481e8f : ret 0xd75
0x000000000040f3e6 : ret 0xd774
0x00000000004a9845 : ret 0xd8f
0x000000000040058f : ret 0xda80
0x0000000000410943 : ret 0xdaf7
0x0000000000454f2a : ret 0xdb76
0x00000000004a9926 : ret 0xdcd9
0x00000000004a88a2 : ret 0xde5d
0x00000000004a7631 : ret 0xde9e
0x0000000000426749 : ret 0xe000
0x0000000000445939 : ret 0xe074
0x000000000044e460 : ret 0xe083
0x00000000004b603c : ret 0xe0a
0x000000000048d241 : ret 0xe1e9
0x000000000044e292 : ret 0xe1eb
0x000000000040dc20 : ret 0xe281
0x0000000000400d65 : ret 0xe283
0x0000000000473cc8 : ret 0xe575
0x00000000004666c0 : ret 0xe57f
0x000000000046703a : ret 0xe583
0x0000000000448ef2 : ret 0xe680
0x000000000046771f : ret 0xe683
0x00000000004a9a46 : ret 0xe71f
0x0000000000479cda : ret 0xe75
0x0000000000423c06 : ret 0xe775
0x0000000000466cf3 : ret 0xe7e9
0x000000000042cc45 : ret 0xe883
0x0000000000479856 : ret 0xe8c0
0x000000000040303a : ret 0xe901
0x000000000040307f : ret 0xe902
0x0000000000441b26 : ret 0xe908
0x000000000043e0c6 : ret 0xe910
0x000000000045f1ed : ret 0xe920
0x00000000004a7da7 : ret 0xe970
0x0000000000448e8a : ret 0xea81
0x000000000040dced : ret 0xeab8
0x0000000000400d4d : ret 0xeac1
0x000000000047e516 : ret 0xeb01
0x00000000004701b3 : ret 0xeb04
0x000000000042b13a : ret 0xeb10
0x0000000000482082 : ret 0xeb30
0x00000000004121ea : ret 0xec
0x00000000004aa558 : ret 0xec2
0x000000000040f370 : ret 0xed75
0x00000000004aa1fa : ret 0xef32
0x000000000048ce08 : ret 0xef89
0x0000000000476a1f : ret 0xefeb
0x0000000000429f2e : ret 0xf
0x0000000000426609 : ret 0xf000
0x0000000000405725 : ret 0xf01
0x000000000041b809 : ret 0xf02
0x000000000041dbe9 : ret 0xf04
0x0000000000412953 : ret 0xf08
0x000000000041bad9 : ret 0xf0f
0x000000000040e52e : ret 0xf10
0x000000000046753b : ret 0xf20
0x000000000041dd53 : ret 0xf275
0x0000000000481940 : ret 0xf2e8
0x00000000004645f6 : ret 0xf3f
0x0000000000467ac3 : ret 0xf40
0x0000000000470c2d : ret 0xf41
0x000000000048d2bc : ret 0xf45
0x00000000004247f9 : ret 0xf475
0x00000000004525d6 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000467aa9 : ret 0xf50
0x000000000048a286 : ret 0xf608
0x00000000004760a5 : ret 0xf631
0x0000000000426bc6 : ret 0xf66
0x000000000047b967 : ret 0xf675
0x0000000000470cec : ret 0xf741
0x0000000000405972 : ret 0xf748
0x000000000048355c : ret 0xf749
0x00000000004264c9 : ret 0xf800
0x00000000004a7510 : ret 0xf869
0x0000000000419583 : ret 0xf8b
0x00000000004645f1 : ret 0xf8c1
0x00000000004413a6 : ret 0xf8c5
0x0000000000449234 : ret 0xf8e9
0x0000000000495a10 : ret 0xfa2b
0x0000000000495a08 : ret 0xfa2c
0x0000000000495a00 : ret 0xfa2d
0x00000000004959f8 : ret 0xfa2e
0x00000000004959f0 : ret 0xfa2f
0x0000000000495818 : ret 0xfa34
0x0000000000420132 : ret 0xfae9
0x000000000044af62 : ret 0xfb54
0x000000000042071a : ret 0xfbe9
0x0000000000426389 : ret 0xfc00
0x00000000004252a1 : ret 0xfc3
0x000000000049188a : ret 0xfc9b
0x00000000004782aa : ret 0xfd30
0x0000000000426249 : ret 0xfe00
0x0000000000419672 : ret 0xfe6d
0x0000000000400e95 : ret 0xfe83
0x0000000000426109 : ret 0xff00
0x00000000004358e1 : ret 0xff2
0x000000000044e40b : ret 0xff25
0x000000000042ce09 : ret 0xff2d
0x0000000000426b6a : ret 0xff3
0x000000000046bce7 : ret 0xff31
0x0000000000425fc9 : ret 0xff80
0x00000000004672c1 : ret 0xff83
0x0000000000454ebc : ret 0xff85
0x000000000045e352 : ret 0xffa0
0x00000000004244aa : ret 0xffa5
0x000000000040b1ca : ret 0xffaf
0x000000000040aeca : ret 0xffb2
0x000000000045064a : ret 0xffb3
0x0000000000411d67 : ret 0xffb8
0x0000000000463d88 : ret 0xffb9
0x000000000040dd3a : ret 0xffc0
0x00000000004868da : ret 0xffc7
0x00000000004241b8 : ret 0xffdf
0x0000000000425d49 : ret 0xffe0
0x000000000046312e : ret 0xffe6
0x0000000000468f59 : ret 0xffe8
0x000000000044a2e5 : ret 0xffe9
0x000000000040f299 : ret 0xffef
0x0000000000423bd2 : ret 0xfff
0x000000000040db62 : ret 0xfff0
0x000000000046b6d0 : ret 0xfff1
0x00000000004b0201 : ret 0xfff7
0x0000000000425ac9 : ret 0xfff8
0x0000000000464146 : ret 0xfff9
0x000000000041d688 : ret 0xfffa
0x0000000000404959 : ret 0xfffb
0x0000000000425989 : ret 0xfffc
0x0000000000419005 : ret 0xfffd
0x0000000000425849 : ret 0xfffe
0x00000000004164fc : ret 0xffff
0x000000000042c855 : ret 1
0x000000000042c87b : ret 2
0x0000000000410983 : ret 3
0x000000000040a028 : ret 4
0x0000000000439974 : ret 5
0x000000000049f388 : ret 6
0x000000000042b6ca : ret 7
0x000000000040a088 : ret 8
0x00000000004463ea : ret 9
0x0000000000400574 : retf
0x0000000000401237 : retf 0
0x00000000004a0140 : retf 0x11
0x0000000000488d2d : retf 0x114d
0x0000000000477db0 : retf 0x12b9
0x0000000000456cef : retf 0x12e9
0x0000000000463069 : retf 0x147f
0x0000000000473603 : retf 0x148
0x0000000000433c4c : retf 0x14c
0x0000000000428092 : retf 0x16
0x0000000000484f0d : retf 0x194d
0x000000000044cb62 : retf 0x19b8
0x00000000004071d4 : retf 0x1b
0x000000000040ed41 : retf 0x1be
0x000000000041f108 : retf 0x1be9
0x00000000004a1ce8 : retf 0x1d4
0x00000000004a2488 : retf 0x1d5
0x000000000042c530 : retf 0x1f0f
0x00000000004b12fa : retf 0x2000
0x000000000046e4c1 : retf 0x20be
0x0000000000459012 : retf 0x20e8
0x0000000000415281 : retf 0x2148
0x000000000041be63 : retf 0x2274
0x0000000000492046 : retf 0x2287
0x00000000004926fd : retf 0x22b1
0x0000000000401585 : retf 0x230
0x0000000000488112 : retf 0x238
0x0000000000470dd2 : retf 0x24
0x0000000000460e4b : retf 0x25
0x0000000000466eba : retf 0x256b
0x000000000044cf19 : retf 0x26
0x0000000000450822 : retf 0x26d1
0x000000000044940e : retf 0x273a
0x000000000042e6d4 : retf 0x28
0x000000000042ebb9 : retf 0x280f
0x000000000041de54 : retf 0x29
0x00000000004721ca : retf 0x2941
0x0000000000409bcf : retf 0x2948
0x0000000000411b0e : retf 0x294c
0x0000000000420f72 : retf 0x2998
0x00000000004236fd : retf 0x29a1
0x00000000004227fd : retf 0x29b0
0x000000000041e95a : retf 0x29be
0x000000000041e878 : retf 0x2a74
0x000000000040f563 : retf 0x2a7e
0x00000000004a871c : retf 0x2a91
0x000000000047a35a : retf 0x2aa
0x0000000000410e12 : retf 0x2aae
0x0000000000479dfa : retf 0x2b4
0x000000000040352a : retf 0x2b6b
0x0000000000403d56 : retf 0x2b8b
0x00000000004589cf : retf 0x2c73
0x00000000004589a9 : retf 0x2c76
0x00000000004a7b9a : retf 0x2c90
0x0000000000478a0f : retf 0x2de9
0x000000000044d2f1 : retf 0x2e75
0x00000000004830cb : retf 0x2fe8
0x0000000000401548 : retf 0x31
0x00000000004354d6 : retf 0x3148
0x00000000004a9985 : retf 0x3159
0x00000000004a99ed : retf 0x32dd
0x00000000004a11e8 : retf 0x33
0x00000000004a82a3 : retf 0x33e6
0x00000000004a87d1 : retf 0x3617
0x00000000004354b2 : retf 0x377
0x000000000041f410 : retf 0x3948
0x0000000000471f30 : retf 0x3949
0x000000000041a12a : retf 0x394c
0x000000000046926a : retf 0x3b2
0x000000000042049d : retf 0x3d83
0x00000000004a9de6 : retf 0x3d8a
0x000000000045a406 : retf 0x3db
0x00000000004a767b : retf 0x3ec
0x000000000044e465 : retf 0x4102
0x000000000044e5b1 : retf 0x4110
0x00000000004549ee : retf 0x4180
0x0000000000426c1c : retf 0x4266
0x0000000000454753 : retf 0x4280
0x000000000048acbd : retf 0x42f6
0x0000000000453d94 : retf 0x43b
0x0000000000400f12 : retf 0x440
0x000000000043dd3a : retf 0x4466
0x0000000000452494 : retf 0x454
0x0000000000451e6c : retf 0x45a
0x0000000000466496 : retf 0x45e9
0x0000000000455154 : retf 0x4689
0x000000000041a1e5 : retf 0x4801
0x0000000000417e71 : retf 0x4802
0x000000000040d96c : retf 0x4805
0x000000000040d9d7 : retf 0x4806
0x0000000000472517 : retf 0x4808
0x000000000040d888 : retf 0x4809
0x000000000040dac8 : retf 0x480a
0x000000000040da8c : retf 0x480d
0x000000000044ee4d : retf 0x481
0x0000000000411a23 : retf 0x4810
0x0000000000411b21 : retf 0x4820
0x00000000004835d6 : retf 0x48f8
0x000000000041dbf3 : retf 0x4901
0x000000000045a843 : retf 0x4a8d
0x000000000041e84a : retf 0x4b74
0x0000000000417e23 : retf 0x4c01
0x0000000000423d92 : retf 0x4c89
0x000000000048a219 : retf 0x4d20
0x0000000000484ed8 : retf 0x4de8
0x00000000004834db : retf 0x4df0
0x0000000000484efc : retf 0x4df8
0x000000000041f0d2 : retf 0x51e9
0x0000000000467586 : retf 0x53c
0x0000000000485e02 : retf 0x557f
0x000000000048b976 : retf 0x5774
0x0000000000485c3d : retf 0x5d5b
0x000000000047a9a5 : retf 0x5f6
0x000000000040ea0c : retf 0x6411
0x000000000042eca3 : retf 0x6601
0x000000000042edf3 : retf 0x6602
0x000000000042ef43 : retf 0x6603
0x000000000042f093 : retf 0x6604
0x000000000042f1e3 : retf 0x6605
0x000000000042f333 : retf 0x6606
0x000000000042f483 : retf 0x6607
0x000000000042f5d3 : retf 0x6608
0x000000000042f723 : retf 0x6609
0x000000000042f873 : retf 0x660a
0x000000000042f9c3 : retf 0x660b
0x000000000042fb13 : retf 0x660c
0x000000000042fc63 : retf 0x660d
0x000000000042fdb3 : retf 0x660e
0x000000000042ff03 : retf 0x660f
0x00000000004354d1 : retf 0x676
0x00000000004a9d05 : retf 0x67ca
0x00000000004761c1 : retf 0x6b8
0x00000000004a7d02 : retf 0x6ee8
0x00000000004a9bc6 : retf 0x7272
0x0000000000421302 : retf 0x72e
0x0000000000420102 : retf 0x740
0x00000000004a939f : retf 0x76a5
0x0000000000412023 : retf 0x775
0x000000000041d442 : retf 0x776
0x000000000041d042 : retf 0x77a
0x00000000004a8222 : retf 0x79f5
0x000000000044abcb : retf 0x8041
0x000000000042c463 : retf 0x8148
0x000000000041ed22 : retf 0x820f
0x00000000004116d0 : retf 0x830f
0x0000000000414a31 : retf 0x8310
0x0000000000413a1d : retf 0x8320
0x0000000000455557 : retf 0x8341
0x000000000041a1e2 : retf 0x8348
0x000000000042b0df : retf 0x8349
0x000000000041a6c0 : retf 0x840f
0x00000000004a8b10 : retf 0x8481
0x0000000000415436 : retf 0x850f
0x00000000004008d3 : retf 0x8545
0x0000000000441f6b : retf 0x8548
0x000000000042bf89 : retf 0x860f
0x0000000000433c9c : retf 0x870f
0x0000000000483774 : retf 0x877
0x000000000048a2c0 : retf 0x8820
0x000000000045473d : retf 0x8880
0x0000000000423d98 : retf 0x8902
0x0000000000401504 : retf 0x8904
0x0000000000412a60 : retf 0x8920
0x000000000044b40a : retf 0x8940
0x0000000000404076 : retf 0x8941
0x0000000000461290 : retf 0x8944
0x0000000000402fb3 : retf 0x8948
0x000000000042e6d9 : retf 0x8949
0x00000000004119cc : retf 0x894c
0x000000000045684a : retf 0x8966
0x000000000045479e : retf 0x8980
0x00000000004862f2 : retf 0x8b41
0x00000000004049ab : retf 0x8b48
0x000000000040582c : retf 0x8b49
0x0000000000430ad9 : retf 0x8b4c
0x000000000041a6fe : retf 0x8d48
0x000000000045ddd4 : retf 0x8d49
0x000000000042be99 : retf 0x8d4a
0x0000000000444ebd : retf 0x8d4c
0x000000000041f11b : retf 0x8e9
0x000000000042b01d : retf 0x9066
0x000000000045b2b0 : retf 0x9273
0x00000000004a946e : retf 0x93a2
0x000000000041ebd6 : retf 0x948
0x00000000004797d2 : retf 0x98
0x000000000046dcfc : retf 0x98e9
0x00000000004a980b : retf 0x99e0
0x000000000044b400 : retf 0x9b9
0x00000000004a9b7a : retf 0x9d7d
0x00000000004aa485 : retf 0xa020
0x00000000004a79e5 : retf 0xa1eb
0x00000000004a9a6b : retf 0xa2fe
0x0000000000402cc7 : retf 0xa35
0x000000000041dee9 : retf 0xa74
0x00000000004a9b3c : retf 0xab0d
0x000000000040e83d : retf 0xade9
0x00000000004aa08e : retf 0xae32
0x0000000000427342 : retf 0xb
0x000000000041ee71 : retf 0xb2e9
0x00000000004a8889 : retf 0xb51a
0x000000000042cac2 : retf 0xb60f
0x000000000048b852 : retf 0xb801
0x0000000000455564 : retf 0xb941
0x00000000004887f0 : retf 0xba
0x000000000041dc21 : retf 0xba41
0x000000000046fea2 : retf 0xbb41
0x00000000004a9b93 : retf 0xbb9a
0x00000000004864a6 : retf 0xbeb
0x00000000004a9bdd : retf 0xbf4b
0x00000000004576b8 : retf 0xc031
0x0000000000402733 : retf 0xc089
0x0000000000459172 : retf 0xc0e8
0x00000000004a985d : retf 0xc0fe
0x0000000000465792 : retf 0xc1
0x000000000040e1ca : retf 0xc148
0x0000000000473f7e : retf 0xc149
0x0000000000461bbd : retf 0xc239
0x0000000000459b0d : retf 0xc6
0x0000000000466411 : retf 0xc7
0x0000000000424b34 : retf 0xc748
0x0000000000474233 : retf 0xc985
0x000000000042e014 : retf 0xcab2
0x00000000004a6e2a : retf 0xcccb
0x000000000040ab07 : retf 0xd
0x00000000004a8646 : retf 0xd1cb
0x0000000000448fff : retf 0xd231
0x0000000000415ae5 : retf 0xd284
0x0000000000452024 : retf 0xd285
0x0000000000404081 : retf 0xd289
0x00000000004a9d57 : retf 0xd39
0x0000000000448df6 : retf 0xd975
0x00000000004aa2e3 : retf 0xde4f
0x0000000000413001 : retf 0xdeb
0x00000000004a8913 : retf 0xdf7f
0x0000000000407156 : retf 0xe
0x00000000004a83be : retf 0xe152
0x0000000000448c33 : retf 0xe175
0x00000000004864cb : retf 0xe275
0x0000000000455270 : retf 0xe283
0x0000000000479459 : retf 0xe474
0x0000000000448acc : retf 0xe475
0x00000000004a899c : retf 0xe496
0x000000000045ef37 : retf 0xe677
0x00000000004a8306 : retf 0xe72e
0x00000000004a7993 : retf 0xe80
0x00000000004782e6 : retf 0xe802
0x0000000000466685 : retf 0xe87f
0x000000000040da09 : retf 0xe903
0x0000000000484bcc : retf 0xe972
0x00000000004620bd : retf 0xe9ff
0x000000000048451b : retf 0xea72
0x0000000000412ec3 : retf 0xea77
0x00000000004a994c : retf 0xea91
0x0000000000488bab : retf 0xeac0
0x000000000041c172 : retf 0xeac1
0x0000000000425761 : retf 0xead3
0x000000000040d9c2 : retf 0xeb04
0x000000000040da21 : retf 0xeb07
0x000000000040d8e8 : retf 0xeb08
0x000000000040daef : retf 0xeb0b
0x000000000040dac2 : retf 0xeb0c
0x00000000004a7a6d : retf 0xeb83
0x00000000004aa261 : retf 0xebbf
0x0000000000417d6b : retf 0xee75
0x000000000047edd7 : retf 0xee7c
0x0000000000433edc : retf 0xf01
0x000000000043405c : retf 0xf02
0x00000000004341dc : retf 0xf03
0x000000000043435c : retf 0xf04
0x00000000004344dc : retf 0xf05
0x000000000043465c : retf 0xf06
0x00000000004347dc : retf 0xf07
0x000000000043495c : retf 0xf08
0x0000000000434adc : retf 0xf09
0x0000000000434c5c : retf 0xf0a
0x0000000000434ddc : retf 0xf0b
0x0000000000434f5c : retf 0xf0c
0x00000000004350dc : retf 0xf0d
0x000000000043525c : retf 0xf0e
0x00000000004353dc : retf 0xf0f
0x000000000043f90d : retf 0xf1c5
0x000000000045e9bb : retf 0xf41
0x00000000004418d0 : retf 0xf48
0x0000000000474461 : retf 0xf4c
0x0000000000473606 : retf 0xf631
0x00000000004a98a8 : retf 0xf64
0x0000000000425643 : retf 0xf66
0x000000000042d07a : retf 0xf748
0x000000000041e44d : retf 0xf989
0x000000000043f9df : retf 0xf9c5
0x000000000049561c : retf 0xfa03
0x000000000049540c : retf 0xfa0f
0x0000000000495904 : retf 0xfa36
0x000000000047c4e2 : retf 0xfa49
0x00000000004040a1 : retf 0xfa83
0x000000000046458a : retf 0xfac1
0x0000000000454d62 : retf 0xface
0x0000000000468ef2 : retf 0xfae4
0x00000000004592e2 : retf 0xfc7b
0x0000000000474106 : retf 0xfdc5
0x00000000004196ba : retf 0xfe6d
0x000000000042cea7 : retf 0xfec5
0x0000000000435d01 : retf 0xff2
0x000000000040d56a : retf 0xff2e
0x000000000042d4ab : retf 0xff3
0x000000000040dc94 : retf 0xff31
0x000000000041b5d2 : retf 0xff52
0x0000000000450c42 : retf 0xffad
0x00000000004799b2 : retf 0xffdc
0x000000000040b9e9 : retf 0xffe7
0x0000000000487f22 : retf 0xfff3
0x000000000046573a : retf 0xfff5
0x0000000000454837 : retf 0xfff6
0x000000000045f552 : retf 0xfff8
0x000000000048efc2 : retf 0xfff9
0x00000000004554ae : retf 0xfffa
0x00000000004667ef : retf 0xfffb
0x000000000040e321 : retf 0xfffc
0x00000000004035c2 : retf 0xfffd
0x0000000000411eae : retf 0xfffe
0x0000000000403a35 : retf 0xffff
0x0000000000403b33 : retf 1
0x0000000000427c42 : retf 2
0x00000000004102f8 : retf 3
0x000000000048cd15 : retf 4
0x00000000004a3894 : retf 5
0x0000000000409f1a : retf 6
0x00000000004a3c94 : retf 7
0x00000000004a3e94 : retf 8
0x000000000042d1cb : retf 9
0x0000000000447505 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000448ff3 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048ec8c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042c15e : rol bl, 0x83 ; ret 0x6620
0x000000000047521b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000419167 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042c92d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000447ead : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000426b42 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042c64b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000004743f2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a3680 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000047a881 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042d39d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044dd1b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048dcbe : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000410469 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042c3a2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000495cd8 : rol byte ptr [rbp - 0x788f0006], 1 ; cli ; call qword ptr [rax]
0x00000000004864c5 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x00000000004832bb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004195d8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000453fd1 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000475482 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000049565c : rol byte ptr [rbx], 0xfa ; call qword ptr [rax + 3]
0x0000000000448e81 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046750f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000447eae : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000045de39 : rol byte ptr [rcx + rcx*4 + 0x16], 0x5d ; ret
0x00000000004008ce : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046e1c2 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x000000000045dd41 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x000000000045df33 : rol byte ptr [rcx - 0x7d], cl ; ret 0xe902
0x0000000000475462 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465592 : rol byte ptr [rcx], 0x39 ; retf
0x000000000044f6c6 : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000400b6b : rol byte ptr [rcx], 0x5d ; ret
0x000000000045a28b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000449217 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x0000000000449230 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000042469b : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044ef01 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004754c2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000495480 : rol byte ptr [rdi], 1 ; cli ; call qword ptr [rax + 7]
0x0000000000475472 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048c8f6 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004754b2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000495488 : rol byte ptr [rsi], 1 ; cli ; call qword ptr [rax + 6]
0x000000000043fac5 : rol ch, 1 ; jns 0x43faa0 ; retf 0xead3
0x000000000043fc15 : rol ch, 1 ; jns 0x43fbf0 ; retf 0xead3
0x000000000043fd65 : rol ch, 1 ; jns 0x43fd40 ; retf 0xead3
0x000000000043feb5 : rol ch, 1 ; jns 0x43fe90 ; retf 0xead3
0x0000000000440005 : rol ch, 1 ; jns 0x43ffe0 ; retf 0xead3
0x0000000000440155 : rol ch, 1 ; jns 0x440130 ; retf 0xead3
0x00000000004402a5 : rol ch, 1 ; jns 0x440280 ; retf 0xead3
0x00000000004403f5 : rol ch, 1 ; jns 0x4403d0 ; retf 0xead3
0x0000000000440545 : rol ch, 1 ; jns 0x440520 ; retf 0xead3
0x0000000000440695 : rol ch, 1 ; jns 0x440670 ; retf 0xead3
0x00000000004407e5 : rol ch, 1 ; jns 0x4407c0 ; retf 0xead3
0x0000000000440935 : rol ch, 1 ; jns 0x440910 ; retf 0xead3
0x0000000000440a85 : rol ch, 1 ; jns 0x440a60 ; retf 0xead3
0x0000000000440bd5 : rol ch, 1 ; jns 0x440bb0 ; retf 0xead3
0x0000000000440d25 : rol ch, 1 ; jns 0x440d00 ; retf 0xead3
0x0000000000403a2c : rol ch, 1 ; mov edi, 0xdf8948ff ; call 0x4004c0
0x000000000042c6cf : rol ch, 1 ; std ; xlatb ; ret
0x0000000000474166 : rol ch, cl ; std ; xlatb ; ret
0x0000000000441a3f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a6e20 : rol cl, 0xc2 ; ret
0x000000000047540c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000448c2c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000448ac8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045dc61 : rol dword ptr [rax + rcx*2], 0x83 ; ret 0x4904
0x0000000000437fa0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042c184 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042c6c3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000441513 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000478b39 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400939 : rol dword ptr [rcx], 0x8d ; call r11
0x000000000045777f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004b12f6 : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x000000000045583a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004740fe : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042ce05 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000423b9c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000423b9b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000420578 : ror al, 0x29 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004951bc : ror bl, 0xf9 ; call qword ptr [rax]
0x0000000000472e15 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048b528 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042c1d2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42c210 ; add rax, rdi ; ret
0x00000000004418d7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047512c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000411f1e : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000004764ec : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x476518 ; ret
0x000000000044cbf8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041ea23 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000047d40a : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000470e83 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000047f336 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x00000000004603bb : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045b969 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045b95a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042c27c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042c1a2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042c693 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405ac3 : ror byte ptr [rax + 1], 1 ; ret
0x00000000004418d4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049fa88 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042c925 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000483d8c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x00000000004672ba : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042c192 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042c1c2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042c1b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000423bce : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000047a50a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000044a6da : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004115b4 : ror byte ptr [rax - 0x77], 0xef ; call qword ptr [rbp + 0x20]
0x0000000000412160 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048b53d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045b174 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x00000000004148e0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000482a8a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dc1d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000411fd4 : ror byte ptr [rax - 0x77], cl ; and al, 8 ; mov rdi, r15 ; call qword ptr [r8 + 0x80]
0x000000000044c051 : ror byte ptr [rax - 0x77], cl ; fistp qword ptr [rsi + 1] ; call rbp
0x000000000042021d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004155c1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4155d0 ; ret
0x000000000048581c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000417345 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000476403 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000416561 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ecb0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044b824 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000455e75 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048a115 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000495478 : ror byte ptr [rax], 1 ; cli ; call qword ptr [rax + 8]
0x000000000046f9a2 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000046fec2 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000474afc : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000004851f4 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x0000000000472e16 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x0000000000412471 : ror byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rbp + 0x80]
0x000000000045ce76 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000468fa8 : ror byte ptr [rcx - 0x77], cl ; ret
0x00000000004506ef : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000495470 : ror byte ptr [rcx], 1 ; cli ; call qword ptr [rax + 9]
0x000000000045bc12 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044caec : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000478ae1 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045f9bc : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000410c2d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000476639 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000410201 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000461227 : ror byte ptr [rdi], 0x84 ; rcl byte ptr [rax + rax], 1 ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx + 0xf]
0x0000000000402886 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000467abb : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000451677 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x00000000004249be : ror byte ptr [rdi], 0x84 ; retf
0x000000000044d372 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b9e6 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000045436c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x0000000000441e0a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042356f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044d74f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047e5f2 : ror byte ptr [rdi], 0x85 ; ret 2
0x000000000046778e : ror byte ptr [rdi], 0x85 ; retf
0x00000000004035bf : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042c50d : ror byte ptr [rdi], 0x85 ; retf 1
0x00000000004642bc : ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000423d6f : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000468659 : ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004800c9 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000481bba : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046e845 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000048581f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044797e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000041143b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000410940 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000423bcb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000049544c : ror byte ptr [rdi], 0xfa ; call qword ptr [rax + 0xf]
0x0000000000447df5 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040dc32 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dc13 ; ret
0x00000000004645ee : ror byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000495be4 : ror byte ptr [rip + 0xf50fffa], 1 ; cli ; call rax
0x0000000000495ba8 : ror byte ptr [rsi], 1 ; cli ; call qword ptr [rax + 0x10]
0x00000000004679d8 : ror dl, 3 ; add byte ptr [rbp + rcx*4 + 0x35], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 3
0x00000000004354b7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000417976 : ror dword ptr [rax + 0x39], 1 ; enter 0x2476, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x20]
0x00000000004726fb : ror dword ptr [rax + 0x39], 1 ; enter 0x2f76, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x30]
0x0000000000418706 : ror dword ptr [rax + 0x39], 1 ; enter 0x3476, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x30]
0x0000000000416266 : ror dword ptr [rax + 0x39], 1 ; enter 0x3476, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x88]
0x00000000004178fd : ror dword ptr [rax + 0x39], 1 ; enter 0x3576, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x68]
0x0000000000410931 : ror dword ptr [rax + 0x39], 1 ; enter 0x7176, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x60]
0x0000000000485e1e : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000447988 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x00000000004417a4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004418c9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047445a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048b704 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000470476 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000424317 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x000000000047a913 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000466cf0 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000459408 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x000000000044dff0 : ror dword ptr [rax - 0x77], 5 ; adc cl, bh ; add cl, ch ; retf
0x0000000000486431 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041725d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x417250 ; ret
0x00000000004715ad : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x4715a0 ; ret
0x00000000004667e9 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045eac4 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000484a5d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x00000000004666ab : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000445937 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000047cbfe : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042dc08 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e314 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e0e6 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042e066 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042e3a4 : ror dword ptr [rdi], 0x85 ; je 0x42e3ab ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042de9b : ror dword ptr [rdi], 0x85 ; jno 0x42dea7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042df63 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042dbe0 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041725c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x417250 ; ret
0x00000000004715ac : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x4715a0 ; ret
0x00000000004018fe : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x401916 ; syscall
0x0000000000495d25 : sahf ; cli ; call qword ptr [rax]
0x00000000004404ce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a7d05 : sahf ; ret 0x38ae
0x0000000000484351 : sahf ; ret 0x3948
0x000000000045ce7c : sahf ; ret 0x894c
0x000000000048d2f4 : sahf ; ret 0xf45
0x00000000004a883c : sahf ; retf
0x0000000000494fed : sahf ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x00000000004195de : sal bh, 0xd8 ; ret
0x0000000000495dec : sal bh, 0xfa ; call rax
0x00000000004269c7 : sal bh, 1 ; ret 0x8000
0x0000000000426887 : sal bh, 1 ; ret 0xc000
0x0000000000426747 : sal bh, 1 ; ret 0xe000
0x0000000000426607 : sal bh, 1 ; ret 0xf000
0x00000000004264c7 : sal bh, 1 ; ret 0xf800
0x0000000000426387 : sal bh, 1 ; ret 0xfc00
0x0000000000426247 : sal bh, 1 ; ret 0xfe00
0x0000000000426107 : sal bh, 1 ; ret 0xff00
0x0000000000425fc7 : sal bh, 1 ; ret 0xff80
0x0000000000425e87 : sal bh, 1 ; ret 0xffc0
0x0000000000425d47 : sal bh, 1 ; ret 0xffe0
0x0000000000425c07 : sal bh, 1 ; ret 0xfff0
0x0000000000425ac7 : sal bh, 1 ; ret 0xfff8
0x0000000000425987 : sal bh, 1 ; ret 0xfffc
0x0000000000425847 : sal bh, 1 ; ret 0xfffe
0x000000000047520f : sal bl, 1 ; ret
0x000000000047ff6d : sal bl, cl ; ret
0x000000000040db5d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x000000000048a281 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x00000000004771ed : sal byte ptr [rax - 0x75], 0x35 ; ret 0x2428
0x000000000044a777 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000044aa47 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004746b2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000048314e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000476246 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000405f0b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004900a3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x0000000000400594 : sal byte ptr [rbp + 2], cl ; ret
0x0000000000490088 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000045d8d7 : sal byte ptr [rbp + 6], 0xe9 ; mov cl, 0xf ; sti ; call qword ptr [rax + 0x66c3c031]
0x000000000044cc11 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x00000000004155c4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044cc21 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041817d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000447670 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000417260 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000426ceb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dc37 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042c6cd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000481a28 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042c6c5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044151d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000441515 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000474f6b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041959c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044dd06 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x0000000000495920 : sal byte ptr [rbx], 1 ; cli ; inc dword ptr [rax + 0x3a] ; cli ; call rax
0x000000000044181c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004a4668 : sal byte ptr [rcx - 0x4d4f0004], 1 ; cld ; call rax
0x00000000004a4678 : sal byte ptr [rcx - 0x4d5f0004], 1 ; cld ; call rax
0x00000000004a4688 : sal byte ptr [rcx - 0x4d6f0004], 1 ; cld ; call rax
0x00000000004a4690 : sal byte ptr [rcx - 0x4d7f0004], 1 ; cld ; call rax
0x00000000004a469c : sal byte ptr [rcx - 0x4d8f0004], 1 ; cld ; call rax
0x00000000004a4684 : sal byte ptr [rcx - 0x4e2f0004], 1 ; cld ; call qword ptr [rax - 0x2f00034e]
0x00000000004a4670 : sal byte ptr [rcx - 0x4e2f0004], 1 ; cld ; call rax
0x000000000044f6c2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044cbf6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000416b17 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call qword ptr [r15 + 0x58]
0x00000000004743bb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x0000000000400b09 : sal byte ptr [rdx + rcx - 0x41], 0xe8 ; ret
0x0000000000441b33 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a4660 : sal byte ptr [rdx - 0x4e2f0004], 0xfc ; call rax
0x0000000000495944 : sal byte ptr [rsi], 0xfa ; call qword ptr [rax + 0x36]
0x0000000000485be1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000480529 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048a2da : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x00000000004aef85 : sal dh, cl ; call qword ptr [rax]
0x0000000000495d94 : sal dl, 0xfa ; call rax
0x0000000000495f24 : sal dword ptr [rax], 1 ; sti ; call rcx
0x0000000000447d53 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481a2d : sal edi, 0xd8 ; ret
0x000000000047a99c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004b5500 : sar al, 1 ; cld ; call qword ptr [rbx]
0x000000000047342f : sar al, 1 ; dec dword ptr [rax + 1] ; ret
0x0000000000403150 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000044a383 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004808b3 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000485150 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000402882 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047c7f1 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x0000000000494eb4 : sar byte ptr [rbx - 0x422f0007], 1 ; stc ; call rax
0x0000000000494eb0 : sar byte ptr [rcx - 0x442f0007], 1 ; stc ; call rax
0x000000000044792e : sar byte ptr [rcx], 0xc8 ; jle 0x447968 ; movsxd rax, ecx ; ret
0x000000000049572c : sar byte ptr [rcx], 0xfa ; call qword ptr [rax + 0x39]
0x000000000044e28d : sar byte ptr [rcx], cl ; ret
0x0000000000463067 : sar byte ptr [rcx], cl ; retf 0x147f
0x0000000000459786 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a869f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000495e3c : sar cl, 1 ; cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x0000000000495211 : sar cl, cl ; call qword ptr [rax]
0x0000000000439293 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x439298 ; ret
0x00000000004595db : sar dword ptr [rax - 4], 1 ; call qword ptr [rax + 0x2e66c3f3]
0x0000000000422aa9 : sar dword ptr [rbp + 0x29], cl ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000448269 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000047280c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000411eef : sar eax, 2 ; mov qword ptr [rsi], rax ; call qword ptr [rbp + 0x30]
0x0000000000412148 : sar eax, 2 ; mov qword ptr [rsp + 0x30], rax ; call qword ptr [r13 + 0x30]
0x00000000004891ee : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004951cd : sar ecx, 1 ; call qword ptr [rax - 0x2e]
0x000000000049520d : sar ecx, 1 ; inc eax ; sar cl, cl ; call qword ptr [rax]
0x00000000004a8403 : sar ecx, 1 ; jnp 0x4a83c0 ; ret
0x00000000004164f7 : sar edx, 2 ; call 0x412750
0x000000000046a125 : sar edx, 2 ; call qword ptr [rbx + 0x38]
0x0000000000472912 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042c927 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000448723 : sar esi, 1 ; jg 0x44874b ; vzeroupper ; ret
0x00000000004488bc : sar esi, 1 ; jg 0x4488e4 ; vzeroupper ; ret
0x000000000046c411 : sar esi, 2 ; mov rdx, r14 ; call qword ptr [rax + 0x38]
0x000000000047a66b : sar esp, 0xff ; call qword ptr [rax + 0x48d28548]
0x000000000046c410 : sar r14, 2 ; mov rdx, r14 ; call qword ptr [rax + 0x38]
0x000000000047280b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000411eee : sar r8, 2 ; mov qword ptr [rsi], rax ; call qword ptr [rbp + 0x30]
0x0000000000412147 : sar r8, 2 ; mov qword ptr [rsp + 0x30], rax ; call qword ptr [r13 + 0x30]
0x00000000004891ed : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004164f6 : sar rdx, 2 ; call 0x412750
0x000000000046a124 : sar rdx, 2 ; call qword ptr [rbx + 0x38]
0x0000000000472911 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042c926 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004642a5 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044b4b1 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000046771d : sbb al, 0x29 ; ret 0xe683
0x0000000000468657 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a9702 : sbb al, 0x8c ; retf
0x0000000000495c0d : sbb al, 0xfa ; call qword ptr [rax + 0x1e]
0x0000000000495bcd : sbb al, 0xfa ; call rax
0x000000000045f3ba : sbb al, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042209d : sbb al, 7 ; add al, ch ; mov edi, dword ptr [rdi - 1] ; call qword ptr [rax + 0x1f0f2e66]
0x000000000040e192 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000464d86 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048daf5 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call r14
0x0000000000407033 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000045f624 : sbb al, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046a82b : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b1c8 : sbb al, ch ; ret 0xffaf
0x0000000000409597 : sbb al, ch ; retf
0x0000000000495bc9 : sbb bh, dl ; call qword ptr [rax + 0x1c]
0x00000000004a8492 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a7185 : sbb bl, byte ptr [rsi] ; ret
0x0000000000482774 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004866f4 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000485819 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004762d1 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047edd1 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000419f71 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045ec14 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041c545 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000482775 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000046a132 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004127f0 : sbb byte ptr [rax - 0x73], cl ; ja 0x41284d ; mov rdi, rax ; call qword ptr [rax + 8]
0x000000000048e8fa : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004860cf : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000483157 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004802d5 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x0000000000474e40 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000048054c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004172c1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041af1b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004863ff : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004122ce : sbb byte ptr [rax - 0x77], cl ; retf
0x000000000041a733 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000487ea3 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; and ecx, dword ptr [rdi - 4] ; call qword ptr [rax + 0x538b3d83]
0x0000000000476a8c : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; cmp ah, byte ptr [rbx - 3] ; call qword ptr [rax + 0x31f1894c]
0x00000000004866f5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000044a3c1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040a67a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000048b375 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000044e06c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000412697 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000419157 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047262a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000458fb2 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000041a64e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000472b3e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000490bef : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x490c6c ; ret 0x8b48
0x0000000000455238 : sbb byte ptr [rcx - 0x77], al ; ret
0x0000000000477d69 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; pop rbp ; push rax ; std ; call qword ptr [rax - 0x1107a3a]
0x000000000040dd30 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000042021b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048581a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000042248d : sbb byte ptr [rdi], al ; add al, ch ; wait ; jnp 0x422493 ; call qword ptr [rax + 0x1f0f2e66]
0x00000000004040b3 : sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000487bdb : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004980f0 : sbb byte ptr [rip + 0x2be8fffc], ch ; cld ; call qword ptr [rax + 0x2d]
0x000000000041ea1d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x00000000004589bd : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043ec1d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044086a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000044008a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044047a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc9a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f77d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ef5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e73d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043fe39 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f29d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ea7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e25d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043f43d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000044032a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fb4a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440c5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e59d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e6d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f3d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eef3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044022b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440b5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f713 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea13 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043e533 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f233 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044037b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fb9b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048ec25 : sbb dh, bl ; ret
0x0000000000400590 : sbb dl, 0 ; test dl, dl ; jne 0x400599 ; ret
0x0000000000495184 : sbb dl, 0xf9 ; call qword ptr [rax - 0x24]
0x0000000000495c01 : sbb dl, bh ; call rax
0x00000000004b2798 : sbb dl, dh ; std ; call rdx
0x00000000004891cb : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048eb19 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044cb64 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000462109 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a9a3d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000046329f : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000467000 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000447347 : sbb eax, -1 ; ret
0x000000000048dc72 : sbb eax, 0x18c48348 ; ret
0x0000000000495bd1 : sbb eax, 0x1f50fffa ; cli ; call rax
0x0000000000490cb0 : sbb eax, 0x22c0fb ; jne 0x490c98 ; pop rbx ; ret
0x00000000004a8493 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x0000000000439379 : sbb eax, 0x394c0028 ; ret 0x830f
0x0000000000403fc8 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045eaa2 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407daa : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x00000000004071cc : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004832ba : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042cd87 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048e7ff : sbb eax, eax ; ret
0x0000000000447345 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000425301 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004a95a8 : sbb ebp, ebx ; retf
0x00000000004735d9 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x000000000045196e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000040400d : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004a9339 : sbb edi, ebp ; retf
0x0000000000495c09 : sbb edi, edx ; call rax
0x0000000000495c05 : sbb edx, edi ; call qword ptr [rax + 0x1b]
0x0000000000495bc5 : sbb edx, edi ; call rax
0x00000000004acd41 : sbb esi, esi ; call rsp
0x0000000000488377 : sbb esp, dword ptr [rbx] ; add byte ptr [rax], al ; jne 0x48837f ; pop rbx ; ret
0x000000000042be22 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004408be : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000495d55 : scasb al, byte ptr [rdi] ; cli ; call rax
0x00000000004a99e9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000004409bd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000411eba : scasd eax, dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbp + 0x20]
0x0000000000412107 : scasd eax, dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [r13 + 0x20]
0x00000000004155ae : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e549 : scasd eax, dword ptr [rdi] ; ret
0x000000000045bebe : scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004123b6 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041a649 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000449233 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000047f31d : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004a8714 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a798f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044cbfc : setae al ; ret
0x000000000045bbea : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004195dc : setne al ; neg eax ; ret
0x0000000000495138 : shl ah, 0xf9 ; inc eax ; out 0xf9, al ; call qword ptr [rax - 0x27]
0x000000000049509c : shl bh, 0xf9 ; call qword ptr [rax - 0x26]
0x000000000042c66b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042c62b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000495bd8 : shl byte ptr [rax], 1 ; cli ; call qword ptr [rax + 0x22]
0x0000000000400b90 : shl byte ptr [rcx + rbp - 0x3f], 0x89 ; enter -0x67b8, 0x5d ; ret
0x0000000000494c60 : shl byte ptr [rcx], 1 ; stc ; push rax ; and bh, cl ; call qword ptr [rax]
0x0000000000490cb2 : shl byte ptr [rdx], 0 ; jne 0x490c98 ; pop rbx ; ret
0x0000000000490155 : shl byte ptr [rdx], cl ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000044758f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042563b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000445933 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004410e5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042e59b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e5b2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000473f56 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473f67 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042e491 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000495098 : shl ch, 0xf9 ; inc eax ; out 0xf9, eax ; call qword ptr [rax - 0x26]
0x000000000049513c : shl dh, 0xf9 ; call qword ptr [rax - 0x27]
0x00000000004a0cb0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a829d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000041e44b : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000004a8588 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000447572 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042563f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000473f52 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004473eb : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042e516 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5cd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042e5b6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042e59f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d05b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e531 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042bfbc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042e3f1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044ef21 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044ef1d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000048398c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000483917 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004838e6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047b581 : shl edi, 4 ; add r15, rax ; call qword ptr [r15 + 0x60]
0x000000000047b580 : shl r15, 4 ; add r15, rax ; call qword ptr [r15 + 0x60]
0x000000000048398b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000483916 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004838e5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a7b44 : shr al, cl ; add al, 0x3d ; retf
0x000000000041df6c : shr byte ptr [rbx + 7], 1 ; add byte ptr [rax - 0x17], dl ; ret
0x0000000000426cef : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000495b9c : shr byte ptr [rcx], 1 ; cli ; push qword ptr [rax] ; or al, 0xfa ; call qword ptr [rax + 0xd]
0x000000000042529a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000458768 : shr byte ptr [rcx], cl ; ret
0x000000000042c92b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004a9947 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000494c80 : shr byte ptr [rdx], 1 ; stc ; push rax ; sub edi, ecx ; call qword ptr [rax]
0x0000000000468b79 : shr cl, 0x37 ; idiv bh ; call qword ptr [rax + 0x2dbe]
0x000000000048d752 : shr cl, 1 ; ret 0xfffe
0x00000000004690ec : shr cl, cl ; jrcxz 0x4690f0 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048d25f : shr cl, cl ; ret
0x000000000045a2cf : shr cl, cl ; retf
0x0000000000450459 : shr eax, 0x31 ; or eax, 0xd830000 ; stosb byte ptr [rdi], al ; retf 0x26
0x0000000000448f0a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047501b : shr eax, 2 ; ret
0x0000000000475523 : shr eax, 2 ; vzeroupper ; ret
0x0000000000448f55 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041fade : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000483a9c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000483a21 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004839f0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483a9b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000483a20 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004839ef : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047501a : shr rax, 2 ; ret
0x0000000000475522 : shr rax, 2 ; vzeroupper ; ret
0x00000000004ad331 : sldt word ptr [rax] ; in al, dx ; cmp esi, esi ; call qword ptr [rdi]
0x000000000049fe89 : sldt word ptr [rax] ; ret
0x0000000000454a28 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000474856 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042bdd7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044dff5 : stc ; add cl, ch ; retf
0x000000000045dbdf : stc ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000494e6e : stc ; call qword ptr [rax + 0x10fff991]
0x0000000000494e76 : stc ; call qword ptr [rax + 0x10fff992]
0x0000000000494e7e : stc ; call qword ptr [rax + 0x10fff993]
0x00000000004902f3 : stc ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000494efa : stc ; call qword ptr [rax + 0x20fff9bf]
0x0000000000494c6e : stc ; call qword ptr [rax + 0x26]
0x0000000000494c8e : stc ; call qword ptr [rax + 0x2f]
0x0000000000494c96 : stc ; call qword ptr [rax + 0x30fff931]
0x0000000000494d8e : stc ; call qword ptr [rax + 0x40fff98e]
0x0000000000494cde : stc ; call qword ptr [rax + 0x4c]
0x000000000049511e : stc ; call qword ptr [rax + 0x50fff9d9]
0x0000000000494d22 : stc ; call qword ptr [rax + 0x64]
0x0000000000494e9a : stc ; call qword ptr [rax + 0x68fff997]
0x0000000000494fa6 : stc ; call qword ptr [rax + 0x70fff9b4]
0x0000000000494f26 : stc ; call qword ptr [rax + 0x70fff9b5]
0x0000000000495102 : stc ; call qword ptr [rax + 0x70fff9db]
0x00000000004950ce : stc ; call qword ptr [rax + 0x70fff9e1]
0x0000000000494d0e : stc ; call qword ptr [rax + 0xfff95d]
0x00000000004b04d2 : stc ; call qword ptr [rax + 1]
0x00000000004951f2 : stc ; call qword ptr [rax - 0x1f000637]
0x0000000000495012 : stc ; call qword ptr [rax - 0x1f000655]
0x0000000000495026 : stc ; call qword ptr [rax - 0x1f000663]
0x000000000049510a : stc ; call qword ptr [rax - 0x21]
0x0000000000495186 : stc ; call qword ptr [rax - 0x24]
0x0000000000495122 : stc ; call qword ptr [rax - 0x25]
0x000000000049509e : stc ; call qword ptr [rax - 0x26]
0x000000000049513e : stc ; call qword ptr [rax - 0x27]
0x00000000004951ce : stc ; call qword ptr [rax - 0x2e]
0x0000000000494fde : stc ; call qword ptr [rax - 0x2f000669]
0x00000000004951e2 : stc ; call qword ptr [rax - 0x3c]
0x0000000000494f2e : stc ; call qword ptr [rax - 0x47]
0x0000000000494c76 : stc ; call qword ptr [rax - 0x4f0006d8]
0x0000000000495056 : stc ; call qword ptr [rax - 0x53]
0x0000000000495002 : stc ; call qword ptr [rax - 0x5a]
0x0000000000494e92 : stc ; call qword ptr [rax - 0x6a]
0x0000000000494ef6 : stc ; call qword ptr [rax - 0x6f000643]
0x0000000000494e66 : stc ; call qword ptr [rax - 0x6f000671]
0x0000000000494d7a : stc ; call qword ptr [rax - 0x6f]
0x0000000000494c66 : stc ; call qword ptr [rax]
0x00000000004b156a : stc ; call qword ptr [rbp + 0xb]
0x00000000004b094e : stc ; call qword ptr [rbp + 1]
0x00000000004b05aa : stc ; call qword ptr [rbx + 4]
0x00000000004b0802 : stc ; call qword ptr [rbx]
0x00000000004b0866 : stc ; call qword ptr [rcx + 1]
0x0000000000494da2 : stc ; call qword ptr [rcx]
0x00000000004b104a : stc ; call qword ptr [rdi]
0x00000000004b0776 : stc ; call qword ptr [rdx]
0x00000000004b132a : stc ; call qword ptr [rsi]
0x0000000000494c5e : stc ; call rax
0x0000000000494e06 : stc ; call rsi
0x00000000004b06fe : stc ; call rsp
0x0000000000495e31 : stc ; cli ; call qword ptr [rax - 0x4f000507]
0x0000000000495e29 : stc ; cli ; call qword ptr [rax - 7]
0x0000000000495e21 : stc ; cli ; call qword ptr [rax]
0x0000000000495e39 : stc ; cli ; call rax
0x0000000000495e2d : stc ; cli ; push qword ptr [rax - 7] ; cli ; call qword ptr [rax - 0x4f000507]
0x0000000000495e25 : stc ; cli ; push qword ptr [rax] ; stc ; cli ; call qword ptr [rax - 7]
0x0000000000495e3d : stc ; cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x00000000004640ae : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000469865 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000049515a : stc ; inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x0000000000494cd6 : stc ; inc dword ptr [rax + 0x49] ; stc ; push qword ptr [rax + 0x33] ; stc ; call qword ptr [rax + 0x4c]
0x0000000000494d1a : stc ; inc dword ptr [rax + 0x60fff94b] ; movsxd rdi, ecx ; call qword ptr [rax + 0x64]
0x00000000004950fa : stc ; inc dword ptr [rax - 0x19] ; stc ; call rax
0x000000000049517a : stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004950f6 : stc ; inc dword ptr [rax - 0x1b] ; stc ; inc dword ptr [rax - 0x19] ; stc ; call rax
0x0000000000495176 : stc ; inc dword ptr [rax - 0x1c] ; stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004951ee : stc ; inc dword ptr [rax - 0x38] ; stc ; call qword ptr [rax - 0x1f000637]
0x000000000049500e : stc ; inc dword ptr [rax - 0x56] ; stc ; call qword ptr [rax - 0x1f000655]
0x0000000000495022 : stc ; inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x0000000000495156 : stc ; inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x0000000000495116 : stc ; inc dword ptr [rax] ; in eax, 0xf9 ; inc dword ptr [rax] ; out 0xf9, eax ; call qword ptr [rax + 0x50fff9d9]
0x0000000000495052 : stc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax - 0x53]
0x0000000000494f9e : stc ; inc dword ptr [rax] ; mov cl, 0xf9 ; inc eax ; mov dl, 0xf9 ; call qword ptr [rax + 0x70fff9b4]
0x0000000000494ffe : stc ; inc dword ptr [rax] ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rax - 0x5a]
0x000000000049511a : stc ; inc dword ptr [rax] ; out 0xf9, eax ; call qword ptr [rax + 0x50fff9d9]
0x00000000004951ca : stc ; inc dword ptr [rax] ; sar ecx, 1 ; call qword ptr [rax - 0x2e]
0x0000000000494e02 : stc ; inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x0000000000495042 : stc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000495136 : stc ; inc eax ; in al, 0xf9 ; inc eax ; out 0xf9, al ; call qword ptr [rax - 0x27]
0x0000000000495096 : stc ; inc eax ; in eax, 0xf9 ; inc eax ; out 0xf9, eax ; call qword ptr [rax - 0x26]
0x0000000000494fee : stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x0000000000494fa2 : stc ; inc eax ; mov dl, 0xf9 ; call qword ptr [rax + 0x70fff9b4]
0x000000000049513a : stc ; inc eax ; out 0xf9, al ; call qword ptr [rax - 0x27]
0x000000000049509a : stc ; inc eax ; out 0xf9, eax ; call qword ptr [rax - 0x26]
0x00000000004951ba : stc ; inc eax ; retf
0x000000000049520e : stc ; inc eax ; sar cl, cl ; call qword ptr [rax]
0x0000000000494e8e : stc ; inc eax ; xchg eax, ebp ; stc ; call qword ptr [rax - 0x6a]
0x0000000000494dfe : stc ; inc esi ; xchg eax, ebx ; stc ; inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x00000000004a8404 : stc ; jnp 0x4a83c0 ; ret
0x0000000000430e78 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000449ce3 : stc ; mov rsi, r13 ; mov rdi, r12 ; call rbp
0x000000000042a4f7 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494d06 : stc ; push qword ptr [rax + 0x20fff95a] ; pop rsp ; stc ; call qword ptr [rax + 0xfff95d]
0x0000000000494c72 : stc ; push qword ptr [rax + 0x27] ; stc ; call qword ptr [rax - 0x4f0006d8]
0x0000000000494c92 : stc ; push qword ptr [rax + 0x30] ; stc ; call qword ptr [rax + 0x30fff931]
0x0000000000494cda : stc ; push qword ptr [rax + 0x33] ; stc ; call qword ptr [rax + 0x4c]
0x0000000000494ffa : stc ; push qword ptr [rax + 0xfff9a3] ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rax - 0x5a]
0x000000000049504e : stc ; push qword ptr [rax + 0xfff9aa] ; lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax - 0x53]
0x00000000004951c6 : stc ; push qword ptr [rax + 0xfff9cf] ; sar ecx, 1 ; call qword ptr [rax - 0x2e]
0x0000000000495106 : stc ; push qword ptr [rax - 0x23] ; stc ; call qword ptr [rax - 0x21]
0x000000000049507e : stc ; push qword ptr [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000049520a : stc ; push qword ptr [rax - 0x2f] ; stc ; inc eax ; sar cl, cl ; call qword ptr [rax]
0x00000000004951b6 : stc ; push qword ptr [rax - 0x36] ; stc ; inc eax ; retf
0x0000000000494f2a : stc ; push qword ptr [rax - 0x49] ; stc ; call qword ptr [rax - 0x47]
0x000000000049503e : stc ; push qword ptr [rax - 0x5b] ; stc ; inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000494fea : stc ; push qword ptr [rax - 0x62] ; stc ; inc eax ; lahf ; stc ; call qword ptr [rax]
0x000000000049501e : stc ; push qword ptr [rax - 0x67] ; stc ; inc dword ptr [rax - 0x64] ; stc ; call qword ptr [rax - 0x1f000663]
0x0000000000495082 : stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000494ea2 : stc ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000494c8a : stc ; push qword ptr [rax] ; stc ; call qword ptr [rax + 0x2f]
0x0000000000494e8a : stc ; push qword ptr [rax] ; xchg eax, ebp ; stc ; inc eax ; xchg eax, ebp ; stc ; call qword ptr [rax - 0x6a]
0x0000000000494c62 : stc ; push rax ; and bh, cl ; call qword ptr [rax]
0x0000000000495146 : stc ; push rax ; fdiv st(1), st(0) ; call rax
0x0000000000494d3a : stc ; push rax ; imul edi, ecx, 0xf96ae0ff ; call rax
0x0000000000494eaa : stc ; push rax ; mov bh, 0xf9 ; call rax
0x0000000000494c82 : stc ; push rax ; sub edi, ecx ; call qword ptr [rax]
0x000000000049500a : stc ; push rax ; test al, 0xf9 ; inc dword ptr [rax - 0x56] ; stc ; call qword ptr [rax - 0x1f000655]
0x0000000000494e96 : stc ; push rax ; xchg eax, esi ; stc ; call qword ptr [rax + 0x68fff997]
0x0000000000494d8a : stc ; push rdx ; nop ; stc ; call qword ptr [rax + 0x40fff98e]
0x0000000000439794 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042ce07 : stc ; xlatb ; ret 0xff2d
0x0000000000476a94 : std ; call qword ptr [rax + 0x31f1894c]
0x00000000004760fd : std ; call qword ptr [rax + 0x3fb8]
0x000000000047093d : std ; call qword ptr [rax + 0x54415541]
0x00000000004711bd : std ; call qword ptr [rax + 0x56415741]
0x000000000044b59d : std ; call qword ptr [rax + 0x87d8b48]
0x0000000000477d71 : std ; call qword ptr [rax - 0x1107a3a]
0x00000000004b585a : std ; call qword ptr [rax]
0x00000000004a5a5e : std ; call qword ptr [rbx + 0x25fffd7d]
0x00000000004b58ca : std ; call qword ptr [rbx + 1]
0x00000000004b65c2 : std ; call qword ptr [rbx]
0x00000000004b580a : std ; call qword ptr [rdi]
0x00000000004b64e2 : std ; call qword ptr [rdx + 1]
0x00000000004b6052 : std ; call qword ptr [rdx]
0x00000000004a59b2 : std ; call rax
0x00000000004b279a : std ; call rdx
0x00000000004ab462 : std ; call rsp
0x0000000000476f0a : std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474878 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044b0fe : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000046a872 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424e32 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000474904 : std ; dec dword ptr [rdi] ; mov dh, 0xf3 ; mov rdi, qword ptr [r12] ; call rbp
0x000000000048314b : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a59ae : std ; inc dword ptr [rbx - 0x7a] ; std ; call rax
0x00000000004a59aa : std ; inc dword ptr [rbx - 0x7a] ; std ; inc dword ptr [rbx - 0x7a] ; std ; call rax
0x00000000004825fe : std ; jbe 0x482608 ; ret
0x000000000043069b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044c10e : std ; push rbx ; ret
0x0000000000447cf3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a933a : std ; retf
0x0000000000488376 : std ; sbb esp, dword ptr [rbx] ; add byte ptr [rax], al ; jne 0x48837f ; pop rbx ; ret
0x000000000042c6d1 : std ; xlatb ; ret
0x000000000042c6c9 : std ; xlatb ; ret 0xc085
0x000000000042cc43 : std ; xlatb ; ret 0xe883
0x0000000000474231 : std ; xlatb ; retf 0xc985
0x0000000000474104 : std ; xlatb ; retf 0xfdc5
0x0000000000474164 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000004229c1 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000412493 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044e233 : sti ; call qword ptr [rax + 0x1f0f2e66]
0x000000000044c43d : sti ; call qword ptr [rax + 0x48ff3155]
0x000000000045d8dd : sti ; call qword ptr [rax + 0x66c3c031]
0x0000000000497236 : sti ; call qword ptr [rax + 0x76]
0x0000000000495f3a : sti ; call qword ptr [rax - 0x630004d0]
0x0000000000495eda : sti ; call qword ptr [rax]
0x0000000000490a6e : sti ; call qword ptr [rbp + 0x53]
0x0000000000497272 : sti ; call qword ptr [rbp + 0x73]
0x000000000049721a : sti ; call qword ptr [rcx]
0x0000000000495f42 : sti ; call qword ptr [rdi - 0x630004d0]
0x00000000004964b2 : sti ; call qword ptr [rdi]
0x0000000000496366 : sti ; call qword ptr [rsi + 0x40]
0x00000000004b39b2 : sti ; call qword ptr [rsi + 1]
0x00000000004963c2 : sti ; call qword ptr [rsi + rdi + 0x3e61fffb]
0x0000000000495f1e : sti ; call qword ptr [rsi]
0x0000000000495efa : sti ; call rax
0x00000000004b2e02 : sti ; call rbp
0x00000000004964ee : sti ; call rbx
0x0000000000495f22 : sti ; call rcx
0x0000000000495f02 : sti ; call rdi
0x000000000044e231 : sti ; cmp ebx, edi ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000449f1f : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000490d0d : sti ; dec dword ptr [rcx - 0x75] ; jge 0x490d23 ; add rdi, rbx ; call rbp
0x000000000049726e : sti ; dec dword ptr [rcx] ; jb 0x49726e ; call qword ptr [rbp + 0x73]
0x0000000000495f1a : sti ; dec ecx ; xor bl, bh ; call qword ptr [rsi]
0x000000000041e2fb : sti ; idiv bh ; call qword ptr [rax - 0x402e76b8]
0x00000000004964e6 : sti ; inc dword ptr [rsi + rdi + 0x3e84fffb] ; sti ; call rbx
0x000000000049726a : sti ; lcall [rcx + rsi*2 - 5] ; dec dword ptr [rcx] ; jb 0x49726e ; call qword ptr [rbp + 0x73]
0x0000000000496362 : sti ; lcall [rsi + 0x3f] ; sti ; call qword ptr [rsi + 0x40]
0x0000000000430a78 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044c471 : sti ; or dword ptr [rdi], esp ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a858a : sti ; ret
0x00000000004516f9 : sti ; ret 0x26
0x0000000000490cb1 : sti ; shl byte ptr [rdx], 0 ; jne 0x490c98 ; pop rbx ; ret
0x000000000045b457 : sti ; test rax, rax ; je 0x45b45f ; call rax
0x000000000044c03f : sti ; xor edx, edx ; xor esi, esi ; call rbp
0x000000000044b4f3 : sti ; xor esi, esi ; mov r12d, edx ; call rbp
0x000000000045713c : stosb byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x56415741]
0x00000000004a8a64 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000448a1b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000410982 : stosb byte ptr [rdi], al ; ret 3
0x0000000000450461 : stosb byte ptr [rdi], al ; retf 0x26
0x0000000000495011 : stosb byte ptr [rdi], al ; stc ; call qword ptr [rax - 0x1f000655]
0x0000000000495051 : stosb byte ptr [rdi], al ; stc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax - 0x53]
0x00000000004251b1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412c5c : stosd dword ptr [rdi], eax ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbp + 0x20]
0x000000000046952e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041fae3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a9b6c : stosd dword ptr [rdi], eax ; ret
0x00000000004a9a6a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000425461 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041fae2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a9f51 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004b4251 : sub ah, bh ; call qword ptr [rax + 5]
0x00000000004828f6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000448c52 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000044d370 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000042dbe3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004acee8 : sub al, 0xb ; add byte ptr [rax], al ; and dh, dh ; call qword ptr [rdx]
0x0000000000424e30 : sub al, 0xb6 ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000495b4d : sub al, 0xfa ; call qword ptr [rax + 0xfffa2b]
0x0000000000495b49 : sub al, 0xfa ; call qword ptr [rax]
0x0000000000419560 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004136a5 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004194f6 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a38d5], 1 ; ret
0x0000000000419465 : sub al, byte ptr [rax] ; ret
0x000000000042525a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x00000000004255a2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041a027 : sub al, byte ptr cs:[rax] ; ret
0x000000000042cfa5 : sub al, ch ; std ; xlatb ; ret
0x0000000000449e5d : sub bh, byte ptr [rax + 0x77] ; syscall
0x00000000004854fa : sub bh, byte ptr [rbx] ; ret
0x0000000000494c81 : sub bh, cl ; push rax ; sub edi, ecx ; call qword ptr [rax]
0x0000000000495a19 : sub bh, dl ; call qword ptr [rdx]
0x0000000000495b99 : sub bh, dl ; call rax
0x000000000046450b : sub bl, cl ; in eax, 0xdf ; loopne 0x46449a ; ret
0x0000000000477e27 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000416e3c : sub byte ptr [rax + 0x39], cl ; retf
0x0000000000477e26 : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000484483 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x00000000004591bb : sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000423694 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048cd5c : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004708d4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000404b53 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000045ddfc : sub byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000040d969 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9d4 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da89 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040da06 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040d9bf : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040da1e : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040dabf : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x0000000000484e1d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484e5e ; leave ; ret
0x000000000048fbb2 : sub byte ptr [rbp + 1], cl ; retf
0x0000000000449a14 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000488c73 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000488c72 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000040407b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x00000000004040af : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000044ce9c : sub byte ptr [rcx], al ; ret
0x00000000004224b6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004b25e4 : sub byte ptr [rdx], ah ; add al, cl ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004253ba : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x00000000004253fb : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000041a026 : sub ch, byte ptr [rsi] ; sub al, byte ptr [rax] ; ret
0x0000000000468f56 : sub cl, bpl ; ret 0xffe8
0x000000000040ecad : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000468f57 : sub cl, ch ; ret 0xffe8
0x000000000045f024 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000049591c : sub dh, byte ptr [rdx + rdi*8] ; call rax
0x0000000000480c4a : sub dl, dh ; call r11
0x000000000047635e : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a890d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000485913 : sub dword ptr [rax + 0x23], edi ; add cl, ch ; retf
0x0000000000478142 : sub dword ptr [rax + 0xf000002], -0x7b ; ret
0x000000000048bac6 : sub dword ptr [rax - 0x80], eax ; call qword ptr [rax + 0x74]
0x000000000042057a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042527c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004205da : sub dword ptr [rax], eax ; ret
0x00000000004a95a2 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042529b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000482fc5 : sub dword ptr [rdx], eax ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000042b1a7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042e3c6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042b061 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a9e5a : sub dword ptr [rsi], 0x76 ; retf
0x000000000040dccd : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042cd37 : sub eax, -1 ; jne 0x42cd40 ; vzeroupper ; ret
0x0000000000423c0a : sub eax, 0x10 ; ret
0x00000000004980f1 : sub eax, 0x2be8fffc ; cld ; call qword ptr [rax + 0x2d]
0x0000000000495b45 : sub eax, 0x2c90fffa ; cli ; call qword ptr [rax]
0x0000000000495b41 : sub eax, 0x2d10fffa ; cli ; call qword ptr [rax + 0x10fffa2c]
0x0000000000494c89 : sub eax, 0x2e30fff9 ; stc ; call qword ptr [rax + 0x2f]
0x000000000046a404 : sub eax, 0x83000000 ; ret
0x00000000004677d5 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004a75a6 : sub eax, 0xea4ca798 ; retf
0x0000000000425302 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000459654 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004477c4 : sub eax, 1 ; ret
0x0000000000482646 : sub eax, dword ptr [0] ; ret
0x00000000004aef81 : sub eax, dword ptr [rax] ; add ah, bh ; sal dh, cl ; call qword ptr [rax]
0x000000000040398d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004aeeed : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; retf
0x0000000000400b1a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004055e2 : sub eax, dword ptr [rax] ; call 0x4220b0
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401cdf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045efc6 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000419e1e : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000004494ea : sub eax, dword ptr [rdx + rcx*4] ; je 0x4494d0 ; ret
0x0000000000425462 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000419133 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000040398c : sub eax, dword ptr gs:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044792d : sub eax, eax ; cmp eax, ecx ; jle 0x447968 ; movsxd rax, ecx ; ret
0x0000000000481ab4 : sub eax, eax ; ret
0x000000000042cd83 : sub eax, ecx ; je 0x42cd90 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000418809 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000485110 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000426a2c : sub eax, ecx ; ret
0x00000000004418d9 : sub eax, edi ; ret
0x000000000047512e : sub eax, edi ; shr rax, 2 ; ret
0x00000000004851f3 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041915b : sub eax, edx ; ret
0x0000000000475520 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042cd4c : sub eax, edx ; vzeroupper ; ret
0x000000000044798d : sub eax, esi ; ret
0x0000000000481ab3 : sub eax, r8d ; ret
0x00000000004a87fe : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000414b50 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046563f : sub ebp, ecx ; retf
0x0000000000413726 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a7295 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044dd08 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000419fb1 : sub ecx, dword ptr [rax] ; sub al, byte ptr [rax] ; ret
0x00000000004746b4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000400b92 : sub ecx, eax ; mov eax, ecx ; cdqe ; pop rbp ; ret
0x0000000000494c7d : sub ecx, edi ; call rax
0x0000000000494c85 : sub edi, ecx ; call qword ptr [rax]
0x0000000000495995 : sub edi, edx ; call rax
0x00000000004980f5 : sub edi, esp ; call qword ptr [rax + 0x2d]
0x0000000000460ba1 : sub edi, esp ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000419160 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000419155 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042c1d4 : sub edx, eax ; jbe 0x42c210 ; add rax, rdi ; ret
0x000000000042c1e4 : sub edx, eax ; jbe 0x42c210 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c1f4 : sub edx, eax ; jbe 0x42c210 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c204 : sub edx, eax ; jbe 0x42c210 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000495b61 : sub edx, edi ; call qword ptr [rax]
0x00000000004959e1 : sub edx, edi ; call qword ptr [rdx + 0x31]
0x0000000000495b5d : sub edx, edi ; push qword ptr [rax + 0x29] ; cli ; call qword ptr [rax]
0x0000000000495b9d : sub edx, edi ; push qword ptr [rax] ; or al, 0xfa ; call qword ptr [rax + 0xd]
0x0000000000424601 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000004139d2 : sub edx, esi ; call qword ptr [r13 + 0x70]
0x00000000004118fe : sub edx, esi ; call qword ptr [r15 + 0x70]
0x000000000045ec08 : sub edx, esi ; call qword ptr [rbx + 0x38]
0x00000000004140ff : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004164f4 : sub edx, esi ; sar rdx, 2 ; call 0x412750
0x000000000046a122 : sub edx, esi ; sar rdx, 2 ; call qword ptr [rbx + 0x38]
0x000000000048b373 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000470996 : sub esp, 0x80 ; call 0x44cc00
0x000000000041097b : sub esp, 0x80 ; call 0x44cc30
0x0000000000493031 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000475fc3 : sub esp, 8 ; syscall
0x00000000004245d1 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000460ba0 : sub r15, r12 ; mov rdx, r15 ; call qword ptr [rax + 0x38]
0x0000000000418808 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000423c09 : sub rax, 0x10 ; ret
0x00000000004477c3 : sub rax, 1 ; ret
0x0000000000482645 : sub rax, qword ptr [0] ; ret
0x0000000000419e1d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000482644 : sub rax, qword ptr fs:[0] ; ret
0x0000000000485e22 : sub rax, r8 ; ret
0x00000000004418d8 : sub rax, rdi ; ret
0x000000000047512d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000447893 : sub rax, rdx ; ret
0x000000000044192f : sub rax, rdx ; vzeroupper ; ret
0x000000000044798c : sub rax, rsi ; ret
0x000000000042c1d3 : sub rdx, rax ; jbe 0x42c210 ; add rax, rdi ; ret
0x00000000004139d1 : sub rdx, rsi ; call qword ptr [r13 + 0x70]
0x00000000004118fd : sub rdx, rsi ; call qword ptr [r15 + 0x70]
0x000000000045ec07 : sub rdx, rsi ; call qword ptr [rbx + 0x38]
0x00000000004164f3 : sub rdx, rsi ; sar rdx, 2 ; call 0x412750
0x000000000046a121 : sub rdx, rsi ; sar rdx, 2 ; call qword ptr [rbx + 0x38]
0x000000000048b372 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000470995 : sub rsp, 0x80 ; call 0x44cc00
0x000000000041097a : sub rsp, 0x80 ; call 0x44cc30
0x0000000000493030 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000475fc2 : sub rsp, 8 ; syscall
0x000000000040137c : syscall
0x0000000000482377 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x0000000000418074 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004760c5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048bb03 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b0064 : test al, 0x3c ; add byte ptr [rax], al ; mov byte ptr [rcx - 9], dl ; call qword ptr [rsi]
0x000000000044bace : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004b1564 : test al, 0x51 ; add byte ptr [rax], al ; js 0x4b1537 ; stc ; call qword ptr [rbp + 0xb]
0x000000000044c86a : test al, 0x75 ; ret
0x00000000004b25a8 : test al, 0x94 ; cli ; call qword ptr [rdi]
0x00000000004a7b57 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004a753e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000049500d : test al, 0xf9 ; inc dword ptr [rax - 0x56] ; stc ; call qword ptr [rax - 0x1f000655]
0x000000000040d8e1 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047f335 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000426cea : test al, al ; jne 0x426cd0 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000478ae3 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000461229 : test al, dl ; adc al, 0 ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx + 0xf]
0x00000000004aa464 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000047376c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a8911 : test bh, dl ; retf 0xdf7f
0x000000000041a738 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000410c2f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x00000000004587e2 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000045bf6d : test byte ptr [rax - 0x75], 0x7c ; and al, 0x18 ; call rbp
0x0000000000459d41 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x0000000000416b19 : test byte ptr [rax - 0x77], 0xdf ; call qword ptr [r15 + 0x58]
0x0000000000414612 : test byte ptr [rax - 0x77], 0xdf ; call qword ptr [rax + 0x40]
0x000000000047110f : test byte ptr [rax - 0x77], 0xef ; call qword ptr [rax + 0x38]
0x0000000000410b61 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000046ba69 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000040ebca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041aafa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048642a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000445b0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000444f4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041948a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000413a0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004125ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041944a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041838a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044594a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b0440 : test byte ptr [rax], al ; add byte ptr [rsp + rsi*8 - 8], cl ; call qword ptr [rsi + 0x16]
0x000000000044fe52 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046b96c : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000419c2d : test byte ptr [rbx], 1 ; jne 0x419c38 ; call qword ptr [rbx + 0xe8]
0x00000000004735ff : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x0000000000470c1f : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call qword ptr [rdi + 0x38]
0x000000000048e7a2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x000000000044b4f5 : test byte ptr [rcx - 0x77], 0xd4 ; call rbp
0x00000000004628e2 : test byte ptr [rcx - 0x7a000007], al ; ror byte ptr [rdi], 0x84 ; ret
0x000000000042aab6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b296 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000429dc6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b1a6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000429ae6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044c564 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x0000000000470d69 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000424e36 : test byte ptr [rdi], 0x84 ; ret
0x000000000044b0af : test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044abc6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000473af4 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000473b0c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004045df : test byte ptr [rdx + 0x39fffffe], bl ; call 0xffffffff872c0e5c
0x0000000000473754 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000046a4f4 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045ff24 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047434d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000004128e4 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x00000000004540a1 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004417bd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004964ec : test byte ptr [rsi], bh ; sti ; call rbx
0x000000000042bdd6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b0851 : test cl, bh ; call qword ptr [rbx]
0x00000000004b0865 : test cl, bh ; call qword ptr [rcx + 1]
0x000000000042a4f6 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bbf6 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048a9fa : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000042a216 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004282a6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004285a6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004294a6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bce6 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004291a6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x0000000000428ea6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428ba6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d4b1 : test cl, ch ; retf 0xfffe
0x000000000042ac26 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bb06 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044744f : test cl, cl ; jne 0x447440 ; ret
0x00000000004474ff : test cl, cl ; jne 0x4474f0 ; ret
0x00000000004477bf : test cl, cl ; jne 0x4477b0 ; sub rax, 1 ; ret
0x0000000000445994 : test dl, 0x40 ; jne 0x445950 ; lea rax, [rdi + 7] ; ret
0x00000000004459c2 : test dl, 4 ; jne 0x445950 ; lea rax, [rdi + 3] ; ret
0x0000000000495cd5 : test dl, bh ; call rax
0x0000000000400593 : test dl, dl ; jne 0x400599 ; ret
0x000000000040dc36 : test dl, dl ; jne 0x40dc13 ; ret
0x000000000044766f : test dl, dl ; jne 0x447660 ; lea rax, [rcx - 1] ; ret
0x0000000000481a27 : test dl, dl ; jne 0x4819fa ; movsx eax, cl ; neg eax ; ret
0x000000000044c1b6 : test dword ptr [rax + 0x49000000], edx ; mov edi, dword ptr [rbp] ; call r12
0x00000000004926f3 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000403d4f : test dword ptr [rax + rax + 0x58b0000], ecx ; retf 0x2b8b
0x000000000044c186 : test dword ptr [rax + rax - 0x74b70000], ebx ; jge 0x44c18f ; call r12
0x000000000047376d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x00000000004699d6 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000045f999 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000046a0e6 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbce0
0x0000000000460b9f : test dword ptr [rbp + 0x29], 0xfa894ce7 ; call qword ptr [rax + 0x38]
0x000000000045a3fe : test dword ptr [rbp + 0xffffff9], ecx ; mov bh, 0x15 ; retf 0x3db
0x000000000042c158 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000044a8d9 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042dec7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e316 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cf98 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x00000000004209b8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047626b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x0000000000409b26 : test dword ptr [rcx + 0x55], 0x8d445441 ; call qword ptr [ebp + 0x53]
0x000000000042de9d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ddad : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042dcbd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041ddb2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x0000000000411ea8 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000048eb84 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041dd4c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042dbe2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000474133 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000044a546 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x00000000004471d2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460861 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000041061d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042e0e8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a89ed : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000480899 : test eax, 0x5b010023 ; ret
0x00000000004a9840 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433d66 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044caeb : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400412 ; call rax
0x0000000000423b81 : test eax, eax ; je 0x423b90 ; lea rax, [rdx - 0x10] ; ret
0x000000000042bea8 : test eax, eax ; je 0x42bead ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044b2e8 : test eax, eax ; je 0x44b2ee ; ret
0x000000000044e256 : test eax, eax ; je 0x44e260 ; ret
0x000000000045a054 : test eax, eax ; je 0x45a05a ; call rax
0x000000000045b459 : test eax, eax ; je 0x45b45f ; call rax
0x0000000000485be0 : test eax, eax ; je 0x485bf0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490048 : test eax, eax ; je 0x490050 ; ret
0x0000000000490158 : test eax, eax ; je 0x490160 ; ret
0x00000000004918f1 : test eax, eax ; je 0x4918fc ; call rax
0x000000000041817c : test eax, eax ; jne 0x418170 ; ret
0x0000000000419114 : test eax, eax ; jne 0x419108 ; ret
0x000000000042c185 : test eax, eax ; jne 0x42c1e0 ; xor eax, eax ; ret
0x000000000042c601 : test eax, eax ; jne 0x42c620 ; xor eax, eax ; vzeroupper ; ret
0x000000000044a6a6 : test eax, eax ; jne 0x44a6c0 ; xor eax, eax ; syscall
0x000000000044a776 : test eax, eax ; jne 0x44a790 ; mov eax, 1 ; syscall
0x000000000044a8b3 : test eax, eax ; jne 0x44a918 ; mov eax, 0x48 ; syscall
0x000000000044aa46 : test eax, eax ; jne 0x44aa60 ; mov eax, 3 ; syscall
0x000000000044cc20 : test eax, eax ; jne 0x44cc14 ; pop rdx ; pop r10 ; ret
0x0000000000476245 : test eax, eax ; jne 0x4762a6 ; mov eax, 0x101 ; syscall
0x0000000000490087 : test eax, eax ; jne 0x490090 ; ret
0x00000000004900a2 : test eax, eax ; jne 0x4900b0 ; ret
0x00000000004902d2 : test eax, eax ; jne 0x4902e0 ; ret
0x000000000047c7f0 : test eax, eax ; js 0x47c802 ; pop rbx ; ret
0x000000000047eb0d : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000047112a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044b589 : test ebp, ebp ; jne 0x44b5a0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c0f4 : test ebp, ebp ; jne 0x44c118 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c127 : test ebp, ebp ; jne 0x44c170 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c153 : test ebp, ebp ; jne 0x44c1d0 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490dc1 : test ebp, ebp ; jne 0x490da8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049197b : test ebp, ebp ; jne 0x491960 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041bcb8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042c0c0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004229c0 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004224b8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000455839 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000478b38 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000445982 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000475209 : test ecx, ecx ; jne 0x4751c0 ; mov rax, rdx ; ret
0x000000000048aa6c : test edi, edi ; call qword ptr [rax + 0x480c438b]
0x0000000000419c29 : test edi, edi ; je 0x419c38 ; test byte ptr [rbx], 1 ; jne 0x419c38 ; call qword ptr [rbx + 0xe8]
0x000000000044b5af : test edi, edi ; jne 0x44b5f0 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b5d7 : test edi, edi ; jne 0x44b610 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c1df : test edi, edi ; jne 0x44c241 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c20f : test edi, edi ; jne 0x44c272 ; mov rdi, qword ptr [r13] ; call r12
0x000000000047ff6a : test edi, edi ; jne 0x47ff40 ; ret
0x00000000004852bd : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4852a8 ; mov rax, rsi ; ret
0x0000000000495cd9 : test edx, edi ; push qword ptr [rax - 0x79] ; cli ; call qword ptr [rax]
0x0000000000441772 : test edx, edx ; je 0x44177a ; bsf eax, edx ; ret
0x000000000044181b : test edx, edx ; je 0x441830 ; bsf rax, rdx ; ret
0x00000000004743ba : test edx, edx ; je 0x4743e0 ; bsf rax, rdx ; ret
0x00000000004155c3 : test edx, edx ; jne 0x4155d0 ; ret
0x000000000041725f : test edx, edx ; jne 0x417250 ; ret
0x00000000004715af : test edx, edx ; jne 0x4715a0 ; ret
0x0000000000474f6a : test edx, edx ; jne 0x474f60 ; ret
0x0000000000445975 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000459f58 : test esi, esi ; je 0x459f5e ; call rsi
0x00000000004742b1 : test esi, esi ; jne 0x4742b9 ; xor rax, rax ; ret
0x0000000000474f71 : test esi, esi ; jne 0x474f79 ; xor rax, rax ; ret
0x000000000044598f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000044c126 : test r13, r13 ; jne 0x44c170 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c152 : test r13, r13 ; jne 0x44c1d0 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000042bea7 : test r8d, r8d ; je 0x42bead ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000475208 : test r9d, r9d ; jne 0x4751c0 ; mov rax, rdx ; ret
0x0000000000480898 : test rax, 0x5b010023 ; ret
0x000000000040040b : test rax, rax ; je 0x400412 ; call rax
0x0000000000423b80 : test rax, rax ; je 0x423b90 ; lea rax, [rdx - 0x10] ; ret
0x000000000044b2e7 : test rax, rax ; je 0x44b2ee ; ret
0x000000000045a053 : test rax, rax ; je 0x45a05a ; call rax
0x000000000045b458 : test rax, rax ; je 0x45b45f ; call rax
0x0000000000485bdf : test rax, rax ; je 0x485bf0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004918f0 : test rax, rax ; je 0x4918fc ; call rax
0x000000000041817b : test rax, rax ; jne 0x418170 ; ret
0x0000000000419113 : test rax, rax ; jne 0x419108 ; ret
0x000000000044b588 : test rbp, rbp ; jne 0x44b5a0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c0f3 : test rbp, rbp ; jne 0x44c118 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000490dc0 : test rbp, rbp ; jne 0x490da8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049197a : test rbp, rbp ; jne 0x491960 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b5ae : test rdi, rdi ; jne 0x44b5f0 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b5d6 : test rdi, rdi ; jne 0x44b610 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c1de : test rdi, rdi ; jne 0x44c241 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c20e : test rdi, rdi ; jne 0x44c272 ; mov rdi, qword ptr [r13] ; call r12
0x000000000047ff69 : test rdi, rdi ; jne 0x47ff40 ; ret
0x000000000044181a : test rdx, rdx ; je 0x441830 ; bsf rax, rdx ; ret
0x00000000004743b9 : test rdx, rdx ; je 0x4743e0 ; bsf rax, rdx ; ret
0x00000000004155c2 : test rdx, rdx ; jne 0x4155d0 ; ret
0x000000000041725e : test rdx, rdx ; jne 0x417250 ; ret
0x00000000004715ae : test rdx, rdx ; jne 0x4715a0 ; ret
0x0000000000459f57 : test rsi, rsi ; je 0x459f5e ; call rsi
0x00000000004742b0 : test rsi, rsi ; jne 0x4742b9 ; xor rax, rax ; ret
0x0000000000474f70 : test rsi, rsi ; jne 0x474f79 ; xor rax, rax ; ret
0x0000000000416313 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043932a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004480dc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447aa5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000448c61 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000447aa9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000448268 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044830f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000439316 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004392fd : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000448045 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000448bcb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000004481b3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000448185 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000448b52 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000447a9b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447a9f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000448722 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x00000000004487e8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000448cdd : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000447ab4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000447ab8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000439633 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004394cc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004392ce : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000439292 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000439795 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000447c58 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000447bbb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000447a5a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042c4a8 : vzeroupper ; ret
0x000000000042c680 : vzeroupper ; xor eax, eax ; ret
0x0000000000422491 : wait ; jnp 0x422493 ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000403461 : wait ; retf
0x00000000004004cb : wait ; sub eax, dword ptr [rax] ; nop ; ret
0x000000000042b4f3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043ec1f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b5e3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b403 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000460fd2 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000047342e : xchg al, dl ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000044086c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000044008c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044047c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc9c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047e36c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004310ae : xchg byte ptr [rax + 0x39480028], ah ; retf 0x8949
0x000000000044de49 : xchg byte ptr [rax + 0xf480004], dl ; ret
0x000000000042be4b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043f77f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ef5f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e73f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044feb8 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042b9a3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043fe3b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f29f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b133 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043ea7f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e25f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000417c28 : xchg byte ptr [rbx + 1], bl ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [r14 + 0x20]
0x000000000043f43f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042bb83 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b313 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000049526c : xchg byte ptr [rbx], dl ; cli ; call qword ptr [rsi]
0x0000000000481a0a : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000042bd63 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a8715 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044032c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fb4c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440c5c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004550f3 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000415231 : xchg byte ptr [rdx + 1], bl ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [r13 + 0x20]
0x000000000042bc73 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043e59f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495764 : xchg byte ptr [rdx], bh ; cli ; call qword ptr [rsi]
0x000000000042b5b5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b6a5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b4c5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000460fe9 : xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000041bab5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043e6d5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f3d5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eef5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044022d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004561e5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000440b5d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b223 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004a59b1 : xchg ch, bh ; call rax
0x00000000004a59ad : xchg ch, bh ; inc dword ptr [rbx - 0x7a] ; std ; call rax
0x0000000000437f9f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043f715 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea15 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043e535 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f235 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044037d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fb9d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b3d5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b1f5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b2e5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b105 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046d670 : xchg dword ptr [rax - 0x76ffffe3], edi ; ret 0x349
0x0000000000402e13 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047c206 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a8718 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044ffa4 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a829f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000463b0b : xchg dword ptr [rbp - 0x77000000], eax ; ret 0x349
0x000000000046cd22 : xchg dword ptr [rbx - 0x76ffffdb], edi ; ret 0x349
0x00000000004a750c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000419649 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov rdi, r14 ; call qword ptr [rbx + 0xe0]
0x000000000046dd1a : xchg dword ptr [rcx - 0x76ffffea], ecx ; ret 0x349
0x000000000046e965 : xchg dword ptr [rcx - 0x76fffff6], esp ; ret 0x349
0x00000000004246b3 : xchg dword ptr [rcx], ebp ; add bh, dh ; ret 0
0x000000000046e93c : xchg dword ptr [rdi - 0x76fffff6], edx ; ret 0x349
0x000000000044cc1e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44cc14 ; pop rdx ; pop r10 ; ret
0x0000000000470194 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046a82a : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000492047 : xchg dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000479850 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c7d4 : xchg dword ptr [rsi - 0x76ffffd5], edi ; ret 0x349
0x00000000004629b8 : xchg dword ptr [rsi - 0x76ffffef], eax ; ret 0x349
0x0000000000462ed0 : xchg dword ptr [rsi - 0x76fffff5], edi ; ret 0x349
0x000000000046f453 : xchg dword ptr [rsi - 0x77000000], edx ; ret 0x349
0x00000000004a76ab : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004b58c5 : xchg eax, ebp ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; std ; call qword ptr [rbx + 1]
0x00000000004b03b9 : xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004a79e9 : xchg eax, ebp ; jge 0x4a79c5 ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004594bb : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044d707 : xchg eax, ebp ; ret
0x000000000048b7a0 : xchg eax, ebp ; ret 0x145
0x000000000047888a : xchg eax, ebp ; ret 0x2041
0x000000000047894a : xchg eax, ebp ; ret 0x2044
0x000000000044acbc : xchg eax, ebp ; ret 0x3948
0x000000000041eb0b : xchg eax, ebp ; ret 0x8348
0x000000000047a510 : xchg eax, ebp ; ret 0xc283
0x0000000000421ccd : xchg eax, ebp ; ret 0xd020
0x000000000040e025 : xchg eax, ebp ; ret 0xd021
0x00000000004650ba : xchg eax, ebp ; ret 0xd120
0x0000000000410942 : xchg eax, ebp ; ret 0xdaf7
0x000000000044e291 : xchg eax, ebp ; ret 0xe1eb
0x000000000048d31a : xchg eax, ebp ; ret 0xf45
0x0000000000449313 : xchg eax, ebp ; retf
0x00000000004a82a2 : xchg eax, ebp ; retf 0x33e6
0x00000000004195dd : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000494e91 : xchg eax, ebp ; stc ; call qword ptr [rax - 0x6a]
0x0000000000494dcd : xchg eax, ebp ; stc ; call qword ptr [rcx]
0x0000000000494e8d : xchg eax, ebp ; stc ; inc eax ; xchg eax, ebp ; stc ; call qword ptr [rax - 0x6a]
0x00000000004a96fc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000412002 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046c897 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004aa08c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000045c098 : xchg eax, ebx ; ret 0x3948
0x0000000000412dfc : xchg eax, ebx ; ret 0x3949
0x0000000000421420 : xchg eax, ebx ; ret 0x3d83
0x0000000000471e55 : xchg eax, ebx ; ret 0x840
0x000000000045cb7d : xchg eax, ebx ; ret 0x854d
0x000000000041ddb9 : xchg eax, ebx ; ret 0xffff
0x0000000000494e7d : xchg eax, ebx ; stc ; call qword ptr [rax + 0x10fff993]
0x0000000000494e81 : xchg eax, ebx ; stc ; call qword ptr [rax]
0x0000000000494e01 : xchg eax, ebx ; stc ; inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x000000000048dcdb : xchg eax, ecx ; add al, bh ; call qword ptr [rax + 0x7f11fe83]
0x00000000004b54fd : xchg eax, ecx ; add byte ptr [rax], al ; sar al, 1 ; cld ; call qword ptr [rbx]
0x0000000000495cf5 : xchg eax, ecx ; cli ; call rax
0x000000000043f821 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004622eb : xchg eax, ecx ; ret 0xffff
0x0000000000494e71 : xchg eax, ecx ; stc ; call qword ptr [rax]
0x000000000043df4f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000410bf2 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048cd0c : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000415634 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004a895f : xchg eax, edi ; call qword ptr [rbx + 0x7c]
0x0000000000495d05 : xchg eax, edi ; cli ; call qword ptr [rax - 0x67]
0x00000000004a7a55 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a7a1a ; mov ecx, 0x5b92ac50 ; retf
0x0000000000425555 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000485651 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x000000000041fc4b : xchg eax, edi ; ret 0x394c
0x000000000040058e : xchg eax, edi ; ret 0xda80
0x0000000000420131 : xchg eax, edi ; ret 0xfae9
0x0000000000420719 : xchg eax, edi ; ret 0xfbe9
0x00000000004a83bd : xchg eax, edi ; retf 0xe152
0x0000000000494fe1 : xchg eax, edi ; stc ; call rax
0x00000000004b6949 : xchg eax, edi ; std ; call qword ptr [rdx]
0x00000000004a96fb : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a7b58 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047baff : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000495cf9 : xchg eax, edx ; cli ; push qword ptr [rax - 0x6c] ; cli ; call qword ptr [rax]
0x00000000004a941d : xchg eax, edx ; jae 0x4a93f3 ; push rsi ; pop rdx ; je 0x4a93e8 ; ret 0xacfc
0x00000000004a7a5c : xchg eax, edx ; pop rbx ; retf
0x0000000000405d48 : xchg eax, edx ; ret 0x8548
0x0000000000483c55 : xchg eax, edx ; ret 0x8949
0x00000000004a750f : xchg eax, edx ; ret 0xf869
0x000000000044797d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000494e75 : xchg eax, edx ; stc ; call qword ptr [rax + 0x10fff992]
0x0000000000494e79 : xchg eax, edx ; stc ; call qword ptr [rax]
0x000000000042beac : xchg eax, edx ; sub eax, edx ; ret
0x000000000042d330 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000435563 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000456f01 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004a9808 : xchg eax, esi ; jnp 0x4a9854 ; retf 0x99e0
0x0000000000422fe6 : xchg eax, esi ; js 0x423012 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000042d3ed : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d34b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000449bd1 : xchg eax, esi ; ret 0xc085
0x00000000004a9dac : xchg eax, esi ; ret 0xcd11
0x0000000000449c2f : xchg eax, esi ; ret 0xd284
0x000000000042d39c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494e99 : xchg eax, esi ; stc ; call qword ptr [rax + 0x68fff997]
0x0000000000494e95 : xchg eax, esi ; stc ; push rax ; xchg eax, esi ; stc ; call qword ptr [rax + 0x68fff997]
0x0000000000482fc4 : xchg eax, esi ; sub dword ptr [rdx], eax ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000452fcc : xchg eax, esp ; add al, byte ptr [rax] ; add al, ch ; pop rbx ; in al, dx ; cli ; call qword ptr [rax + 0x1f0f2e66]
0x000000000046d6b7 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004787a2 : xchg eax, esp ; clc ; call qword ptr [rax + 0x1f0f2e66]
0x0000000000495cfd : xchg eax, esp ; cli ; call qword ptr [rax]
0x00000000004b25c1 : xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b25a9 : xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004a9fbf : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9f49 ; ret 0x48f
0x0000000000467512 : xchg eax, esp ; ret
0x0000000000451ccb : xchg eax, esp ; ret 0x1f0f
0x000000000044ad8b : xchg eax, esp ; ret 0x2044
0x0000000000481bbc : xchg eax, esp ; ret 0x3d
0x000000000041d77e : xchg eax, esp ; ret 0x3de9
0x000000000046e847 : xchg eax, esp ; ret 0x7f3c
0x0000000000485821 : xchg eax, esp ; ret 0x950f
0x0000000000402d64 : xchg eax, esp ; ret 0xb60f
0x0000000000447980 : xchg eax, esp ; ret 0xc085
0x000000000044b0b1 : xchg eax, esp ; ret 0xc221
0x00000000004773e5 : xchg eax, esp ; ret 0xc283
0x000000000044abc8 : xchg eax, esp ; ret 0xca21
0x0000000000401343 : xchg eax, esp ; ret 0xd284
0x00000000004506f6 : xchg eax, esp ; ret 0xd5e9
0x000000000041143d : xchg eax, esp ; ret 0xdaf7
0x000000000048d2bb : xchg eax, esp ; ret 0xf45
0x00000000004008cd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000423bca : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000494e05 : xchg eax, esp ; stc ; call rsi
0x00000000004a79e3 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000481bb0 : xchg eax, r8d ; mov eax, 0x15 ; syscall
0x00000000004a5a5d : xchg ebp, edi ; call qword ptr [rbx + 0x25fffd7d]
0x0000000000400c85 : xchg ebx, esi ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000046d962 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041bb84 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000495cdd : xchg edx, edi ; call qword ptr [rax]
0x00000000004a59b0 : xchg r13b, dil ; call rax
0x00000000004a59ac : xchg r13b, dil ; inc dword ptr [rbx - 0x7a] ; std ; call rax
0x00000000004a2cd9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004114cf : xlatb ; cmp rax, rdi ; jbe 0x41152a ; mov rdi, rbx ; call qword ptr [rbp + 0x68]
0x00000000004764ef : xlatb ; ja 0x476518 ; ret
0x0000000000447ce3 : xlatb ; jb 0x447ce9 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004a8583 : xlatb ; jo 0x4a85f7 ; mov ebp, 0xfb67d10d ; ret
0x0000000000450535 : xlatb ; leave ; add al, ch ; ret 0xbafa
0x0000000000485342 : xlatb ; mov byte ptr [rsi], al ; jne 0x485320 ; mov rax, rsi ; ret
0x0000000000449df1 : xlatb ; mov eax, esi ; syscall
0x0000000000449e00 : xlatb ; mov eax, r8d ; syscall
0x00000000004a7990 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042bfd4 : xlatb ; ret
0x00000000004a9a26 : xlatb ; ret 0x4e27
0x0000000000473fb7 : xlatb ; ret 0x94c
0x000000000042bfbf : xlatb ; ret 0xc085
0x0000000000426ae0 : xlatb ; ret 0xc148
0x000000000042cc44 : xlatb ; ret 0xe883
0x0000000000441794 : xlatb ; ret 0xf66
0x000000000042ce08 : xlatb ; ret 0xff2d
0x00000000004410cd : xlatb ; retf
0x00000000004a79e4 : xlatb ; retf 0xa1eb
0x0000000000474094 : xlatb ; retf 0xc148
0x0000000000474232 : xlatb ; retf 0xc985
0x00000000004a8912 : xlatb ; retf 0xdf7f
0x0000000000425760 : xlatb ; retf 0xead3
0x0000000000474105 : xlatb ; retf 0xfdc5
0x000000000042c3a1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000474165 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042c183 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042c6c2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000441512 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000445936 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004269c6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000426886 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000426746 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000426606 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004264c6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000426386 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000426246 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000426106 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000425fc6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000425e86 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000425d46 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000425c06 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000425ac6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000425986 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000425846 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000445932 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000473f55 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473f66 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000494b7c : xor ah, 0xf8 ; call rax
0x0000000000495084 : xor ah, bl ; stc ; call qword ptr [rax]
0x000000000042553a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004b4efc : xor al, 0 ; add byte ptr [rax], al ; mov r8d, dword ptr [rax] ; add ah, bl ; retf
0x00000000004a750a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004aecf0 : xor al, 0x29 ; add byte ptr [rax], al ; fst qword ptr [rdi] ; cmc ; call qword ptr [rsi]
0x000000000047191b : xor al, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x20]
0x000000000041870b : xor al, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x30]
0x000000000041626b : xor al, 0x48 ; mov edi, ebx ; call qword ptr [rbp + 0x88]
0x00000000004a95a6 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x00000000004b0ffc : xor al, 0xa6 ; stc ; call rsi
0x000000000046fdeb : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048e852 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a86ea : xor al, 0xd8 ; ret
0x0000000000459f55 : xor al, 0xf0 ; test rsi, rsi ; je 0x459f5e ; call rsi
0x0000000000453ace : xor al, 0xf6 ; ret
0x0000000000495819 : xor al, 0xfa ; call qword ptr [rdx + 0x34]
0x000000000049575d : xor al, 0xfa ; call qword ptr [rsi]
0x000000000049591d : xor al, 0xfa ; call rax
0x000000000045bf56 : xor al, 7 ; mov rbx, rax ; mov rdi, r14 ; call rbp
0x0000000000495e04 : xor al, bh ; cli ; call qword ptr [rax - 8]
0x0000000000492f77 : xor al, ch ; ret
0x0000000000468ef0 : xor al, ch ; retf 0xfae4
0x000000000042527a : xor bh, byte ptr [rcx + rbp] ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042c20c : xor bl, al ; nop ; xor eax, eax ; ret
0x0000000000495ed9 : xor bl, bh ; call qword ptr [rax]
0x0000000000495f1d : xor bl, bh ; call qword ptr [rsi]
0x0000000000495f25 : xor bl, bh ; call rcx
0x0000000000495f19 : xor bl, bh ; dec ecx ; xor bl, bh ; call qword ptr [rsi]
0x000000000042c0dd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000412262 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000448ac4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000431104 : xor byte ptr [rax + 0x39480028], ah ; retf 0x8949
0x000000000045c7f8 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000440f41 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004413a2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000412263 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x0000000000476ca4 : xor byte ptr [rax + 1], cl ; retf
0x0000000000495030 : xor byte ptr [rax - 0x5e7f0007], ah ; stc ; call rax
0x0000000000494e60 : xor byte ptr [rax - 0x713f0007], bl ; stc ; call qword ptr [rax - 0x6f000671]
0x000000000044baca : xor byte ptr [rax - 0x75], cl ; jge 0x44ba77 ; mov r12d, r14d ; call r15
0x0000000000441aff : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000474cef : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048b708 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000472592 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044f7a6 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx*8 - 0x18] ; call qword ptr [rsi]
0x000000000044e05f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000403048 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000448ac5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004724de : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; call qword ptr [rax + 0x68]
0x000000000040ead9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040ea13 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000474f3c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004ac3ec : xor byte ptr [rax], al ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rdx]
0x000000000040eaff : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000448fc3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004724ca : xor byte ptr [rax], al ; je 0x4724d0 ; ret
0x000000000048ec6e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000447f35 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000444e01 : xor byte ptr [rbp + rcx*4 + 0x1d], cl ; push rdi ; syscall
0x0000000000495d50 : xor byte ptr [rbp - 0x517f0006], ch ; cli ; call rax
0x0000000000494e8c : xor byte ptr [rbp - 0x6a3f0007], dl ; stc ; call qword ptr [rax - 0x6a]
0x0000000000467719 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000415946 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045044a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046e77b : xor byte ptr [rbx - 0x78f0f608], al ; ret
0x0000000000495230 : xor byte ptr [rbx], dl ; cli ; inc eax ; adc bh, dl ; call qword ptr [rax + 0x12]
0x000000000048b525 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000479163 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000411dc6 : xor byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rdx + 0x90]
0x000000000040408b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004a79ee : xor byte ptr [rcx], ah ; retf
0x00000000004724df : xor byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rax + 0x68]
0x00000000004725e8 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov esi, 0xffffffff ; call qword ptr [rax + 0x18]
0x00000000004138a7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410bf3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000471670 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000495940 : xor byte ptr [rdi], dh ; cli ; inc eax ; cli ; call qword ptr [rax + 0x36]
0x0000000000495c78 : xor byte ptr [rdx + rdi*8 - 1], dl ; push rsi ; cli ; call qword ptr [rax + 0x58]
0x0000000000495ba0 : xor byte ptr [rdx + rdi*8], cl ; call qword ptr [rax + 0xd]
0x00000000004a4694 : xor byte ptr [rdx - 0x4e2f0004], 0xfc ; call rax
0x0000000000495728 : xor byte ptr [rdx], bh ; cli ; inc eax ; cmp edx, edi ; call qword ptr [rax + 0x39]
0x00000000004b1477 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042d0df : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000473f1c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042c0de : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004a96fe : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000494c8c : xor byte ptr [rsi], ch ; stc ; call qword ptr [rax + 0x2f]
0x0000000000495128 : xor ch, bl ; stc ; call qword ptr [rax]
0x0000000000494c95 : xor cl, bh ; call qword ptr [rax + 0x30fff931]
0x0000000000495e28 : xor cl, bh ; cli ; call qword ptr [rax - 7]
0x0000000000412fed : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047e863 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045c367 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048dcfe : xor cl, byte ptr [rax] ; jne 0x48dd1c ; mov rax, qword ptr [rax] ; ret
0x0000000000405d70 : xor cl, ch ; ret
0x0000000000495814 : xor dh, byte ptr [rip + 0x34c2fffa] ; cli ; call qword ptr [rdx + 0x34]
0x000000000045b1b9 : xor dh, dh ; ret 0x4002
0x0000000000495d84 : xor dl, 0xfa ; call qword ptr [rax - 0x5f00050e]
0x0000000000495b2d : xor dl, bh ; call qword ptr [rax + 0x10fffa2f]
0x0000000000495b29 : xor dl, bh ; call qword ptr [rax]
0x0000000000495e48 : xor dl, bh ; cli ; call qword ptr [rax - 6]
0x000000000042459a : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000495d70 : xor dl, dh ; cli ; inc dword ptr [rax - 0xe] ; cli ; call qword ptr [rax - 0xe]
0x0000000000480d30 : xor dl, dh ; ret
0x0000000000466ced : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a8996 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044d02f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048dd6d : xor dword ptr [rax], ecx ; jne 0x48dd75 ; mov qword ptr [rax], rdx ; ret
0x000000000041cc99 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x000000000041579b : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rbp + 0x88]
0x0000000000424622 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004252e1 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000045045b : xor dword ptr [rip + 0xd830000], ecx ; stosb byte ptr [rdi], al ; retf 0x26
0x0000000000495815 : xor eax, 0x34c2fffa ; cli ; call qword ptr [rdx + 0x34]
0x0000000000495951 : xor eax, 0x3500fffa ; cli ; call qword ptr [rax + 0x20fffa34]
0x0000000000495791 : xor eax, 0x3546fffa ; cli ; call rsi
0x00000000004484f3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b5da : xor eax, 0x7d8b48 ; call r12
0x00000000004665fa : xor eax, 0x89ffffe6 ; ret
0x000000000040ead6 : xor eax, dword ptr [0x30] ; call rax
0x0000000000416560 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417344 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045d8a9 : xor eax, eax ; add rsp, 8 ; ret
0x00000000004764eb : xor eax, eax ; cmp rdi, rdx ; ja 0x476518 ; ret
0x000000000044cbf7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004768d8 : xor eax, eax ; leave ; ret
0x000000000045de38 : xor eax, eax ; mov dword ptr [rsi], r10d ; pop rbp ; ret
0x000000000045e097 : xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x00000000004115b3 : xor eax, eax ; mov rdi, rbp ; call qword ptr [rbp + 0x20]
0x0000000000473d02 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405f0f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041559b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ede5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042466c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000413c12 : xor eax, eax ; pop rbx ; ret
0x000000000040ed2d : xor eax, eax ; ret
0x0000000000426cee : xor eax, eax ; sub eax, ecx ; ret
0x000000000044a6aa : xor eax, eax ; syscall
0x00000000004155c0 : xor eax, eax ; test rdx, rdx ; jne 0x4155d0 ; ret
0x000000000042c5cc : xor eax, eax ; vzeroupper ; ret
0x000000000042131b : xor ebp, 0x4ce8fffe ; retf 0xfffe
0x0000000000459b18 : xor ebp, ecx ; ret 0xfffd
0x0000000000459816 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000495f21 : xor ebx, edi ; call rcx
0x000000000044ba32 : xor ecx, dword ptr [rcx + rcx*4 - 0x19] ; mov r13, rbx ; call rbp
0x000000000046558c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004587e9 : xor ecx, ecx ; call r15
0x0000000000474af9 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000044d00c : xor edi, dword ptr [rax] ; ret 0x2f75
0x0000000000494cdd : xor edi, ecx ; call qword ptr [rax + 0x4c]
0x0000000000401378 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044b406 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041b961 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044b21c : xor edi, edi ; syscall
0x0000000000495921 : xor edi, edx ; inc dword ptr [rax + 0x3a] ; cli ; call rax
0x000000000040ea10 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000495b65 : xor edx, edi ; call qword ptr [rax + 0xfffa30]
0x00000000004959e5 : xor edx, edi ; call rdx
0x000000000045d324 : xor edx, edi ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000044f6c3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000474afb : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000042021c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000412470 : xor edx, edx ; mov rdi, r15 ; call qword ptr [rbp + 0x80]
0x00000000004140b4 : xor edx, edx ; mov rdi, rbx ; call qword ptr [rax + 0x80]
0x000000000044c040 : xor edx, edx ; xor esi, esi ; call rbp
0x0000000000416b16 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call qword ptr [r15 + 0x58]
0x00000000004a895d : xor esi, dword ptr [rcx] ; xchg eax, edi ; call qword ptr [rbx + 0x7c]
0x0000000000463d84 : xor esi, esi ; call 0
0x000000000044c042 : xor esi, esi ; call rbp
0x000000000044b4f4 : xor esi, esi ; mov r12d, edx ; call rbp
0x0000000000410b60 : xor esi, esi ; mov rax, rsi ; ret
0x0000000000416b18 : xor esi, esi ; mov rdi, rbx ; call qword ptr [r15 + 0x58]
0x00000000004587e8 : xor r9d, r9d ; call r15
0x000000000040ead5 : xor rax, qword ptr [0x30] ; call rax
0x000000000040ead4 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000445950 : xor rax, rax ; ret
0x000000000040ea0f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040ea0e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 44426
